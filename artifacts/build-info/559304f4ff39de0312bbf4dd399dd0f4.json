{
	"id": "559304f4ff39de0312bbf4dd399dd0f4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"PancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport './interfaces/IPancakePair.sol';\nimport './PancakeERC20.sol';\nimport './libraries/Math.sol';\nimport './libraries/UQ112x112.sol';\nimport './interfaces/IERC20.sol';\nimport './interfaces/IPancakeFactory.sol';\nimport './interfaces/IPancakeCallee.sol';\n\ncontract PancakePair is IPancakePair, PancakeERC20 {\n    using SafeMath  for uint;\n    using UQ112x112 for uint224;\n\n    uint public constant MINIMUM_LIQUIDITY = 10**3;\n    bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\n\n    address public factory;\n    address public token0;\n    address public token1;\n\n    uint112 private reserve0;           // uses single storage slot, accessible via getReserves\n    uint112 private reserve1;           // uses single storage slot, accessible via getReserves\n    uint32  private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, 'Pancake: LOCKED');\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'Pancake: TRANSFER_FAILED');\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() public {\n        factory = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(address _token0, address _token1) external {\n        require(msg.sender == factory, 'Pancake: FORBIDDEN'); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'Pancake: OVERFLOW');\n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 8/25 of the growth in sqrt(k)\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n        address feeTo = IPancakeFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(8);\n                    uint denominator = rootK.mul(17).add(rootKLast.mul(8));\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n           _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n        }\n        require(liquidity > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_MINTED');\n        _mint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(address to) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        address _token0 = token0;                                // gas savings\n        address _token1 = token1;                                // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(amount0 > 0 && amount1 > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_BURNED');\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n        require(amount0Out > 0 || amount1Out > 0, 'Pancake: INSUFFICIENT_OUTPUT_AMOUNT');\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'Pancake: INSUFFICIENT_LIQUIDITY');\n\n        uint balance0;\n        uint balance1;\n        { // scope for _token{0,1}, avoids stack too deep errors\n        address _token0 = token0;\n        address _token1 = token1;\n        require(to != _token0 && to != _token1, 'Pancake: INVALID_TO');\n        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n        if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n        require(amount0In > 0 || amount1In > 0, 'Pancake: INSUFFICIENT_INPUT_AMOUNT');\n        { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n        uint balance0Adjusted = (balance0.mul(10000).sub(amount0In.mul(25)));\n        uint balance1Adjusted = (balance1.mul(10000).sub(amount1In.mul(25)));\n        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2), 'Pancake: K');\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\n        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\n    }\n}\n"
			},
			"interfaces/IPancakeCallee.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeCallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"interfaces/IPancakeFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\n}\n"
			},
			"interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			},
			"libraries/UQ112x112.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2**112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"
			},
			"libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"PancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./interfaces/IPancakeERC20.sol\";\nimport \"./libraries/SafeMath.sol\";\n\ncontract PancakeERC20 is IPancakeERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"Pancake LPs\";\n    string public constant symbol = \"Cake-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\");\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"interfaces/IPancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakePair {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(address indexed sender, uint256 amount0, uint256 amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (\n            uint112 reserve0,\n            uint112 reserve1,\n            uint32 blockTimestampLast\n        );\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
			},
			"interfaces/IPancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"PancakeERC20.sol": {
				"PancakeERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PancakeERC20.sol\":139:3667  contract PancakeERC20 is IPancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PancakeERC20.sol\":971:1418  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"PancakeERC20.sol\":1157:1252  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n    /* \"PancakeERC20.sol\":1061:1068  chainid */\n  chainid\n  swap1\n    /* \"PancakeERC20.sol\":1157:1252  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"PancakeERC20.sol\":1286:1290  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x0b\n  dup4\n  mstore\n  shl(0xa8, 0x50616e63616b65204c5073)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"PancakeERC20.sol\":1320:1330  bytes(\"1\") */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"PancakeERC20.sol\":1270:1292  keccak256(bytes(name)) */\n  0xe87cb5a4dc26cf9451529a20899fcee996799afd48d7c0db7c25e150b364661d\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"PancakeERC20.sol\":1310:1331  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"PancakeERC20.sol\":1382:1386  this */\n  address\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"PancakeERC20.sol\":1106:1411  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"PancakeERC20.sol\":1087:1103  DOMAIN_SEPARATOR */\n  0x03\n    /* \"PancakeERC20.sol\":1087:1411  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"PancakeERC20.sol\":139:3667  contract PancakeERC20 is IPancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"PancakeERC20.sol\":139:3667  contract PancakeERC20 is IPancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"PancakeERC20.sol\":139:3667  contract PancakeERC20 is IPancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PancakeERC20.sol\":217:260  string public constant name = \"Pancake LPs\" */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":217:260  string public constant name = \"Pancake LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":354:380  uint256 public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"PancakeERC20.sol\":648:756  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"PancakeERC20.sol\":313:348  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":507:538  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"PancakeERC20.sol\":386:430  mapping(address => uint256) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"PancakeERC20.sol\":386:430  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"PancakeERC20.sol\":762:803  mapping(address => uint256) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"PancakeERC20.sol\":762:803  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"PancakeERC20.sol\":266:307  string public constant symbol = \"Cake-LP\" */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"PancakeERC20.sol\":2457:2596  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2457:2596  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"PancakeERC20.sol\":436:500  mapping(address => mapping(address => uint256)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":436:500  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"PancakeERC20.sol\":217:260  string public constant name = \"Pancake LPs\" */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xa8, 0x50616e63616b65204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_26:\n        /* \"PancakeERC20.sol\":2371:2375  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2387:2423  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"PancakeERC20.sol\":2396:2406  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2408:2415  spender */\n      dup5\n        /* \"PancakeERC20.sol\":2417:2422  value */\n      dup5\n        /* \"PancakeERC20.sol\":2387:2395  _approve */\n      tag_61\n        /* \"PancakeERC20.sol\":2387:2423  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n      pop\n        /* \"PancakeERC20.sol\":2440:2444  true */\n      0x01\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":354:380  uint256 public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2733:2748  allowance[from] */\n      dup4\n      and\n        /* \"PancakeERC20.sol\":2713:2717  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2733:2748  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2733:2742  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2733:2748  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":2749:2759  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2733:2760  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"PancakeERC20.sol\":2733:2775  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"PancakeERC20.sol\":2729:2870  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_63\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2821:2836  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2821:2830  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2821:2836  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":2837:2847  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2821:2848  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2821:2859  allowance[from][msg.sender].sub(value) */\n      tag_64\n      swap1\n        /* \"PancakeERC20.sol\":2853:2858  value */\n      dup4\n        /* \"PancakeERC20.sol\":2821:2859  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":2821:2852  allowance[from][msg.sender].sub */\n      tag_65\n        /* \"PancakeERC20.sol\":2821:2859  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2791:2806  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2791:2800  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2791:2806  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":2807:2817  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2791:2818  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"PancakeERC20.sol\":2791:2859  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"PancakeERC20.sol\":2729:2870  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_63:\n        /* \"PancakeERC20.sol\":2879:2905  _transfer(from, to, value) */\n      tag_66\n        /* \"PancakeERC20.sol\":2889:2893  from */\n      dup5\n        /* \"PancakeERC20.sol\":2895:2897  to */\n      dup5\n        /* \"PancakeERC20.sol\":2899:2904  value */\n      dup5\n        /* \"PancakeERC20.sol\":2879:2888  _transfer */\n      tag_67\n        /* \"PancakeERC20.sol\":2879:2905  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n      pop\n        /* \"PancakeERC20.sol\":2922:2926  true */\n      0x01\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":648:756  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"PancakeERC20.sol\":690:756  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":648:756  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":313:348  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"PancakeERC20.sol\":346:348  18 */\n      0x12\n        /* \"PancakeERC20.sol\":313:348  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":507:538  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":386:430  mapping(address => uint256) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":762:803  mapping(address => uint256) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":266:307  string public constant symbol = \"Cake-LP\" */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xcc, 0x043616b652d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2457:2596  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"PancakeERC20.sol\":2520:2524  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2536:2568  _transfer(msg.sender, to, value) */\n      tag_60\n        /* \"PancakeERC20.sol\":2546:2556  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2558:2560  to */\n      dup5\n        /* \"PancakeERC20.sol\":2562:2567  value */\n      dup5\n        /* \"PancakeERC20.sol\":2536:2545  _transfer */\n      tag_67\n        /* \"PancakeERC20.sol\":2536:2568  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n    tag_55:\n        /* \"PancakeERC20.sol\":3152:3167  block.timestamp */\n      timestamp\n        /* \"PancakeERC20.sol\":3140:3148  deadline */\n      dup5\n        /* \"PancakeERC20.sol\":3140:3167  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"PancakeERC20.sol\":3132:3188  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_71\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_71:\n        /* \"PancakeERC20.sol\":3300:3316  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3395:3408  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"PancakeERC20.sol\":3198:3212  bytes32 digest */\n      0x00\n        /* \"PancakeERC20.sol\":3395:3408  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":3395:3401  nonces */\n      0x04\n        /* \"PancakeERC20.sol\":3395:3408  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":3395:3410  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"PancakeERC20.sol\":3344:3421  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"PancakeERC20.sol\":690:756  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":3344:3421  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":3344:3421  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"PancakeERC20.sol\":3334:3422  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"PancakeERC20.sol\":3238:3436  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"PancakeERC20.sol\":3238:3436  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"PancakeERC20.sol\":3215:3446  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"PancakeERC20.sol\":3198:3212  bytes32 digest */\n      swap2\n      swap4\n        /* \"PancakeERC20.sol\":3395:3410  nonces[owner]++ */\n      swap3\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"PancakeERC20.sol\":3395:3410  nonces[owner]++ */\n      dup6\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n      pop\n      pop\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3527:3557  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"PancakeERC20.sol\":3527:3586  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_73\n      jumpi\n      pop\n        /* \"PancakeERC20.sol\":3581:3586  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3561:3586  recoveredAddress == owner */\n      and\n        /* \"PancakeERC20.sol\":3561:3577  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3561:3586  recoveredAddress == owner */\n      and\n      eq\n        /* \"PancakeERC20.sol\":3527:3586  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"PancakeERC20.sol\":3519:3617  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_74\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_74:\n        /* \"PancakeERC20.sol\":3627:3658  _approve(owner, spender, value) */\n      tag_75\n        /* \"PancakeERC20.sol\":3636:3641  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3643:3650  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3652:3657  value */\n      dup10\n        /* \"PancakeERC20.sol\":3627:3635  _approve */\n      tag_61\n        /* \"PancakeERC20.sol\":3627:3658  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":436:500  mapping(address => mapping(address => uint256)) public allowance */\n    tag_58:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":1844:2043  function _approve(... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":1957:1973  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":1957:1966  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":1957:1973  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":1957:1982  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"PancakeERC20.sol\":1957:1990  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"PancakeERC20.sol\":2005:2036  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1844:2043  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_65:\n        /* \"libraries/SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"PancakeERC20.sol\":2049:2298  function _transfer(... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2175:2190  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2175:2184  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2175:2190  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2175:2201  balanceOf[from].sub(value) */\n      tag_80\n      swap1\n        /* \"PancakeERC20.sol\":2195:2200  value */\n      dup3\n        /* \"PancakeERC20.sol\":2175:2201  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":2175:2194  balanceOf[from].sub */\n      tag_65\n        /* \"PancakeERC20.sol\":2175:2201  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2157:2172  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2157:2166  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2157:2172  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"PancakeERC20.sol\":2157:2201  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"PancakeERC20.sol\":2227:2240  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2227:2251  balanceOf[to].add(value) */\n      tag_81\n      swap1\n        /* \"PancakeERC20.sol\":2245:2250  value */\n      dup3\n        /* \"PancakeERC20.sol\":2227:2251  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":2227:2244  balanceOf[to].add */\n      tag_82\n        /* \"PancakeERC20.sol\":2227:2251  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2211:2224  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2211:2220  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2211:2224  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"PancakeERC20.sol\":2211:2251  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"PancakeERC20.sol\":2266:2291  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"PancakeERC20.sol\":2211:2224  balanceOf[to] */\n      swap2\n      swap4\n        /* \"PancakeERC20.sol\":2266:2291  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":2049:2298  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_82:\n        /* \"libraries/SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a72315820cefedd3ac2c09528a7c2c18d93483fbadafe11425288e59a1e25561b0d29013d64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051469080605261096d8239604080519182900360520182208282018252600b83526a50616e63616b65204c507360a81b6020938401528151808301835260018152603160f81b908401528151808401919091527fe87cb5a4dc26cf9451529a20899fcee996799afd48d7c0db7c25e150b364661d818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c0909401905282519201919091206003555061087e806100ef6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610337565b604080519115158252519081900360200190f35b61019961034e565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610354565b6101996103ee565b6101f1610412565b6040805160ff9092168252519081900360200190f35b610199610417565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041d565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042f565b6100dc610441565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610464565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610471565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610671565b6040518060400160405280600b81526020016a50616e63616b65204c507360a81b81525081565b600061034433848461068e565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d9576001600160a01b03841660009081526002602090815260408083203384529091529020546103b4908363ffffffff6106f016565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e4848484610740565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6000610344338484610740565b428410156104b9576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061060a5750886001600160a01b0316816001600160a01b0316145b61065b576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61066689898961068e565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610348576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610769908263ffffffff6106f016565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461079e908263ffffffff6107fa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610348576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820cefedd3ac2c09528a7c2c18d93483fbadafe11425288e59a1e25561b0d29013d64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x96D DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP4 MSTORE PUSH11 0x50616E63616B65204C5073 PUSH1 0xA8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xE87CB5A4DC26CF9451529A20899FCEE996799AFD48D7C0DB7C25E150B364661D DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH2 0x87E DUP1 PUSH2 0xEF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x354 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41D JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42F JUMP JUMPDEST PUSH2 0xDC PUSH2 0x441 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x464 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x50616E63616B65204C5073 PUSH1 0xA8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x43616B652D4C5 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x60A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x666 DUP10 DUP10 DUP10 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x769 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x79E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7FA AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCE INVALID 0xDD GASPRICE 0xC2 0xC0 SWAP6 0x28 0xA7 0xC2 0xC1 DUP14 SWAP4 0x48 EXTCODEHASH 0xBA 0xDA INVALID GT TIMESTAMP MSTORE DUP9 0xE5 SWAP11 0x1E 0x25 JUMP SHL 0xD 0x29 ADD RETURNDATASIZE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "139:3528:0:-;;;971:447;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1157:95:0;;1061:7;;1157:95;;;;;;;;;;;;;;;;1286:4;;;;;;;;-1:-1:-1;;;1286:4:0;;;;;1320:10;;;;;;;;;;-1:-1:-1;;;1320:10:0;;;;1129:272;;;;;;;;;1270:22;1129:272;;;;1310:21;1129:272;;;;;;;;;;;1382:4;1129:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1129:272:0;;;;;;1106:305;;;;;;;;1087:16;:324;-1:-1:-1;139:3528:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610337565b604080519115158252519081900360200190f35b61019961034e565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610354565b6101996103ee565b6101f1610412565b6040805160ff9092168252519081900360200190f35b610199610417565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041d565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042f565b6100dc610441565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610464565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610471565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610671565b6040518060400160405280600b81526020016a50616e63616b65204c507360a81b81525081565b600061034433848461068e565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d9576001600160a01b03841660009081526002602090815260408083203384529091529020546103b4908363ffffffff6106f016565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e4848484610740565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6000610344338484610740565b428410156104b9576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061060a5750886001600160a01b0316816001600160a01b0316145b61065b576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61066689898961068e565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610348576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610769908263ffffffff6106f016565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461079e908263ffffffff6107fa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610348576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820cefedd3ac2c09528a7c2c18d93483fbadafe11425288e59a1e25561b0d29013d64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x354 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41D JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42F JUMP JUMPDEST PUSH2 0xDC PUSH2 0x441 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x464 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x50616E63616B65204C5073 PUSH1 0xA8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x43616B652D4C5 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x60A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x666 DUP10 DUP10 DUP10 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x769 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x79E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7FA AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCE INVALID 0xDD GASPRICE 0xC2 0xC0 SWAP6 0x28 0xA7 0xC2 0xC1 DUP14 SWAP4 0x48 EXTCODEHASH 0xBA 0xDA INVALID GT TIMESTAMP MSTORE DUP9 0xE5 SWAP11 0x1E 0x25 JUMP SHL 0xD 0x29 ADD RETURNDATASIZE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "139:3528:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:3528:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;217:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2304:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2304:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;354:26;;;:::i;:::-;;;;;;;;;;;;;;;;2602:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2602:331:0;;;;;;;;;;;;;;;;;:::i;648:108::-;;;:::i;313:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;507:31;;;:::i;386:44::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;386:44:0;-1:-1:-1;;;;;386:44:0;;:::i;762:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;762:41:0;-1:-1:-1;;;;;762:41:0;;:::i;266:::-;;;:::i;2457:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2457:139:0;;;;;;;;:::i;2939:726::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2939:726:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;436:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;436:64:0;;;;;;;;;;:::i;217:43::-;;;;;;;;;;;;;;-1:-1:-1;;;217:43:0;;;;:::o;2304:147::-;2371:4;2387:36;2396:10;2408:7;2417:5;2387:8;:36::i;:::-;-1:-1:-1;2440:4:0;2304:147;;;;;:::o;354:26::-;;;;:::o;2602:331::-;-1:-1:-1;;;;;2733:15:0;;2713:4;2733:15;;;:9;:15;;;;;;;;2749:10;2733:27;;;;;;;;-1:-1:-1;;2733:42:0;2729:141;;-1:-1:-1;;;;;2821:15:0;;;;;;:9;:15;;;;;;;;2837:10;2821:27;;;;;;;;:38;;2853:5;2821:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;2791:15:0;;;;;;:9;:15;;;;;;;;2807:10;2791:27;;;;;;;:68;2729:141;2879:26;2889:4;2895:2;2899:5;2879:9;:26::i;:::-;-1:-1:-1;2922:4:0;2602:331;;;;;:::o;648:108::-;690:66;648:108;:::o;313:35::-;346:2;313:35;:::o;507:31::-;;;;:::o;386:44::-;;;;;;;;;;;;;:::o;762:41::-;;;;;;;;;;;;;:::o;266:::-;;;;;;;;;;;;;;-1:-1:-1;;;266:41:0;;;;:::o;2457:139::-;2520:4;2536:32;2546:10;2558:2;2562:5;2536:9;:32::i;2939:726::-;3152:15;3140:8;:27;;3132:56;;;;;-1:-1:-1;;;3132:56:0;;;;;;;;;;;;-1:-1:-1;;;3132:56:0;;;;;;;;;;;;;;;3300:16;;-1:-1:-1;;;;;3395:13:0;;;3198:14;3395:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3344:77;;690:66;3344:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3344:77:0;;;;;3334:88;;;;;;-1:-1:-1;;;3238:198:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3238:198:0;;;;;;3215:231;;;;;;;;;3483:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3198:14;;3395:15;3483:26;;;;;-1:-1:-1;;3483:26:0;;;;;;;;;;3395:15;3483:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3483:26:0;;-1:-1:-1;;3483:26:0;;;-1:-1:-1;;;;;;;3527:30:0;;;;;;:59;;;3581:5;-1:-1:-1;;;;;3561:25:0;:16;-1:-1:-1;;;;;3561:25:0;;3527:59;3519:98;;;;;-1:-1:-1;;;3519:98:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3627:31;3636:5;3643:7;3652:5;3627:8;:31::i;:::-;2939:726;;;;;;;;;:::o;436:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1844:199::-;-1:-1:-1;;;;;1957:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2005:31;;;;;;;;;;;;;;;;;1844:199;;;:::o;339:136:8:-;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;;;2049:249:0;-1:-1:-1;;;;;2175:15:0;;;;;;:9;:15;;;;;;:26;;2195:5;2175:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2157:15:0;;;;;;;:9;:15;;;;;;:44;;;;2227:13;;;;;;;:24;;2245:5;2227:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2211:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2266:25;;;;;;;2211:13;;2266:25;;;;;;;;;;;;;2049:249;;;:::o;198:135:8:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "434800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 3667,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "MSTORE"
								},
								{
									"begin": 971,
									"end": 1418,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "MLOAD"
								},
								{
									"begin": 1061,
									"end": 1068,
									"name": "CHAINID"
								},
								{
									"begin": 1061,
									"end": 1068,
									"name": "SWAP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "CODECOPY"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "MLOAD"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "SWAP2"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "SWAP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "SUB"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "ADD"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "KECCAK256"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP3"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP3"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "ADD"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP3"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "MSTORE"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP4"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "50616E63616B65204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "SWAP4"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP5"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "ADD"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "MSTORE"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP2"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MLOAD"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP1"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP4"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "ADD"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP4"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MSTORE"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP2"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "SWAP1"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP5"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "ADD"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MLOAD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1270,
									"end": 1292,
									"name": "PUSH",
									"value": "E87CB5A4DC26CF9451529A20899FCEE996799AFD48D7C0DB7C25E150B364661D"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP4"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1310,
									"end": 1331,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP3"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1382,
									"end": 1386,
									"name": "ADDRESS"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP7"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "DUP3"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "MLOAD"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP3"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "ADD"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP2"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP1"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP2"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "KECCAK256"
								},
								{
									"begin": 1087,
									"end": 1103,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1087,
									"end": 1411,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "DUP1"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "CODECOPY"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3667,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cefedd3ac2c09528a7c2c18d93483fbadafe11425288e59a1e25561b0d29013d64736f6c63430005100032",
									".code": [
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "MSTORE"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "POP"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "LT"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "SHR"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3667,
											"name": "REVERT"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP6"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "RETURN"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "AND"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ADD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "MLOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ISZERO"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ISZERO"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP3"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "MSTORE"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "MLOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SUB"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ADD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "RETURN"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "MLOAD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP2"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP3"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "MSTORE"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "MLOAD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP2"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SUB"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "ADD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "RETURN"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMPDEST"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMPDEST"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "MLOAD"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP3"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "AND"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP3"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "MSTORE"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "MLOAD"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SUB"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "ADD"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "RETURN"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMPDEST"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "AND"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "DUP1"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "AND"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "JUMPDEST"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "ADD"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMPDEST"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "AND"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "AND"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP3"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "AND"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMPDEST"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "STOP"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B65204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2371,
											"end": 2375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2396,
											"end": 2406,
											"name": "CALLER"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP5"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP5"
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP3"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "POP"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "POP"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SLOAD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP2"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "AND"
										},
										{
											"begin": 2713,
											"end": 2717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "KECCAK256"
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "CALLER"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SWAP2"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "KECCAK256"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2733,
											"end": 2775,
											"name": "EQ"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP5"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "AND"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP2"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP2"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP1"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP4"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "KECCAK256"
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "CALLER"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "DUP5"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SWAP2"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "KECCAK256"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SLOAD"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "SWAP1"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "DUP4"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2852,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "AND"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP6"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "AND"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP2"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP2"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP1"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP4"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "KECCAK256"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "CALLER"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "DUP5"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP2"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "KECCAK256"
										},
										{
											"begin": 2791,
											"end": 2859,
											"name": "SSTORE"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "JUMPDEST"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2889,
											"end": 2893,
											"name": "DUP5"
										},
										{
											"begin": 2895,
											"end": 2897,
											"name": "DUP5"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP5"
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP4"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP3"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMPDEST"
										},
										{
											"begin": 690,
											"end": 756,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "DUP2"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMPDEST"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "SLOAD"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "KECCAK256"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SLOAD"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "MSTORE"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "DUP2"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "MSTORE"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "KECCAK256"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SLOAD"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "DUP2"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "43616B652D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "JUMPDEST"
										},
										{
											"begin": 2520,
											"end": 2524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2568,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2546,
											"end": 2556,
											"name": "CALLER"
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "DUP5"
										},
										{
											"begin": 2562,
											"end": 2567,
											"name": "DUP5"
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2536,
											"end": 2568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMPDEST"
										},
										{
											"begin": 3152,
											"end": 3167,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3140,
											"end": 3148,
											"name": "DUP5"
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "LT"
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "ISZERO"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "JUMPI"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP2"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MLOAD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP2"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SUB"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "REVERT"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "JUMPDEST"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP10"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP2"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP2"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "MSTORE"
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "SWAP1"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP2"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "MSTORE"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP4"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "KECCAK256"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SLOAD"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP3"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "ADD"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP3"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP3"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MLOAD"
										},
										{
											"begin": 690,
											"end": 756,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP2"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP5"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP14"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "AND"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP13"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP12"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP2"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP3"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "DUP4"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP6"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP6"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP5"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP3"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "DUP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "MLOAD"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "DUP4"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "ADD"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP1"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "KECCAK256"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP6"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP4"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP7"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP10"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "AND"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP6"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP9"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP8"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MLOAD"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "SWAP2"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "SWAP4"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SUB"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP6"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "GAS"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "STATICCALL"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "DUP2"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "AND"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "ISZERO"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "DUP1"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "ISZERO"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "SWAP1"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "JUMPI"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "POP"
										},
										{
											"begin": 3581,
											"end": 3586,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3561,
											"end": 3586,
											"name": "AND"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3561,
											"end": 3586,
											"name": "AND"
										},
										{
											"begin": 3561,
											"end": 3586,
											"name": "EQ"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "JUMPDEST"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP2"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MLOAD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP2"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SUB"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "REVERT"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "JUMPDEST"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "DUP10"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP10"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP10"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "JUMPDEST"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP4"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP5"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "KECCAK256"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP3"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "KECCAK256"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SLOAD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP1"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP5"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "AND"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP1"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP4"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "KECCAK256"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP5"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP8"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "AND"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP1"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP5"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP5"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP3"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP2"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP3"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "KECCAK256"
										},
										{
											"begin": 1957,
											"end": 1990,
											"name": "DUP6"
										},
										{
											"begin": 1957,
											"end": 1990,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1990,
											"name": "SSTORE"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MLOAD"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP6"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MSTORE"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MLOAD"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP3"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SUB"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "ADD"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "LOG3"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "DUP4"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "AND"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "SWAP1"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "DUP2"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "MSTORE"
										},
										{
											"begin": 2175,
											"end": 2184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "MSTORE"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "SWAP1"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "KECCAK256"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "SLOAD"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "SWAP1"
										},
										{
											"begin": 2195,
											"end": 2200,
											"name": "DUP3"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "AND"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP6"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP3"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "KECCAK256"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SWAP4"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SWAP4"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SSTORE"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SWAP1"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP5"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "AND"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP2"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "MSTORE"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "KECCAK256"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SLOAD"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "AND"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP5"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "AND"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "MSTORE"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "MSTORE"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP3"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "KECCAK256"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SWAP5"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SWAP5"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SSTORE"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "MLOAD"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP6"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP2"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "MSTORE"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "MLOAD"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP4"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP8"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "AND"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP2"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SUB"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "ADD"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "LOG3"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PancakeERC20.sol\":\"PancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"PancakeERC20.sol\":{\"keccak256\":\"0x69ddd116a94c41092cb2616e57d5d59e674305c966ac9953ffb04d4ce5249ce7\",\"urls\":[\"bzz-raw://642da8a2b220b7867963d125275724429e4919c51c36fd3b2b287adf34bf3647\",\"dweb:/ipfs/QmbFe82gVJGQHpAxydNQAKEWjqzqwsYtLTMiEsBBYnKKaB\"]},\"interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]},\"libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"PancakePair.sol": {
				"PancakePair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PancakePair.sol\":318:9804  contract PancakePair is IPancakePair, PancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PancakePair.sol\":1162:1163  1 */\n  0x01\n    /* \"PancakePair.sol\":1138:1163  uint private unlocked = 1 */\n  0x0c\n  sstore\n    /* \"PancakePair.sol\":2214:2272  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"PancakeERC20.sol\":1157:1252  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n    /* \"PancakeERC20.sol\":1061:1068  chainid */\n  chainid\n  swap1\n    /* \"PancakeERC20.sol\":1157:1252  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"PancakeERC20.sol\":1286:1290  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x0b\n  dup4\n  mstore\n  shl(0xa8, 0x50616e63616b65204c5073)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"PancakeERC20.sol\":1320:1330  bytes(\"1\") */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"PancakeERC20.sol\":1270:1292  keccak256(bytes(name)) */\n  0xe87cb5a4dc26cf9451529a20899fcee996799afd48d7c0db7c25e150b364661d\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"PancakeERC20.sol\":1310:1331  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"PancakeERC20.sol\":1382:1386  this */\n  address\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"PancakeERC20.sol\":1129:1401  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"PancakeERC20.sol\":1106:1411  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"PancakeERC20.sol\":1087:1103  DOMAIN_SEPARATOR */\n  0x03\n    /* \"PancakeERC20.sol\":1087:1411  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"PancakePair.sol\":2245:2252  factory */\n  0x05\n    /* \"PancakePair.sol\":2245:2265  factory = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"PancakePair.sol\":2255:2265  msg.sender */\n  caller\n    /* \"PancakePair.sol\":2245:2265  factory = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"PancakePair.sol\":318:9804  contract PancakePair is IPancakePair, PancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"PancakePair.sol\":318:9804  contract PancakePair is IPancakePair, PancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"PancakePair.sol\":318:9804  contract PancakePair is IPancakePair, PancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd21220a7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xba9a7a56\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x7ecebe00\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x6a627842\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup2\n      calldataload\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      0x40\n      dup4\n      add\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_40:\n      pop\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_41\n      jump\t// in\n    tag_36:\n      stop\n        /* \"PancakeERC20.sol\":217:260  string public constant name = \"Pancake LPs\" */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_44:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_44)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":217:260  string public constant name = \"Pancake LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_47:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":1304:1531  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffffff\n      and\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakePair.sol\":614:635  address public token0 */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":354:380  uint256 public totalSupply */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"PancakeERC20.sol\":648:756  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_10:\n      tag_55\n      tag_61\n      jump\t// in\n        /* \"PancakeERC20.sol\":313:348  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":507:538  bytes32 public DOMAIN_SEPARATOR */\n    tag_12:\n      tag_55\n      tag_65\n      jump\t// in\n        /* \"PancakePair.sol\":2334:2538  function initialize(address _token0, address _token1) external {... */\n    tag_13:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":2334:2538  function initialize(address _token0, address _token1) external {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_68\n      jump\t// in\n        /* \"PancakePair.sol\":958:990  uint public price0CumulativeLast */\n    tag_14:\n      tag_55\n      tag_70\n      jump\t// in\n        /* \"PancakePair.sol\":996:1028  uint public price1CumulativeLast */\n    tag_15:\n      tag_55\n      tag_72\n      jump\t// in\n        /* \"PancakePair.sol\":4492:5709  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_16:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n      pop\n        /* \"PancakePair.sol\":4492:5709  function mint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_75\n      jump\t// in\n        /* \"PancakeERC20.sol\":386:430  mapping(address => uint256) public balanceOf */\n    tag_17:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n      pop\n        /* \"PancakeERC20.sol\":386:430  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_78\n      jump\t// in\n        /* \"PancakePair.sol\":1034:1051  uint public kLast */\n    tag_18:\n      tag_55\n      tag_80\n      jump\t// in\n        /* \"PancakeERC20.sol\":762:803  mapping(address => uint256) public nonces */\n    tag_19:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n      pop\n        /* \"PancakeERC20.sol\":762:803  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"PancakePair.sol\":5818:7260  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n      pop\n        /* \"PancakePair.sol\":5818:7260  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_86\n      jump\t// in\n    tag_84:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"PancakeERC20.sol\":266:307  string public constant symbol = \"Cake-LP\" */\n    tag_21:\n      tag_42\n      tag_88\n      jump\t// in\n        /* \"PancakeERC20.sol\":2457:2596  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_22:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2457:2596  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_95\n      jump\t// in\n        /* \"PancakePair.sol\":439:485  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_23:\n      tag_55\n      tag_97\n      jump\t// in\n        /* \"PancakePair.sol\":9271:9600  function skim(address to) external lock {... */\n    tag_24:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n      pop\n        /* \"PancakePair.sol\":9271:9600  function skim(address to) external lock {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_100\n      jump\t// in\n        /* \"PancakePair.sol\":586:608  address public factory */\n    tag_25:\n      tag_53\n      tag_102\n      jump\t// in\n        /* \"PancakePair.sol\":641:662  address public token1 */\n    tag_26:\n      tag_53\n      tag_104\n      jump\t// in\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n    tag_27:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_107\n      jump\t// in\n        /* \"PancakeERC20.sol\":436:500  mapping(address => mapping(address => uint256)) public allowance */\n    tag_28:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":436:500  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_110\n      jump\t// in\n        /* \"PancakePair.sol\":9646:9802  function sync() external lock {... */\n    tag_29:\n      tag_36\n      tag_112\n      jump\t// in\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n    tag_41:\n        /* \"PancakePair.sol\":1203:1211  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1215:1216  1 */\n      0x01\n        /* \"PancakePair.sol\":1203:1216  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1195:1236  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n        /* \"PancakePair.sol\":1257:1258  0 */\n      0x00\n        /* \"PancakePair.sol\":1246:1254  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1246:1258  unlocked = 0 */\n      sstore\n        /* \"PancakePair.sol\":7482:7496  amount0Out > 0 */\n      dup5\n      iszero\n      iszero\n      dup1\n        /* \"PancakePair.sol\":7482:7514  amount0Out > 0 || amount1Out > 0 */\n      tag_116\n      jumpi\n      pop\n        /* \"PancakePair.sol\":7513:7514  0 */\n      0x00\n        /* \"PancakePair.sol\":7500:7510  amount1Out */\n      dup5\n        /* \"PancakePair.sol\":7500:7514  amount1Out > 0 */\n      gt\n        /* \"PancakePair.sol\":7482:7514  amount0Out > 0 || amount1Out > 0 */\n    tag_116:\n        /* \"PancakePair.sol\":7474:7554  require(amount0Out > 0 || amount1Out > 0, 'Pancake: INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"PancakePair.sol\":7565:7582  uint112 _reserve0 */\n      0x00\n        /* \"PancakePair.sol\":7584:7601  uint112 _reserve1 */\n      dup1\n        /* \"PancakePair.sol\":7606:7619  getReserves() */\n      tag_118\n        /* \"PancakePair.sol\":7606:7617  getReserves */\n      tag_49\n        /* \"PancakePair.sol\":7606:7619  getReserves() */\n      jump\t// in\n    tag_118:\n        /* \"PancakePair.sol\":7564:7619  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"PancakePair.sol\":7665:7674  _reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":7652:7674  amount0Out < _reserve0 */\n      and\n        /* \"PancakePair.sol\":7652:7662  amount0Out */\n      dup8\n        /* \"PancakePair.sol\":7652:7674  amount0Out < _reserve0 */\n      lt\n        /* \"PancakePair.sol\":7652:7700  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"PancakePair.sol\":7691:7700  _reserve1 */\n      dup1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":7678:7700  amount1Out < _reserve1 */\n      and\n        /* \"PancakePair.sol\":7678:7688  amount1Out */\n      dup7\n        /* \"PancakePair.sol\":7678:7700  amount1Out < _reserve1 */\n      lt\n        /* \"PancakePair.sol\":7652:7700  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_119:\n        /* \"PancakePair.sol\":7644:7736  require(amount0Out < _reserve0 && amount1Out < _reserve1, 'Pancake: INSUFFICIENT_LIQUIDITY') */\n      tag_120\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e53554646494349454e545f4c495155494449545900\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_120:\n        /* \"PancakePair.sol\":7876:7882  token0 */\n      sload(0x06)\n        /* \"PancakePair.sol\":7910:7916  token1 */\n      sload(0x07)\n        /* \"PancakePair.sol\":7747:7760  uint balance0 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":7876:7882  token0 */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"PancakePair.sol\":7910:7916  token1 */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"PancakePair.sol\":7934:7947  to != _token0 */\n      dup10\n      and\n      dup3\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"PancakePair.sol\":7934:7964  to != _token0 && to != _token1 */\n      tag_121\n      jumpi\n      pop\n        /* \"PancakePair.sol\":7957:7964  _token1 */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":7951:7964  to != _token1 */\n      and\n        /* \"PancakePair.sol\":7951:7953  to */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":7951:7964  to != _token1 */\n      and\n      eq\n      iszero\n        /* \"PancakePair.sol\":7934:7964  to != _token0 && to != _token1 */\n    tag_121:\n        /* \"PancakePair.sol\":7926:7988  require(to != _token0 && to != _token1, 'Pancake: INVALID_TO') */\n      tag_122\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x50616e63616b653a20494e56414c49445f544f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_122:\n        /* \"PancakePair.sol\":8002:8016  amount0Out > 0 */\n      dup11\n      iszero\n        /* \"PancakePair.sol\":7998:8056  if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out) */\n      tag_124\n      jumpi\n        /* \"PancakePair.sol\":8018:8056  _safeTransfer(_token0, to, amount0Out) */\n      tag_124\n        /* \"PancakePair.sol\":8032:8039  _token0 */\n      dup3\n        /* \"PancakePair.sol\":8041:8043  to */\n      dup11\n        /* \"PancakePair.sol\":8045:8055  amount0Out */\n      dup14\n        /* \"PancakePair.sol\":8018:8031  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":8018:8056  _safeTransfer(_token0, to, amount0Out) */\n      jump\t// in\n    tag_124:\n        /* \"PancakePair.sol\":8104:8118  amount1Out > 0 */\n      dup10\n      iszero\n        /* \"PancakePair.sol\":8100:8158  if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out) */\n      tag_127\n      jumpi\n        /* \"PancakePair.sol\":8120:8158  _safeTransfer(_token1, to, amount1Out) */\n      tag_127\n        /* \"PancakePair.sol\":8134:8141  _token1 */\n      dup2\n        /* \"PancakePair.sol\":8143:8145  to */\n      dup11\n        /* \"PancakePair.sol\":8147:8157  amount1Out */\n      dup13\n        /* \"PancakePair.sol\":8120:8133  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":8120:8158  _safeTransfer(_token1, to, amount1Out) */\n      jump\t// in\n    tag_127:\n        /* \"PancakePair.sol\":8206:8221  data.length > 0 */\n      dup7\n      iszero\n        /* \"PancakePair.sol\":8202:8295  if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      tag_128\n      jumpi\n        /* \"PancakePair.sol\":8238:8240  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":8223:8253  IPancakeCallee(to).pancakeCall */\n      and\n      0x84800812\n        /* \"PancakePair.sol\":8254:8264  msg.sender */\n      caller\n        /* \"PancakePair.sol\":8266:8276  amount0Out */\n      dup14\n        /* \"PancakePair.sol\":8278:8288  amount1Out */\n      dup14\n        /* \"PancakePair.sol\":8290:8294  data */\n      dup13\n      dup13\n        /* \"PancakePair.sol\":8223:8295  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"PancakePair.sol\":8223:8295  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_129:\n        /* \"PancakePair.sol\":8223:8295  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n        /* \"PancakePair.sol\":8223:8295  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":8202:8295  if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n    tag_128:\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":8350:8354  this */\n      address\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":8316:8341  IERC20(_token0).balanceOf */\n      dup5\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":8316:8341  IERC20(_token0).balanceOf */\n      dup7\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_132:\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_133:\n      pop\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":8411:8415  this */\n      address\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap6\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":8377:8402  IERC20(_token1).balanceOf */\n      dup4\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"PancakePair.sol\":8316:8356  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":8377:8402  IERC20(_token1).balanceOf */\n      dup7\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_134:\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_136:\n      pop\n        /* \"PancakePair.sol\":8377:8417  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap3\n      pop\n        /* \"PancakePair.sol\":8437:8451  uint amount0In */\n      0x00\n      swap2\n      pop\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":8465:8487  _reserve0 - amount0Out */\n      dup6\n      and\n      dup11\n      swap1\n      sub\n        /* \"PancakePair.sol\":8454:8487  balance0 > _reserve0 - amount0Out */\n      dup4\n      gt\n        /* \"PancakePair.sol\":8454:8529  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      tag_137\n      jumpi\n        /* \"PancakePair.sol\":8528:8529  0 */\n      0x00\n        /* \"PancakePair.sol\":8454:8529  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      jump(tag_138)\n    tag_137:\n        /* \"PancakePair.sol\":8514:8524  amount0Out */\n      dup10\n        /* \"PancakePair.sol\":8502:8511  _reserve0 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":8502:8524  _reserve0 - amount0Out */\n      and\n      sub\n        /* \"PancakePair.sol\":8490:8498  balance0 */\n      dup4\n        /* \"PancakePair.sol\":8490:8525  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"PancakePair.sol\":8454:8529  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n    tag_138:\n        /* \"PancakePair.sol\":8437:8529  uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8539:8553  uint amount1In */\n      0x00\n        /* \"PancakePair.sol\":8579:8589  amount1Out */\n      dup10\n        /* \"PancakePair.sol\":8567:8576  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":8567:8589  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"PancakePair.sol\":8556:8564  balance1 */\n      dup4\n        /* \"PancakePair.sol\":8556:8589  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"PancakePair.sol\":8556:8631  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      tag_139\n      jumpi\n        /* \"PancakePair.sol\":8630:8631  0 */\n      0x00\n        /* \"PancakePair.sol\":8556:8631  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      jump(tag_140)\n    tag_139:\n        /* \"PancakePair.sol\":8616:8626  amount1Out */\n      dup10\n        /* \"PancakePair.sol\":8604:8613  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":8604:8626  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"PancakePair.sol\":8592:8600  balance1 */\n      dup4\n        /* \"PancakePair.sol\":8592:8627  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"PancakePair.sol\":8556:8631  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n    tag_140:\n        /* \"PancakePair.sol\":8539:8631  uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8661:8662  0 */\n      0x00\n        /* \"PancakePair.sol\":8649:8658  amount0In */\n      dup3\n        /* \"PancakePair.sol\":8649:8662  amount0In > 0 */\n      gt\n        /* \"PancakePair.sol\":8649:8679  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"PancakePair.sol\":8678:8679  0 */\n      0x00\n        /* \"PancakePair.sol\":8666:8675  amount1In */\n      dup2\n        /* \"PancakePair.sol\":8666:8679  amount1In > 0 */\n      gt\n        /* \"PancakePair.sol\":8649:8679  amount0In > 0 || amount1In > 0 */\n    tag_141:\n        /* \"PancakePair.sol\":8641:8718  require(amount0In > 0 || amount1In > 0, 'Pancake: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"PancakePair.sol\":8802:8823  uint balance0Adjusted */\n      0x00\n        /* \"PancakePair.sol\":8827:8869  balance0.mul(10000).sub(amount0In.mul(25)) */\n      tag_143\n        /* \"PancakePair.sol\":8851:8868  amount0In.mul(25) */\n      tag_144\n        /* \"PancakePair.sol\":8851:8860  amount0In */\n      dup5\n        /* \"PancakePair.sol\":8865:8867  25 */\n      0x19\n        /* \"PancakePair.sol\":8851:8868  amount0In.mul(25) */\n      0xffffffff\n        /* \"PancakePair.sol\":8851:8864  amount0In.mul */\n      tag_145\n        /* \"PancakePair.sol\":8851:8868  amount0In.mul(25) */\n      and\n      jump\t// in\n    tag_144:\n        /* \"PancakePair.sol\":8827:8846  balance0.mul(10000) */\n      tag_146\n        /* \"PancakePair.sol\":8827:8835  balance0 */\n      dup8\n        /* \"PancakePair.sol\":8840:8845  10000 */\n      0x2710\n        /* \"PancakePair.sol\":8827:8846  balance0.mul(10000) */\n      0xffffffff\n        /* \"PancakePair.sol\":8827:8839  balance0.mul */\n      tag_145\n        /* \"PancakePair.sol\":8827:8846  balance0.mul(10000) */\n      and\n      jump\t// in\n    tag_146:\n        /* \"PancakePair.sol\":8827:8850  balance0.mul(10000).sub */\n      swap1\n        /* \"PancakePair.sol\":8827:8869  balance0.mul(10000).sub(amount0In.mul(25)) */\n      0xffffffff\n        /* \"PancakePair.sol\":8827:8850  balance0.mul(10000).sub */\n      tag_147\n        /* \"PancakePair.sol\":8827:8869  balance0.mul(10000).sub(amount0In.mul(25)) */\n      and\n      jump\t// in\n    tag_143:\n        /* \"PancakePair.sol\":8802:8870  uint balance0Adjusted = (balance0.mul(10000).sub(amount0In.mul(25))) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8880:8901  uint balance1Adjusted */\n      0x00\n        /* \"PancakePair.sol\":8905:8947  balance1.mul(10000).sub(amount1In.mul(25)) */\n      tag_148\n        /* \"PancakePair.sol\":8929:8946  amount1In.mul(25) */\n      tag_144\n        /* \"PancakePair.sol\":8929:8938  amount1In */\n      dup5\n        /* \"PancakePair.sol\":8943:8945  25 */\n      0x19\n        /* \"PancakePair.sol\":8929:8946  amount1In.mul(25) */\n      0xffffffff\n        /* \"PancakePair.sol\":8929:8942  amount1In.mul */\n      tag_145\n        /* \"PancakePair.sol\":8929:8946  amount1In.mul(25) */\n      and\n      jump\t// in\n        /* \"PancakePair.sol\":8905:8947  balance1.mul(10000).sub(amount1In.mul(25)) */\n    tag_148:\n        /* \"PancakePair.sol\":8880:8948  uint balance1Adjusted = (balance1.mul(10000).sub(amount1In.mul(25))) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":9008:9052  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      tag_151\n        /* \"PancakePair.sol\":9043:9051  10000**2 */\n      0x05f5e100\n        /* \"PancakePair.sol\":9008:9038  uint(_reserve0).mul(_reserve1) */\n      tag_152\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":9008:9023  uint(_reserve0) */\n      dup12\n      dup2\n      and\n      swap1\n        /* \"PancakePair.sol\":9008:9038  uint(_reserve0).mul(_reserve1) */\n      dup12\n      and\n      0xffffffff\n        /* \"PancakePair.sol\":9008:9027  uint(_reserve0).mul */\n      tag_145\n        /* \"PancakePair.sol\":9008:9038  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n    tag_152:\n        /* \"PancakePair.sol\":9008:9042  uint(_reserve0).mul(_reserve1).mul */\n      swap1\n        /* \"PancakePair.sol\":9008:9052  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      0xffffffff\n        /* \"PancakePair.sol\":9008:9042  uint(_reserve0).mul(_reserve1).mul */\n      tag_145\n        /* \"PancakePair.sol\":9008:9052  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      and\n      jump\t// in\n    tag_151:\n        /* \"PancakePair.sol\":8966:9004  balance0Adjusted.mul(balance1Adjusted) */\n      tag_153\n        /* \"PancakePair.sol\":8966:8982  balance0Adjusted */\n      dup4\n        /* \"PancakePair.sol\":8987:9003  balance1Adjusted */\n      dup4\n        /* \"PancakePair.sol\":8966:9004  balance0Adjusted.mul(balance1Adjusted) */\n      0xffffffff\n        /* \"PancakePair.sol\":8966:8986  balance0Adjusted.mul */\n      tag_145\n        /* \"PancakePair.sol\":8966:9004  balance0Adjusted.mul(balance1Adjusted) */\n      and\n      jump\t// in\n    tag_153:\n        /* \"PancakePair.sol\":8966:9052  balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      lt\n      iszero\n        /* \"PancakePair.sol\":8958:9067  require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2), 'Pancake: K') */\n      tag_154\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x50616e63616b653a204b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_154:\n        /* \"PancakePair.sol\":1268:1269  _ */\n      pop\n      pop\n        /* \"PancakePair.sol\":9088:9137  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_155\n        /* \"PancakePair.sol\":9096:9104  balance0 */\n      dup5\n        /* \"PancakePair.sol\":9106:9114  balance1 */\n      dup5\n        /* \"PancakePair.sol\":9116:9125  _reserve0 */\n      dup9\n        /* \"PancakePair.sol\":9127:9136  _reserve1 */\n      dup9\n        /* \"PancakePair.sol\":9088:9095  _update */\n      tag_156\n        /* \"PancakePair.sol\":9088:9137  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_155:\n        /* \"PancakePair.sol\":9152:9218  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup14\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      swap2\n        /* \"PancakePair.sol\":9157:9167  msg.sender */\n      caller\n      swap2\n        /* \"PancakePair.sol\":9152:9218  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log3\n      pop\n      pop\n        /* \"PancakePair.sol\":1290:1291  1 */\n      0x01\n        /* \"PancakePair.sol\":1279:1287  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1279:1291  unlocked = 1 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":7369:9225  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      jump\t// out\n        /* \"PancakeERC20.sol\":217:260  string public constant name = \"Pancake LPs\" */\n    tag_43:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xa8, 0x50616e63616b65204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":1304:1531  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n    tag_49:\n        /* \"PancakePair.sol\":1436:1444  reserve0 */\n      sload(0x08)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap3\n      shl(0x70, 0x01)\n        /* \"PancakePair.sol\":1466:1474  reserve1 */\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"PancakePair.sol\":1506:1524  blockTimestampLast */\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"PancakePair.sol\":1304:1531  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n      jump\t// out\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"PancakeERC20.sol\":2371:2375  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2387:2423  _approve(msg.sender, spender, value) */\n      tag_159\n        /* \"PancakeERC20.sol\":2396:2406  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2408:2415  spender */\n      dup5\n        /* \"PancakeERC20.sol\":2417:2422  value */\n      dup5\n        /* \"PancakeERC20.sol\":2387:2395  _approve */\n      tag_160\n        /* \"PancakeERC20.sol\":2387:2423  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_159:\n      pop\n        /* \"PancakeERC20.sol\":2440:2444  true */\n      0x01\n        /* \"PancakeERC20.sol\":2304:2451  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_158:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":614:635  address public token0 */\n    tag_54:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":354:380  uint256 public totalSupply */\n    tag_56:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2733:2748  allowance[from] */\n      dup4\n      and\n        /* \"PancakeERC20.sol\":2713:2717  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2733:2748  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2733:2742  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2733:2748  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":2749:2759  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2733:2760  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"PancakeERC20.sol\":2733:2775  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"PancakeERC20.sol\":2729:2870  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_162\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2821:2836  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2821:2830  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2821:2836  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":2837:2847  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2821:2848  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2821:2859  allowance[from][msg.sender].sub(value) */\n      tag_163\n      swap1\n        /* \"PancakeERC20.sol\":2853:2858  value */\n      dup4\n        /* \"PancakeERC20.sol\":2821:2859  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":2821:2852  allowance[from][msg.sender].sub */\n      tag_147\n        /* \"PancakeERC20.sol\":2821:2859  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2791:2806  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2791:2800  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2791:2806  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":2807:2817  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2791:2818  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"PancakeERC20.sol\":2791:2859  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"PancakeERC20.sol\":2729:2870  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_162:\n        /* \"PancakeERC20.sol\":2879:2905  _transfer(from, to, value) */\n      tag_164\n        /* \"PancakeERC20.sol\":2889:2893  from */\n      dup5\n        /* \"PancakeERC20.sol\":2895:2897  to */\n      dup5\n        /* \"PancakeERC20.sol\":2899:2904  value */\n      dup5\n        /* \"PancakeERC20.sol\":2879:2888  _transfer */\n      tag_165\n        /* \"PancakeERC20.sol\":2879:2905  _transfer(from, to, value) */\n      jump\t// in\n    tag_164:\n      pop\n        /* \"PancakeERC20.sol\":2922:2926  true */\n      0x01\n        /* \"PancakeERC20.sol\":2602:2933  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":648:756  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_61:\n        /* \"PancakeERC20.sol\":690:756  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":648:756  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":313:348  uint8 public constant decimals = 18 */\n    tag_63:\n        /* \"PancakeERC20.sol\":346:348  18 */\n      0x12\n        /* \"PancakeERC20.sol\":313:348  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":507:538  bytes32 public DOMAIN_SEPARATOR */\n    tag_65:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":2334:2538  function initialize(address _token0, address _token1) external {... */\n    tag_68:\n        /* \"PancakePair.sol\":2429:2436  factory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"PancakePair.sol\":2415:2425  msg.sender */\n      caller\n        /* \"PancakePair.sol\":2415:2436  msg.sender == factory */\n      eq\n        /* \"PancakePair.sol\":2407:2459  require(msg.sender == factory, 'Pancake: FORBIDDEN') */\n      tag_167\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x71, 0x2830b731b0b5b29d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_167:\n        /* \"PancakePair.sol\":2489:2495  token0 */\n      0x06\n        /* \"PancakePair.sol\":2489:2505  token0 = _token0 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"PancakePair.sol\":2515:2521  token1 */\n      0x07\n        /* \"PancakePair.sol\":2515:2531  token1 = _token1 */\n      dup1\n      sload\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"PancakePair.sol\":2334:2538  function initialize(address _token0, address _token1) external {... */\n      jump\t// out\n        /* \"PancakePair.sol\":958:990  uint public price0CumulativeLast */\n    tag_70:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":996:1028  uint public price1CumulativeLast */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":4492:5709  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_75:\n        /* \"PancakePair.sol\":4541:4555  uint liquidity */\n      0x00\n        /* \"PancakePair.sol\":1203:1211  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1215:1216  1 */\n      0x01\n        /* \"PancakePair.sol\":1203:1216  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1195:1236  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_169\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_169:\n        /* \"PancakePair.sol\":1257:1258  0 */\n      0x00\n        /* \"PancakePair.sol\":1246:1254  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1246:1258  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"PancakePair.sol\":1257:1258  0 */\n      dup1\n        /* \"PancakePair.sol\":4609:4622  getReserves() */\n      tag_171\n        /* \"PancakePair.sol\":4609:4620  getReserves */\n      tag_49\n        /* \"PancakePair.sol\":4609:4622  getReserves() */\n      jump\t// in\n    tag_171:\n      pop\n        /* \"PancakePair.sol\":4670:4676  token0 */\n      sload(0x06)\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":4696:4700  this */\n      address\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":4567:4622  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"PancakePair.sol\":4647:4660  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":4670:4676  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"PancakePair.sol\":4663:4687  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":4670:4676  token0 */\n      dup7\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_172:\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_173:\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_174:\n      pop\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":4735:4741  token1 */\n      sload(0x07)\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":4761:4765  this */\n      address\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"PancakePair.sol\":4712:4725  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":4735:4741  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"PancakePair.sol\":4728:4752  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"PancakePair.sol\":4663:4702  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":4735:4741  token1 */\n      dup7\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_177:\n      pop\n        /* \"PancakePair.sol\":4728:4767  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"PancakePair.sol\":4777:4789  uint amount0 */\n      0x00\n        /* \"PancakePair.sol\":4792:4815  balance0.sub(_reserve0) */\n      tag_178\n        /* \"PancakePair.sol\":4792:4800  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":4792:4815  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"PancakePair.sol\":4792:4804  balance0.sub */\n      tag_147\n        /* \"PancakePair.sol\":4792:4815  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_178:\n        /* \"PancakePair.sol\":4777:4815  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4825:4837  uint amount1 */\n      0x00\n        /* \"PancakePair.sol\":4840:4863  balance1.sub(_reserve1) */\n      tag_179\n        /* \"PancakePair.sol\":4840:4848  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":4840:4863  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"PancakePair.sol\":4840:4852  balance1.sub */\n      tag_147\n        /* \"PancakePair.sol\":4840:4863  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_179:\n        /* \"PancakePair.sol\":4825:4863  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4874:4884  bool feeOn */\n      0x00\n        /* \"PancakePair.sol\":4887:4917  _mintFee(_reserve0, _reserve1) */\n      tag_180\n        /* \"PancakePair.sol\":4896:4905  _reserve0 */\n      dup8\n        /* \"PancakePair.sol\":4907:4916  _reserve1 */\n      dup8\n        /* \"PancakePair.sol\":4887:4895  _mintFee */\n      tag_181\n        /* \"PancakePair.sol\":4887:4917  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_180:\n        /* \"PancakePair.sol\":4927:4944  uint _totalSupply */\n      0x00\n        /* \"PancakePair.sol\":4947:4958  totalSupply */\n      sload\n        /* \"PancakePair.sol\":4874:4917  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"PancakePair.sol\":5050:5067  _totalSupply == 0 */\n      dup1\n        /* \"PancakePair.sol\":5046:5393  if (_totalSupply == 0) {... */\n      tag_182\n      jumpi\n        /* \"PancakePair.sol\":5095:5149  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_183\n        /* \"PancakePair.sol\":480:485  10**3 */\n      0x03e8\n        /* \"PancakePair.sol\":5095:5126  Math.sqrt(amount0.mul(amount1)) */\n      tag_146\n        /* \"PancakePair.sol\":5105:5125  amount0.mul(amount1) */\n      tag_185\n        /* \"PancakePair.sol\":5105:5112  amount0 */\n      dup8\n        /* \"PancakePair.sol\":5117:5124  amount1 */\n      dup8\n        /* \"PancakePair.sol\":5105:5125  amount0.mul(amount1) */\n      0xffffffff\n        /* \"PancakePair.sol\":5105:5116  amount0.mul */\n      tag_145\n        /* \"PancakePair.sol\":5105:5125  amount0.mul(amount1) */\n      and\n      jump\t// in\n    tag_185:\n        /* \"PancakePair.sol\":5095:5104  Math.sqrt */\n      tag_186\n        /* \"PancakePair.sol\":5095:5126  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n        /* \"PancakePair.sol\":5095:5149  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_183:\n        /* \"PancakePair.sol\":5083:5149  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"PancakePair.sol\":5162:5198  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_187\n        /* \"PancakePair.sol\":5176:5177  0 */\n      0x00\n        /* \"PancakePair.sol\":480:485  10**3 */\n      0x03e8\n        /* \"PancakePair.sol\":5162:5167  _mint */\n      tag_188\n        /* \"PancakePair.sol\":5162:5198  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_187:\n        /* \"PancakePair.sol\":5046:5393  if (_totalSupply == 0) {... */\n      jump(tag_189)\n    tag_182:\n        /* \"PancakePair.sol\":5296:5382  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      tag_190\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":5305:5342  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"PancakePair.sol\":5305:5330  amount0.mul(_totalSupply) */\n      tag_191\n        /* \"PancakePair.sol\":5305:5312  amount0 */\n      dup7\n        /* \"PancakePair.sol\":5317:5329  _totalSupply */\n      dup5\n        /* \"PancakePair.sol\":5305:5330  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"PancakePair.sol\":5305:5316  amount0.mul */\n      tag_145\n        /* \"PancakePair.sol\":5305:5330  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_191:\n        /* \"PancakePair.sol\":5305:5342  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      div\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":5344:5381  amount1.mul(_totalSupply) / _reserve1 */\n      dup10\n      and\n        /* \"PancakePair.sol\":5344:5369  amount1.mul(_totalSupply) */\n      tag_193\n        /* \"PancakePair.sol\":5344:5351  amount1 */\n      dup7\n        /* \"PancakePair.sol\":5356:5368  _totalSupply */\n      dup6\n        /* \"PancakePair.sol\":5344:5369  amount1.mul(_totalSupply) */\n      0xffffffff\n        /* \"PancakePair.sol\":5344:5355  amount1.mul */\n      tag_145\n        /* \"PancakePair.sol\":5344:5369  amount1.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_193:\n        /* \"PancakePair.sol\":5344:5381  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"PancakePair.sol\":5296:5304  Math.min */\n      tag_195\n        /* \"PancakePair.sol\":5296:5382  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      jump\t// in\n    tag_190:\n        /* \"PancakePair.sol\":5284:5382  liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      swap9\n      pop\n        /* \"PancakePair.sol\":5046:5393  if (_totalSupply == 0) {... */\n    tag_189:\n        /* \"PancakePair.sol\":5422:5423  0 */\n      0x00\n        /* \"PancakePair.sol\":5410:5419  liquidity */\n      dup10\n        /* \"PancakePair.sol\":5410:5423  liquidity > 0 */\n      gt\n        /* \"PancakePair.sol\":5402:5466  require(liquidity > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"PancakePair.sol\":5476:5496  _mint(to, liquidity) */\n      tag_197\n        /* \"PancakePair.sol\":5482:5484  to */\n      dup11\n        /* \"PancakePair.sol\":5486:5495  liquidity */\n      dup11\n        /* \"PancakePair.sol\":5476:5481  _mint */\n      tag_188\n        /* \"PancakePair.sol\":5476:5496  _mint(to, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"PancakePair.sol\":5507:5556  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_198\n        /* \"PancakePair.sol\":5515:5523  balance0 */\n      dup7\n        /* \"PancakePair.sol\":5525:5533  balance1 */\n      dup7\n        /* \"PancakePair.sol\":5535:5544  _reserve0 */\n      dup11\n        /* \"PancakePair.sol\":5546:5555  _reserve1 */\n      dup11\n        /* \"PancakePair.sol\":5507:5514  _update */\n      tag_156\n        /* \"PancakePair.sol\":5507:5556  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_198:\n        /* \"PancakePair.sol\":5570:5575  feeOn */\n      dup2\n        /* \"PancakePair.sol\":5566:5613  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_199\n      jumpi\n        /* \"PancakePair.sol\":5604:5612  reserve1 */\n      sload(0x08)\n        /* \"PancakePair.sol\":5585:5613  uint(reserve0).mul(reserve1) */\n      tag_200\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":5590:5598  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"PancakePair.sol\":5604:5612  reserve1 */\n      swap1\n      div\n      and\n        /* \"PancakePair.sol\":5585:5613  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"PancakePair.sol\":5585:5603  uint(reserve0).mul */\n      tag_145\n        /* \"PancakePair.sol\":5585:5613  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_200:\n        /* \"PancakePair.sol\":5577:5582  kLast */\n      0x0b\n        /* \"PancakePair.sol\":5577:5613  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"PancakePair.sol\":5566:5613  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_199:\n        /* \"PancakePair.sol\":5668:5702  Mint(msg.sender, amount0, amount1) */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"PancakePair.sol\":5673:5683  msg.sender */\n      caller\n      swap3\n        /* \"PancakePair.sol\":5668:5702  Mint(msg.sender, amount0, amount1) */\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"PancakePair.sol\":1290:1291  1 */\n      0x01\n        /* \"PancakePair.sol\":1279:1287  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1279:1291  unlocked = 1 */\n      sstore\n      pop\n        /* \"PancakePair.sol\":4492:5709  function mint(address to) external lock returns (uint liquidity) {... */\n      swap5\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":386:430  mapping(address => uint256) public balanceOf */\n    tag_78:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":1034:1051  uint public kLast */\n    tag_80:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":762:803  mapping(address => uint256) public nonces */\n    tag_83:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":5818:7260  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_86:\n        /* \"PancakePair.sol\":5867:5879  uint amount0 */\n      0x00\n        /* \"PancakePair.sol\":5881:5893  uint amount1 */\n      dup1\n        /* \"PancakePair.sol\":1203:1211  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1215:1216  1 */\n      0x01\n        /* \"PancakePair.sol\":1203:1216  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1195:1236  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_202\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_202:\n        /* \"PancakePair.sol\":1257:1258  0 */\n      0x00\n        /* \"PancakePair.sol\":1246:1254  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1246:1258  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"PancakePair.sol\":1257:1258  0 */\n      dup1\n        /* \"PancakePair.sol\":5947:5960  getReserves() */\n      tag_204\n        /* \"PancakePair.sol\":5947:5958  getReserves */\n      tag_49\n        /* \"PancakePair.sol\":5947:5960  getReserves() */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"PancakePair.sol\":6003:6009  token0 */\n      sload(0x06)\n        /* \"PancakePair.sol\":6083:6089  token1 */\n      sload(0x07)\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":6195:6199  this */\n      address\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":5905:5960  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      swap5\n      swap7\n      pop\n      swap3\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":6003:6009  token0 */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"PancakePair.sol\":6083:6089  token1 */\n      swap2\n      and\n      swap2\n        /* \"PancakePair.sol\":5985:6000  address _token0 */\n      0x00\n      swap2\n        /* \"PancakePair.sol\":6003:6009  token0 */\n      dup5\n      swap2\n        /* \"PancakePair.sol\":6161:6186  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":6003:6009  token0 */\n      dup7\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n      pop\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":6261:6265  this */\n      address\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"PancakePair.sol\":6211:6224  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":6227:6252  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n        /* \"PancakePair.sol\":6161:6201  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":6227:6252  IERC20(_token1).balanceOf */\n      dup7\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n      pop\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":6312:6316  this */\n      address\n        /* \"PancakePair.sol\":6277:6291  uint liquidity */\n      0x00\n        /* \"PancakePair.sol\":6294:6318  balanceOf[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"PancakePair.sol\":6294:6303  balanceOf */\n      0x01\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      0x20\n        /* \"PancakePair.sol\":6294:6318  balanceOf[address(this)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"PancakePair.sol\":6227:6267  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"PancakePair.sol\":6342:6372  _mintFee(_reserve0, _reserve1) */\n      tag_211\n        /* \"PancakePair.sol\":6351:6360  _reserve0 */\n      dup9\n        /* \"PancakePair.sol\":6362:6371  _reserve1 */\n      dup9\n        /* \"PancakePair.sol\":6342:6350  _mintFee */\n      tag_181\n        /* \"PancakePair.sol\":6342:6372  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_211:\n        /* \"PancakePair.sol\":6382:6399  uint _totalSupply */\n      0x00\n        /* \"PancakePair.sol\":6402:6413  totalSupply */\n      sload\n        /* \"PancakePair.sol\":6329:6372  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"PancakePair.sol\":6402:6413  totalSupply */\n      dup1\n        /* \"PancakePair.sol\":6511:6534  liquidity.mul(balance0) */\n      tag_212\n        /* \"PancakePair.sol\":6511:6520  liquidity */\n      dup5\n        /* \"PancakePair.sol\":6525:6533  balance0 */\n      dup8\n        /* \"PancakePair.sol\":6511:6534  liquidity.mul(balance0) */\n      0xffffffff\n        /* \"PancakePair.sol\":6511:6524  liquidity.mul */\n      tag_145\n        /* \"PancakePair.sol\":6511:6534  liquidity.mul(balance0) */\n      and\n      jump\t// in\n    tag_212:\n        /* \"PancakePair.sol\":6511:6549  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      div\n      swap11\n      pop\n        /* \"PancakePair.sol\":6643:6655  _totalSupply */\n      dup1\n        /* \"PancakePair.sol\":6617:6640  liquidity.mul(balance1) */\n      tag_214\n        /* \"PancakePair.sol\":6617:6626  liquidity */\n      dup5\n        /* \"PancakePair.sol\":6631:6639  balance1 */\n      dup7\n        /* \"PancakePair.sol\":6617:6640  liquidity.mul(balance1) */\n      0xffffffff\n        /* \"PancakePair.sol\":6617:6630  liquidity.mul */\n      tag_145\n        /* \"PancakePair.sol\":6617:6640  liquidity.mul(balance1) */\n      and\n      jump\t// in\n    tag_214:\n        /* \"PancakePair.sol\":6617:6655  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      div\n        /* \"PancakePair.sol\":6607:6655  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"PancakePair.sol\":6731:6732  0 */\n      0x00\n        /* \"PancakePair.sol\":6721:6728  amount0 */\n      dup12\n        /* \"PancakePair.sol\":6721:6732  amount0 > 0 */\n      gt\n        /* \"PancakePair.sol\":6721:6747  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"PancakePair.sol\":6746:6747  0 */\n      0x00\n        /* \"PancakePair.sol\":6736:6743  amount1 */\n      dup11\n        /* \"PancakePair.sol\":6736:6747  amount1 > 0 */\n      gt\n        /* \"PancakePair.sol\":6721:6747  amount0 > 0 && amount1 > 0 */\n    tag_216:\n        /* \"PancakePair.sol\":6713:6790  require(amount0 > 0 && amount1 > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"PancakePair.sol\":6800:6831  _burn(address(this), liquidity) */\n      tag_218\n        /* \"PancakePair.sol\":6814:6818  this */\n      address\n        /* \"PancakePair.sol\":6821:6830  liquidity */\n      dup5\n        /* \"PancakePair.sol\":6800:6805  _burn */\n      tag_219\n        /* \"PancakePair.sol\":6800:6831  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_218:\n        /* \"PancakePair.sol\":6841:6876  _safeTransfer(_token0, to, amount0) */\n      tag_220\n        /* \"PancakePair.sol\":6855:6862  _token0 */\n      dup8\n        /* \"PancakePair.sol\":6864:6866  to */\n      dup14\n        /* \"PancakePair.sol\":6868:6875  amount0 */\n      dup14\n        /* \"PancakePair.sol\":6841:6854  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":6841:6876  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_220:\n        /* \"PancakePair.sol\":6886:6921  _safeTransfer(_token1, to, amount1) */\n      tag_221\n        /* \"PancakePair.sol\":6900:6907  _token1 */\n      dup7\n        /* \"PancakePair.sol\":6909:6911  to */\n      dup14\n        /* \"PancakePair.sol\":6913:6920  amount1 */\n      dup13\n        /* \"PancakePair.sol\":6886:6899  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":6886:6921  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_221:\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":6976:6980  this */\n      address\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":6942:6967  IERC20(_token0).balanceOf */\n      dup10\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":6942:6967  IERC20(_token0).balanceOf */\n      dup7\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_222:\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_223\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_223:\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_224:\n      pop\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":7037:7041  this */\n      address\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap7\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":7003:7028  IERC20(_token1).balanceOf */\n      dup9\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"PancakePair.sol\":6942:6982  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":7003:7028  IERC20(_token1).balanceOf */\n      dup7\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_225\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_225:\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_226:\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_227:\n      pop\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"PancakePair.sol\":7054:7103  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_228\n        /* \"PancakePair.sol\":7062:7070  balance0 */\n      dup6\n        /* \"PancakePair.sol\":7003:7043  IERC20(_token1).balanceOf(address(this)) */\n      dup6\n        /* \"PancakePair.sol\":7082:7091  _reserve0 */\n      dup12\n        /* \"PancakePair.sol\":7093:7102  _reserve1 */\n      dup12\n        /* \"PancakePair.sol\":7054:7061  _update */\n      tag_156\n        /* \"PancakePair.sol\":7054:7103  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_228:\n        /* \"PancakePair.sol\":7117:7122  feeOn */\n      dup2\n        /* \"PancakePair.sol\":7113:7160  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_229\n      jumpi\n        /* \"PancakePair.sol\":7151:7159  reserve1 */\n      sload(0x08)\n        /* \"PancakePair.sol\":7132:7160  uint(reserve0).mul(reserve1) */\n      tag_230\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":7137:7145  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"PancakePair.sol\":7151:7159  reserve1 */\n      swap1\n      div\n      and\n        /* \"PancakePair.sol\":7132:7160  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"PancakePair.sol\":7132:7150  uint(reserve0).mul */\n      tag_145\n        /* \"PancakePair.sol\":7132:7160  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_230:\n        /* \"PancakePair.sol\":7124:7129  kLast */\n      0x0b\n        /* \"PancakePair.sol\":7124:7160  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"PancakePair.sol\":7113:7160  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_229:\n        /* \"PancakePair.sol\":7215:7253  Burn(msg.sender, amount0, amount1, to) */\n      0x40\n      dup1\n      mload\n      dup13\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup16\n      and\n      swap3\n        /* \"PancakePair.sol\":7220:7230  msg.sender */\n      caller\n      swap3\n        /* \"PancakePair.sol\":7215:7253  Burn(msg.sender, amount0, amount1, to) */\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"PancakePair.sol\":1268:1269  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1290:1291  1 */\n      0x01\n        /* \"PancakePair.sol\":1279:1287  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1279:1291  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":5818:7260  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"PancakeERC20.sol\":266:307  string public constant symbol = \"Cake-LP\" */\n    tag_88:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xcc, 0x043616b652d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2457:2596  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_95:\n        /* \"PancakeERC20.sol\":2520:2524  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2536:2568  _transfer(msg.sender, to, value) */\n      tag_159\n        /* \"PancakeERC20.sol\":2546:2556  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2558:2560  to */\n      dup5\n        /* \"PancakeERC20.sol\":2562:2567  value */\n      dup5\n        /* \"PancakeERC20.sol\":2536:2545  _transfer */\n      tag_165\n        /* \"PancakeERC20.sol\":2536:2568  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"PancakePair.sol\":439:485  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_97:\n        /* \"PancakePair.sol\":480:485  10**3 */\n      0x03e8\n        /* \"PancakePair.sol\":439:485  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":9271:9600  function skim(address to) external lock {... */\n    tag_100:\n        /* \"PancakePair.sol\":1203:1211  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1215:1216  1 */\n      0x01\n        /* \"PancakePair.sol\":1203:1216  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1195:1236  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_234\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_234:\n        /* \"PancakePair.sol\":1257:1258  0 */\n      0x00\n        /* \"PancakePair.sol\":1246:1254  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1246:1258  unlocked = 0 */\n      sstore\n        /* \"PancakePair.sol\":9339:9345  token0 */\n      sload(0x06)\n        /* \"PancakePair.sol\":9388:9394  token1 */\n      sload(0x07)\n        /* \"PancakePair.sol\":9491:9499  reserve0 */\n      sload(0x08)\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":9480:9484  this */\n      address\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":9339:9345  token0 */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"PancakePair.sol\":9388:9394  token1 */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"PancakePair.sol\":9419:9501  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      tag_236\n      swap3\n        /* \"PancakePair.sol\":9339:9345  token0 */\n      dup6\n      swap3\n        /* \"PancakePair.sol\":9442:9444  to */\n      dup8\n      swap3\n        /* \"PancakePair.sol\":9446:9500  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_237\n      swap3\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":9491:9499  reserve0 */\n      and\n      swap2\n        /* \"PancakePair.sol\":9339:9345  token0 */\n      dup6\n      swap2\n        /* \"PancakePair.sol\":9446:9471  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":9339:9345  token0 */\n      dup7\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_238:\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_239\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_239:\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_240\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_240:\n      pop\n        /* \"PancakePair.sol\":9446:9486  IERC20(_token0).balanceOf(address(this)) */\n      mload\n      swap1\n        /* \"PancakePair.sol\":9446:9500  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffff\n        /* \"PancakePair.sol\":9446:9490  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_147\n        /* \"PancakePair.sol\":9446:9500  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      and\n      jump\t// in\n    tag_237:\n        /* \"PancakePair.sol\":9419:9432  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":9419:9501  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      jump\t// in\n    tag_236:\n        /* \"PancakePair.sol\":9583:9591  reserve1 */\n      sload(0x08)\n        /* \"PancakePair.sol\":9538:9578  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":9572:9576  this */\n      address\n        /* \"PancakePair.sol\":9538:9578  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":9511:9593  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      tag_241\n      swap3\n        /* \"PancakePair.sol\":9525:9532  _token1 */\n      dup5\n      swap3\n        /* \"PancakePair.sol\":9534:9536  to */\n      dup8\n      swap3\n        /* \"PancakePair.sol\":9538:9592  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_237\n      swap3\n      shl(0x70, 0x01)\n        /* \"PancakePair.sol\":9583:9591  reserve1 */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":9538:9563  IERC20(_token1).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":9538:9578  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":9538:9563  IERC20(_token1).balanceOf */\n      dup7\n        /* \"PancakePair.sol\":9538:9578  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"PancakePair.sol\":9511:9593  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n    tag_241:\n      pop\n      pop\n        /* \"PancakePair.sol\":1290:1291  1 */\n      0x01\n        /* \"PancakePair.sol\":1279:1287  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1279:1291  unlocked = 1 */\n      sstore\n      pop\n        /* \"PancakePair.sol\":9271:9600  function skim(address to) external lock {... */\n      jump\t// out\n        /* \"PancakePair.sol\":586:608  address public factory */\n    tag_102:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":641:662  address public token1 */\n    tag_104:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n    tag_107:\n        /* \"PancakeERC20.sol\":3152:3167  block.timestamp */\n      timestamp\n        /* \"PancakeERC20.sol\":3140:3148  deadline */\n      dup5\n        /* \"PancakeERC20.sol\":3140:3167  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"PancakeERC20.sol\":3132:3188  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_247\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_247:\n        /* \"PancakeERC20.sol\":3300:3316  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3395:3408  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"PancakeERC20.sol\":3198:3212  bytes32 digest */\n      0x00\n        /* \"PancakeERC20.sol\":3395:3408  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":3395:3401  nonces */\n      0x04\n        /* \"PancakeERC20.sol\":3395:3408  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":3395:3410  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"PancakeERC20.sol\":3344:3421  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"PancakeERC20.sol\":690:756  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":3344:3421  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":3344:3421  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"PancakeERC20.sol\":3334:3422  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"PancakeERC20.sol\":3238:3436  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"PancakeERC20.sol\":3238:3436  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"PancakeERC20.sol\":3215:3446  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"PancakeERC20.sol\":3198:3212  bytes32 digest */\n      swap2\n      swap4\n        /* \"PancakeERC20.sol\":3395:3410  nonces[owner]++ */\n      swap3\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"PancakeERC20.sol\":3395:3410  nonces[owner]++ */\n      dup6\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_248:\n      pop\n      pop\n        /* \"PancakeERC20.sol\":3483:3509  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3527:3557  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"PancakeERC20.sol\":3527:3586  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_249\n      jumpi\n      pop\n        /* \"PancakeERC20.sol\":3581:3586  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3561:3586  recoveredAddress == owner */\n      and\n        /* \"PancakeERC20.sol\":3561:3577  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":3561:3586  recoveredAddress == owner */\n      and\n      eq\n        /* \"PancakeERC20.sol\":3527:3586  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_249:\n        /* \"PancakeERC20.sol\":3519:3617  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_250\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_250:\n        /* \"PancakeERC20.sol\":3627:3658  _approve(owner, spender, value) */\n      tag_251\n        /* \"PancakeERC20.sol\":3636:3641  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3643:3650  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3652:3657  value */\n      dup10\n        /* \"PancakeERC20.sol\":3627:3635  _approve */\n      tag_160\n        /* \"PancakeERC20.sol\":3627:3658  _approve(owner, spender, value) */\n      jump\t// in\n    tag_251:\n        /* \"PancakeERC20.sol\":2939:3665  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":436:500  mapping(address => mapping(address => uint256)) public allowance */\n    tag_110:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":9646:9802  function sync() external lock {... */\n    tag_112:\n        /* \"PancakePair.sol\":1203:1211  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1215:1216  1 */\n      0x01\n        /* \"PancakePair.sol\":1203:1216  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1195:1236  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_253\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_253:\n        /* \"PancakePair.sol\":1257:1258  0 */\n      0x00\n        /* \"PancakePair.sol\":1246:1254  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1246:1258  unlocked = 0 */\n      sstore\n        /* \"PancakePair.sol\":9701:9707  token0 */\n      sload(0x06)\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":9727:9731  this */\n      address\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"PancakePair.sol\":9686:9795  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      tag_255\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":9701:9707  token0 */\n      and\n      swap2\n        /* \"PancakePair.sol\":9694:9718  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":9701:9707  token0 */\n      dup7\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_256\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_256:\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_257:\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_258:\n      pop\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":9742:9748  token1 */\n      sload(0x07)\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"PancakePair.sol\":9768:9772  this */\n      address\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":9742:9748  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"PancakePair.sol\":9735:9759  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"PancakePair.sol\":9694:9733  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"PancakePair.sol\":9742:9748  token1 */\n      dup7\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_260\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_260:\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_261:\n      pop\n        /* \"PancakePair.sol\":9735:9774  IERC20(token1).balanceOf(address(this)) */\n      mload\n        /* \"PancakePair.sol\":9776:9784  reserve0 */\n      sload(0x08)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"PancakePair.sol\":9786:9794  reserve1 */\n      swap1\n      div\n      and\n        /* \"PancakePair.sol\":9686:9693  _update */\n      tag_156\n        /* \"PancakePair.sol\":9686:9795  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      jump\t// in\n    tag_255:\n        /* \"PancakePair.sol\":1290:1291  1 */\n      0x01\n        /* \"PancakePair.sol\":1279:1287  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1279:1291  unlocked = 1 */\n      sstore\n        /* \"PancakePair.sol\":9646:9802  function sync() external lock {... */\n      jump\t// out\n        /* \"PancakePair.sol\":1537:1819  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_125:\n        /* \"PancakePair.sol\":543:577  bytes('transfer(address,uint256)') */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"PancakePair.sol\":1664:1707  abi.encodeWithSelector(SELECTOR, to, value) */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"PancakePair.sol\":1664:1707  abi.encodeWithSelector(SELECTOR, to, value) */\n      0x64\n      swap1\n      swap3\n      add\n      dup5\n      mstore\n        /* \"--CODEGEN--\":25:43   */\n      swap2\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      dup2\n      mstore\n        /* \"PancakePair.sol\":1653:1708  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap3\n      mload\n      dup2\n      mload\n        /* \"PancakePair.sol\":1618:1630  bool success */\n      0x00\n      swap5\n        /* \"PancakePair.sol\":1632:1649  bytes memory data */\n      0x60\n      swap5\n        /* \"PancakePair.sol\":1653:1663  token.call */\n      dup10\n      and\n      swap4\n        /* \"PancakePair.sol\":1664:1707  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap3\n        /* \"PancakePair.sol\":1653:1708  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"--CODEGEN--\":25:43   */\n      swap1\n        /* \"PancakePair.sol\":1653:1708  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      dup1\n      dup4\n        /* \"--CODEGEN--\":25:43   */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_263:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_263)\n    tag_265:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1653:1708  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_266)\n        /* \"--CODEGEN--\":16:47   */\n    tag_267:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_266:\n      pop\n        /* \"PancakePair.sol\":1617:1708  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"PancakePair.sol\":1726:1733  success */\n      dup2\n        /* \"PancakePair.sol\":1726:1783  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_269\n      jumpi\n      pop\n        /* \"PancakePair.sol\":1738:1749  data.length */\n      dup1\n      mload\n        /* \"PancakePair.sol\":1738:1754  data.length == 0 */\n      iszero\n      dup1\n        /* \"PancakePair.sol\":1738:1782  data.length == 0 || abi.decode(data, (bool)) */\n      tag_269\n      jumpi\n      pop\n        /* \"PancakePair.sol\":1769:1773  data */\n      dup1\n        /* \"PancakePair.sol\":1758:1782  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_270\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_270:\n      pop\n        /* \"PancakePair.sol\":1758:1782  abi.decode(data, (bool)) */\n      mload\n        /* \"PancakePair.sol\":1738:1782  data.length == 0 || abi.decode(data, (bool)) */\n    tag_269:\n        /* \"PancakePair.sol\":1718:1812  require(success && (data.length == 0 || abi.decode(data, (bool))), 'Pancake: TRANSFER_FAILED') */\n      tag_271\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a205452414e534645525f4641494c45440000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_271:\n        /* \"PancakePair.sol\":1537:1819  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_145:\n        /* \"libraries/SafeMath.sol\":539:548  uint256 z */\n      0x00\n        /* \"libraries/SafeMath.sol\":568:574  y == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"libraries/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n      tag_273\n      jumpi\n      pop\n      pop\n        /* \"libraries/SafeMath.sol\":583:588  x * y */\n      dup1\n      dup3\n      mul\n        /* \"libraries/SafeMath.sol\":597:598  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":592:593  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":583:588  x * y */\n      dup3\n        /* \"libraries/SafeMath.sol\":592:593  y */\n      dup2\n        /* \"libraries/SafeMath.sol\":578:593  (z = x * y) / y */\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"libraries/SafeMath.sol\":578:598  (z = x * y) / y == x */\n      eq\n        /* \"libraries/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n    tag_273:\n        /* \"libraries/SafeMath.sol\":560:623  require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\") */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6d756c2d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_147:\n        /* \"libraries/SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"PancakePair.sol\":2620:3465  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {... */\n    tag_156:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":2731:2754  balance0 <= uint112(-1) */\n      dup5\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"PancakePair.sol\":2731:2781  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      tag_279\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":2758:2781  balance1 <= uint112(-1) */\n      dup4\n      gt\n      iszero\n        /* \"PancakePair.sol\":2731:2781  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_279:\n        /* \"PancakePair.sol\":2723:2803  require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'Pancake: OVERFLOW') */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x50616e63616b653a204f564552464c4f57)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n        /* \"PancakePair.sol\":2916:2934  blockTimestampLast */\n      sload(0x08)\n        /* \"PancakePair.sol\":2844:2867  block.timestamp % 2**32 */\n      0xffffffff\n        /* \"PancakePair.sol\":2844:2859  block.timestamp */\n      timestamp\n        /* \"PancakePair.sol\":2844:2867  block.timestamp % 2**32 */\n      dup2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"PancakePair.sol\":2916:2934  blockTimestampLast */\n      swap1\n      div\n      dup2\n      and\n        /* \"PancakePair.sol\":2899:2934  blockTimestamp - blockTimestampLast */\n      dup3\n      sub\n      swap1\n        /* \"PancakePair.sol\":2971:2986  timeElapsed > 0 */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"PancakePair.sol\":2971:3004  timeElapsed > 0 && _reserve0 != 0 */\n      tag_282\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":2990:3004  _reserve0 != 0 */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"PancakePair.sol\":2971:3004  timeElapsed > 0 && _reserve0 != 0 */\n    tag_282:\n        /* \"PancakePair.sol\":2971:3022  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":3008:3022  _reserve1 != 0 */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"PancakePair.sol\":2971:3022  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_283:\n        /* \"PancakePair.sol\":2967:3299  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"PancakePair.sol\":3175:3186  timeElapsed */\n      dup1\n        /* \"PancakePair.sol\":3122:3186  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      0xffffffff\n      and\n        /* \"PancakePair.sol\":3127:3171  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_285\n        /* \"PancakePair.sol\":3161:3170  _reserve0 */\n      dup6\n        /* \"PancakePair.sol\":3127:3154  UQ112x112.encode(_reserve1) */\n      tag_286\n        /* \"PancakePair.sol\":3144:3153  _reserve1 */\n      dup7\n        /* \"PancakePair.sol\":3127:3143  UQ112x112.encode */\n      tag_287\n        /* \"PancakePair.sol\":3127:3154  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_286:\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"PancakePair.sol\":3127:3160  UQ112x112.encode(_reserve1).uqdiv */\n      and\n      swap1\n        /* \"PancakePair.sol\":3127:3171  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      0xffffffff\n        /* \"PancakePair.sol\":3127:3160  UQ112x112.encode(_reserve1).uqdiv */\n      tag_288\n        /* \"PancakePair.sol\":3127:3171  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      and\n      jump\t// in\n    tag_285:\n        /* \"PancakePair.sol\":3098:3118  price0CumulativeLast */\n      0x09\n        /* \"PancakePair.sol\":3098:3186  price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"PancakePair.sol\":3122:3172  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"PancakePair.sol\":3122:3186  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"PancakePair.sol\":3098:3186  price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      add\n      swap1\n      sstore\n        /* \"PancakePair.sol\":3224:3288  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      0xffffffff\n      dup2\n      and\n        /* \"PancakePair.sol\":3229:3273  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_289\n        /* \"PancakePair.sol\":3263:3272  _reserve1 */\n      dup5\n        /* \"PancakePair.sol\":3229:3256  UQ112x112.encode(_reserve0) */\n      tag_286\n        /* \"PancakePair.sol\":3246:3255  _reserve0 */\n      dup8\n        /* \"PancakePair.sol\":3229:3245  UQ112x112.encode */\n      tag_287\n        /* \"PancakePair.sol\":3229:3256  UQ112x112.encode(_reserve0) */\n      jump\t// in\n        /* \"PancakePair.sol\":3229:3273  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n    tag_289:\n        /* \"PancakePair.sol\":3200:3220  price1CumulativeLast */\n      0x0a\n        /* \"PancakePair.sol\":3200:3288  price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"PancakePair.sol\":3224:3274  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"PancakePair.sol\":3224:3288  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"PancakePair.sol\":3200:3288  price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      add\n      swap1\n      sstore\n        /* \"PancakePair.sol\":2967:3299  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n    tag_284:\n        /* \"PancakePair.sol\":3308:3316  reserve0 */\n      0x08\n        /* \"PancakePair.sol\":3308:3336  reserve0 = uint112(balance0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffff)\n      and\n      sub(shl(0x70, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      not(shl(0x70, 0xffffffffffffffffffffffffffff))\n        /* \"PancakePair.sol\":3346:3374  reserve1 = uint112(balance1) */\n      and\n      shl(0x70, 0x01)\n      dup9\n      dup4\n      and\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"PancakePair.sol\":3384:3419  blockTimestampLast = blockTimestamp */\n      and\n      shl(0xe0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"PancakePair.sol\":3434:3458  Sync(reserve0, reserve1) */\n      0x40\n      dup1\n      mload\n        /* \"PancakePair.sol\":3439:3447  reserve0 */\n      dup5\n      dup5\n      and\n        /* \"PancakePair.sol\":3434:3458  Sync(reserve0, reserve1) */\n      dup2\n      mstore\n        /* \"PancakePair.sol\":3449:3457  reserve1 */\n      swap2\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"PancakePair.sol\":3434:3458  Sync(reserve0, reserve1) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"PancakePair.sol\":2620:3465  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":1844:2043  function _approve(... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":1957:1973  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":1957:1966  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":1957:1973  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":1957:1982  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"PancakeERC20.sol\":1957:1990  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"PancakeERC20.sol\":2005:2036  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1844:2043  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":2049:2298  function _transfer(... */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2175:2190  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2175:2184  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2175:2190  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2175:2201  balanceOf[from].sub(value) */\n      tag_293\n      swap1\n        /* \"PancakeERC20.sol\":2195:2200  value */\n      dup3\n        /* \"PancakeERC20.sol\":2175:2201  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":2175:2194  balanceOf[from].sub */\n      tag_147\n        /* \"PancakeERC20.sol\":2175:2201  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2157:2172  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2157:2166  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2157:2172  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"PancakeERC20.sol\":2157:2201  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"PancakeERC20.sol\":2227:2240  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2227:2251  balanceOf[to].add(value) */\n      tag_294\n      swap1\n        /* \"PancakeERC20.sol\":2245:2250  value */\n      dup3\n        /* \"PancakeERC20.sol\":2227:2251  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":2227:2244  balanceOf[to].add */\n      tag_295\n        /* \"PancakeERC20.sol\":2227:2251  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":2211:2224  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":2211:2220  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2211:2224  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"PancakeERC20.sol\":2211:2251  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"PancakeERC20.sol\":2266:2291  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"PancakeERC20.sol\":2211:2224  balanceOf[to] */\n      swap2\n      swap4\n        /* \"PancakeERC20.sol\":2266:2291  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":2049:2298  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":3551:4383  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n    tag_181:\n        /* \"PancakePair.sol\":3624:3634  bool feeOn */\n      0x00\n        /* \"PancakePair.sol\":3646:3659  address feeTo */\n      dup1\n        /* \"PancakePair.sol\":3678:3685  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":3662:3692  IPancakeFactory(factory).feeTo */\n      and\n      0x017e7e58\n        /* \"PancakePair.sol\":3662:3694  IPancakeFactory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_297\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_297:\n        /* \"PancakePair.sol\":3662:3694  IPancakeFactory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_298\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_298:\n        /* \"PancakePair.sol\":3662:3694  IPancakeFactory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_299\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_299:\n      pop\n        /* \"PancakePair.sol\":3662:3694  IPancakeFactory(factory).feeTo() */\n      mload\n        /* \"PancakePair.sol\":3755:3760  kLast */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakePair.sol\":3712:3731  feeTo != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap5\n      pop\n        /* \"PancakePair.sol\":3662:3694  IPancakeFactory(factory).feeTo() */\n      swap2\n      swap3\n      pop\n        /* \"PancakePair.sol\":3755:3760  kLast */\n      swap1\n        /* \"PancakePair.sol\":3785:4377  if (feeOn) {... */\n      tag_300\n      jumpi\n        /* \"PancakePair.sol\":3814:3825  _kLast != 0 */\n      dup1\n      iszero\n        /* \"PancakePair.sol\":3810:4310  if (_kLast != 0) {... */\n      tag_301\n      jumpi\n        /* \"PancakePair.sol\":3845:3855  uint rootK */\n      0x00\n        /* \"PancakePair.sol\":3858:3899  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_302\n        /* \"PancakePair.sol\":3868:3898  uint(_reserve0).mul(_reserve1) */\n      tag_185\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"PancakePair.sol\":3868:3883  uint(_reserve0) */\n      dup9\n      dup2\n      and\n      swap1\n        /* \"PancakePair.sol\":3868:3898  uint(_reserve0).mul(_reserve1) */\n      dup9\n      and\n      0xffffffff\n        /* \"PancakePair.sol\":3868:3887  uint(_reserve0).mul */\n      tag_145\n        /* \"PancakePair.sol\":3868:3898  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n        /* \"PancakePair.sol\":3858:3899  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n    tag_302:\n        /* \"PancakePair.sol\":3845:3899  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":3917:3931  uint rootKLast */\n      0x00\n        /* \"PancakePair.sol\":3934:3951  Math.sqrt(_kLast) */\n      tag_304\n        /* \"PancakePair.sol\":3944:3950  _kLast */\n      dup4\n        /* \"PancakePair.sol\":3934:3943  Math.sqrt */\n      tag_186\n        /* \"PancakePair.sol\":3934:3951  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_304:\n        /* \"PancakePair.sol\":3917:3951  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":3981:3990  rootKLast */\n      dup1\n        /* \"PancakePair.sol\":3973:3978  rootK */\n      dup3\n        /* \"PancakePair.sol\":3973:3990  rootK > rootKLast */\n      gt\n        /* \"PancakePair.sol\":3969:4296  if (rootK > rootKLast) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"PancakePair.sol\":4014:4028  uint numerator */\n      0x00\n        /* \"PancakePair.sol\":4031:4075  totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      tag_306\n        /* \"PancakePair.sol\":4073:4074  8 */\n      0x08\n        /* \"PancakePair.sol\":4031:4068  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_152\n        /* \"PancakePair.sol\":4047:4067  rootK.sub(rootKLast) */\n      tag_308\n        /* \"PancakePair.sol\":4047:4052  rootK */\n      dup7\n        /* \"PancakePair.sol\":4057:4066  rootKLast */\n      dup7\n        /* \"PancakePair.sol\":4047:4067  rootK.sub(rootKLast) */\n      0xffffffff\n        /* \"PancakePair.sol\":4047:4056  rootK.sub */\n      tag_147\n        /* \"PancakePair.sol\":4047:4067  rootK.sub(rootKLast) */\n      and\n      jump\t// in\n    tag_308:\n        /* \"PancakePair.sol\":4031:4042  totalSupply */\n      sload(0x00)\n      swap1\n        /* \"PancakePair.sol\":4031:4068  totalSupply.mul(rootK.sub(rootKLast)) */\n      0xffffffff\n        /* \"PancakePair.sol\":4031:4046  totalSupply.mul */\n      tag_145\n        /* \"PancakePair.sol\":4031:4068  totalSupply.mul(rootK.sub(rootKLast)) */\n      and\n      jump\t// in\n        /* \"PancakePair.sol\":4031:4075  totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n    tag_306:\n        /* \"PancakePair.sol\":4014:4075  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4097:4113  uint denominator */\n      0x00\n        /* \"PancakePair.sol\":4116:4151  rootK.mul(17).add(rootKLast.mul(8)) */\n      tag_309\n        /* \"PancakePair.sol\":4134:4150  rootKLast.mul(8) */\n      tag_310\n        /* \"PancakePair.sol\":4134:4143  rootKLast */\n      dup5\n        /* \"PancakePair.sol\":4148:4149  8 */\n      0x08\n        /* \"PancakePair.sol\":4134:4150  rootKLast.mul(8) */\n      0xffffffff\n        /* \"PancakePair.sol\":4134:4147  rootKLast.mul */\n      tag_145\n        /* \"PancakePair.sol\":4134:4150  rootKLast.mul(8) */\n      and\n      jump\t// in\n    tag_310:\n        /* \"PancakePair.sol\":4116:4129  rootK.mul(17) */\n      tag_311\n        /* \"PancakePair.sol\":4116:4121  rootK */\n      dup7\n        /* \"PancakePair.sol\":4126:4128  17 */\n      0x11\n        /* \"PancakePair.sol\":4116:4129  rootK.mul(17) */\n      0xffffffff\n        /* \"PancakePair.sol\":4116:4125  rootK.mul */\n      tag_145\n        /* \"PancakePair.sol\":4116:4129  rootK.mul(17) */\n      and\n      jump\t// in\n    tag_311:\n        /* \"PancakePair.sol\":4116:4133  rootK.mul(17).add */\n      swap1\n        /* \"PancakePair.sol\":4116:4151  rootK.mul(17).add(rootKLast.mul(8)) */\n      0xffffffff\n        /* \"PancakePair.sol\":4116:4133  rootK.mul(17).add */\n      tag_295\n        /* \"PancakePair.sol\":4116:4151  rootK.mul(17).add(rootKLast.mul(8)) */\n      and\n      jump\t// in\n    tag_309:\n        /* \"PancakePair.sol\":4097:4151  uint denominator = rootK.mul(17).add(rootKLast.mul(8)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4173:4187  uint liquidity */\n      0x00\n        /* \"PancakePair.sol\":4202:4213  denominator */\n      dup2\n        /* \"PancakePair.sol\":4190:4199  numerator */\n      dup4\n        /* \"PancakePair.sol\":4190:4213  numerator / denominator */\n      dup2\n      tag_312\n      jumpi\n      invalid\n    tag_312:\n      div\n      swap1\n      pop\n        /* \"PancakePair.sol\":4239:4252  liquidity > 0 */\n      dup1\n      iszero\n        /* \"PancakePair.sol\":4235:4277  if (liquidity > 0) _mint(feeTo, liquidity) */\n      tag_314\n      jumpi\n        /* \"PancakePair.sol\":4254:4277  _mint(feeTo, liquidity) */\n      tag_314\n        /* \"PancakePair.sol\":4260:4265  feeTo */\n      dup8\n        /* \"PancakePair.sol\":4267:4276  liquidity */\n      dup3\n        /* \"PancakePair.sol\":4254:4259  _mint */\n      tag_188\n        /* \"PancakePair.sol\":4254:4277  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_314:\n        /* \"PancakePair.sol\":3969:4296  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n    tag_305:\n        /* \"PancakePair.sol\":3810:4310  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_301:\n        /* \"PancakePair.sol\":3785:4377  if (feeOn) {... */\n      jump(tag_316)\n    tag_300:\n        /* \"PancakePair.sol\":4330:4341  _kLast != 0 */\n      dup1\n      iszero\n        /* \"PancakePair.sol\":4326:4377  if (_kLast != 0) {... */\n      tag_316\n      jumpi\n        /* \"PancakePair.sol\":4365:4366  0 */\n      0x00\n        /* \"PancakePair.sol\":4357:4362  kLast */\n      0x0b\n        /* \"PancakePair.sol\":4357:4366  kLast = 0 */\n      sstore\n        /* \"PancakePair.sol\":4326:4377  if (_kLast != 0) {... */\n    tag_316:\n        /* \"PancakePair.sol\":3551:4383  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_186:\n        /* \"libraries/Math.sol\":400:409  uint256 z */\n      0x00\n        /* \"libraries/Math.sol\":429:430  3 */\n      0x03\n        /* \"libraries/Math.sol\":425:426  y */\n      dup3\n        /* \"libraries/Math.sol\":425:430  y > 3 */\n      gt\n        /* \"libraries/Math.sol\":421:647  if (y > 3) {... */\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"libraries/Math.sol\":450:451  y */\n      dup1\n        /* \"libraries/Math.sol\":485:486  1 */\n      0x01\n        /* \"libraries/Math.sol\":481:482  2 */\n      0x02\n        /* \"libraries/Math.sol\":477:482  y / 2 */\n      dup3\n      div\n        /* \"libraries/Math.sol\":477:486  y / 2 + 1 */\n      add\n        /* \"libraries/Math.sol\":500:589  while (x < z) {... */\n    tag_320:\n        /* \"libraries/Math.sol\":511:512  z */\n      dup2\n        /* \"libraries/Math.sol\":507:508  x */\n      dup2\n        /* \"libraries/Math.sol\":507:512  x < z */\n      lt\n        /* \"libraries/Math.sol\":500:589  while (x < z) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"libraries/Math.sol\":536:537  x */\n      dup1\n        /* \"libraries/Math.sol\":532:537  z = x */\n      swap2\n      pop\n        /* \"libraries/Math.sol\":573:574  2 */\n      0x02\n        /* \"libraries/Math.sol\":568:569  x */\n      dup2\n        /* \"libraries/Math.sol\":564:565  x */\n      dup3\n        /* \"libraries/Math.sol\":560:561  y */\n      dup6\n        /* \"libraries/Math.sol\":560:565  y / x */\n      dup2\n      tag_322\n      jumpi\n      invalid\n    tag_322:\n      div\n        /* \"libraries/Math.sol\":560:569  y / x + x */\n      add\n        /* \"libraries/Math.sol\":559:574  (y / x + x) / 2 */\n      dup2\n      tag_323\n      jumpi\n      invalid\n    tag_323:\n      div\n        /* \"libraries/Math.sol\":555:574  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":500:589  while (x < z) {... */\n      jump(tag_320)\n    tag_321:\n        /* \"libraries/Math.sol\":421:647  if (y > 3) {... */\n      pop\n      jump(tag_325)\n    tag_318:\n        /* \"libraries/Math.sol\":609:615  y != 0 */\n      dup2\n      iszero\n        /* \"libraries/Math.sol\":605:647  if (y != 0) {... */\n      tag_325\n      jumpi\n      pop\n        /* \"libraries/Math.sol\":635:636  1 */\n      0x01\n        /* \"libraries/Math.sol\":605:647  if (y != 0) {... */\n    tag_325:\n        /* \"libraries/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":1424:1624  function _mint(address to, uint256 value) internal {... */\n    tag_188:\n        /* \"PancakeERC20.sol\":1499:1510  totalSupply */\n      sload(0x00)\n        /* \"PancakeERC20.sol\":1499:1521  totalSupply.add(value) */\n      tag_327\n      swap1\n        /* \"PancakeERC20.sol\":1515:1520  value */\n      dup3\n        /* \"PancakeERC20.sol\":1499:1521  totalSupply.add(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":1499:1514  totalSupply.add */\n      tag_295\n        /* \"PancakeERC20.sol\":1499:1521  totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_327:\n        /* \"PancakeERC20.sol\":1485:1496  totalSupply */\n      0x00\n        /* \"PancakeERC20.sol\":1485:1521  totalSupply = totalSupply.add(value) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":1547:1560  balanceOf[to] */\n      dup4\n      and\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":1547:1556  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1547:1560  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":1547:1571  balanceOf[to].add(value) */\n      tag_328\n      swap1\n        /* \"PancakeERC20.sol\":1565:1570  value */\n      dup3\n        /* \"PancakeERC20.sol\":1547:1571  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":1547:1564  balanceOf[to].add */\n      tag_295\n        /* \"PancakeERC20.sol\":1547:1571  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":1531:1544  balanceOf[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":1531:1540  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1531:1544  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PancakeERC20.sol\":1531:1571  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"PancakeERC20.sol\":1586:1617  Transfer(address(0), to, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"PancakeERC20.sol\":1531:1544  balanceOf[to] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"PancakeERC20.sol\":1586:1617  Transfer(address(0), to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1424:1624  function _mint(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_195:\n        /* \"libraries/Math.sol\":192:201  uint256 z */\n      0x00\n        /* \"libraries/Math.sol\":221:222  y */\n      dup2\n        /* \"libraries/Math.sol\":217:218  x */\n      dup4\n        /* \"libraries/Math.sol\":217:222  x < y */\n      lt\n        /* \"libraries/Math.sol\":217:230  x < y ? x : y */\n      tag_330\n      jumpi\n        /* \"libraries/Math.sol\":229:230  y */\n      dup2\n        /* \"libraries/Math.sol\":217:230  x < y ? x : y */\n      jump(tag_331)\n    tag_330:\n        /* \"libraries/Math.sol\":225:226  x */\n      dup3\n        /* \"libraries/Math.sol\":217:230  x < y ? x : y */\n    tag_331:\n        /* \"libraries/Math.sol\":213:230  z = x < y ? x : y */\n      swap4\n        /* \"libraries/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":1630:1838  function _burn(address from, uint256 value) internal {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":1711:1726  balanceOf[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":1711:1720  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1711:1726  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":1711:1737  balanceOf[from].sub(value) */\n      tag_333\n      swap1\n        /* \"PancakeERC20.sol\":1731:1736  value */\n      dup3\n        /* \"PancakeERC20.sol\":1711:1737  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":1711:1730  balanceOf[from].sub */\n      tag_147\n        /* \"PancakeERC20.sol\":1711:1737  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"PancakeERC20.sol\":1693:1708  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"PancakeERC20.sol\":1693:1702  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1693:1708  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"PancakeERC20.sol\":1693:1737  balanceOf[from] = balanceOf[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"PancakeERC20.sol\":1761:1772  totalSupply */\n      sload\n        /* \"PancakeERC20.sol\":1761:1783  totalSupply.sub(value) */\n      tag_334\n      swap1\n        /* \"PancakeERC20.sol\":1777:1782  value */\n      dup3\n        /* \"PancakeERC20.sol\":1761:1783  totalSupply.sub(value) */\n      0xffffffff\n        /* \"PancakeERC20.sol\":1761:1776  totalSupply.sub */\n      tag_147\n        /* \"PancakeERC20.sol\":1761:1783  totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_334:\n        /* \"PancakeERC20.sol\":1747:1758  totalSupply */\n      0x00\n        /* \"PancakeERC20.sol\":1747:1783  totalSupply = totalSupply.sub(value) */\n      swap1\n      dup2\n      sstore\n        /* \"PancakeERC20.sol\":1798:1831  Transfer(from, address(0), value) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1630:1838  function _burn(address from, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n    tag_287:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"libraries/UQ112x112.sol\":394:404  uint224(y) */\n      and\n      shl(0x70, 0x01)\n        /* \"libraries/UQ112x112.sol\":394:411  uint224(y) * Q112 */\n      mul\n      swap1\n        /* \"libraries/UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n      jump\t// out\n        /* \"libraries/UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n    tag_288:\n        /* \"libraries/UQ112x112.sol\":565:574  uint224 z */\n      0x00\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"libraries/UQ112x112.sol\":594:604  uint224(y) */\n      dup3\n      and\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"libraries/UQ112x112.sol\":590:604  x / uint224(y) */\n      dup5\n      and\n        /* \"libraries/UQ112x112.sol\":594:604  uint224(y) */\n      dup2\n        /* \"libraries/UQ112x112.sol\":590:604  x / uint224(y) */\n      tag_337\n      jumpi\n      invalid\n    tag_337:\n      div\n      swap4\n        /* \"libraries/UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_295:\n        /* \"libraries/SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c 50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8 50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a7231582029fe1d0ebc95d3ed31d27ad6f104f359b5d27281289eae277c31338ea3d5b65564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001600c5534801561001557600080fd5b5060405146908060526123788239604080519182900360520182208282018252600b83526a50616e63616b65204c507360a81b6020938401528151808301835260018152603160f81b908401528151808401919091527fe87cb5a4dc26cf9451529a20899fcee996799afd48d7c0db7c25e150b364661d818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c09094019052825192019190912060035550600580546001600160a01b03191633179055612272806101066000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610534578063d505accf1461053c578063dd62ed3e1461058d578063fff6cae9146105bb576101a9565b8063ba9a7a56146104fe578063bc25cf7714610506578063c45a01551461052c576101a9565b80637ecebe00116100d35780637ecebe001461046557806389afcb441461048b57806395d89b41146104ca578063a9059cbb146104d2576101a9565b80636a6278421461041157806370a08231146104375780637464fc3d1461045d576101a9565b806323b872dd116101665780633644e515116101405780633644e515146103cb578063485cc955146103d35780635909c0d5146104015780635a3d549314610409576101a9565b806323b872dd1461036f57806330adf81f146103a5578063313ce567146103ad576101a9565b8063022c0d9f146101ae57806306fdde031461023c5780630902f1ac146102b9578063095ea7b3146102f15780630dfe16811461033157806318160ddd14610355575b600080fd5b61023a600480360360808110156101c457600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156101fb57600080fd5b82018360208201111561020d57600080fd5b8035906020019184600183028401116401000000008311171561022f57600080fd5b5090925090506105c3565b005b610244610b0f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027e578181015183820152602001610266565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c1610b36565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61031d6004803603604081101561030757600080fd5b506001600160a01b038135169060200135610b60565b604080519115158252519081900360200190f35b610339610b77565b604080516001600160a01b039092168252519081900360200190f35b61035d610b86565b60408051918252519081900360200190f35b61031d6004803603606081101561038557600080fd5b506001600160a01b03813581169160208101359091169060400135610b8c565b61035d610c26565b6103b5610c4a565b6040805160ff9092168252519081900360200190f35b61035d610c4f565b61023a600480360360408110156103e957600080fd5b506001600160a01b0381358116916020013516610c55565b61035d610cd7565b61035d610cdd565b61035d6004803603602081101561042757600080fd5b50356001600160a01b0316610ce3565b61035d6004803603602081101561044d57600080fd5b50356001600160a01b0316610fe1565b61035d610ff3565b61035d6004803603602081101561047b57600080fd5b50356001600160a01b0316610ff9565b6104b1600480360360208110156104a157600080fd5b50356001600160a01b031661100b565b6040805192835260208301919091528051918290030190f35b6102446113af565b61031d600480360360408110156104e857600080fd5b506001600160a01b0381351690602001356113d2565b61035d6113df565b61023a6004803603602081101561051c57600080fd5b50356001600160a01b03166113e5565b61033961154e565b61033961155d565b61023a600480360360e081101561055257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561156c565b61035d600480360360408110156105a357600080fd5b506001600160a01b038135811691602001351661176c565b61023a611789565b600c5460011461060c576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c558415158061061f5750600084115b61065a5760405162461bcd60e51b81526004018080602001828103825260238152602001806121f56023913960400191505060405180910390fd5b600080610665610b36565b5091509150816001600160701b03168710801561068a5750806001600160701b031686105b6106db576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60065460075460009182916001600160a01b039182169190811690891682148015906107195750806001600160a01b0316896001600160a01b031614155b610760576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8a1561077157610771828a8d6118e9565b891561078257610782818a8c6118e9565b861561083d57886001600160a01b03166384800812338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561082457600080fd5b505af1158015610838573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d60208110156108ad57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156108f957600080fd5b505afa15801561090d573d6000803e3d6000fd5b505050506040513d602081101561092357600080fd5b5051925060009150506001600160701b0385168a90038311610946576000610955565b89856001600160701b03160383035b9050600089856001600160701b0316038311610972576000610981565b89856001600160701b03160383035b905060008211806109925750600081115b6109cd5760405162461bcd60e51b81526004018080602001828103825260228152602001806121ad6022913960400191505060405180910390fd5b6000610a016109e384601963ffffffff611a8316565b6109f58761271063ffffffff611a8316565b9063ffffffff611ae616565b90506000610a196109e384601963ffffffff611a8316565b9050610a4b6305f5e100610a3f6001600160701b038b8116908b1663ffffffff611a8316565b9063ffffffff611a8316565b610a5b838363ffffffff611a8316565b1015610a9b576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610aa984848888611b36565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600b81526020016a50616e63616b65204c507360a81b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610b6d338484611cf9565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610c11576001600160a01b0384166000908152600260209081526040808320338452909152902054610bec908363ffffffff611ae616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c1c848484611d5b565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610ca9576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610d2e576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c81905580610d3e610b36565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d9257600080fd5b505afa158015610da6573d6000803e3d6000fd5b505050506040513d6020811015610dbc57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e0f57600080fd5b505afa158015610e23573d6000803e3d6000fd5b505050506040513d6020811015610e3957600080fd5b505190506000610e58836001600160701b03871663ffffffff611ae616565b90506000610e75836001600160701b03871663ffffffff611ae616565b90506000610e838787611e15565b60005490915080610ec057610eac6103e86109f5610ea7878763ffffffff611a8316565b611f88565b9850610ebb60006103e8611fda565b610f0f565b610f0c6001600160701b038916610edd868463ffffffff611a8316565b81610ee457fe5b046001600160701b038916610eff868563ffffffff611a8316565b81610f0657fe5b04612070565b98505b60008911610f4e5760405162461bcd60e51b81526004018080602001828103825260268152602001806122186026913960400191505060405180910390fd5b610f588a8a611fda565b610f6486868a8a611b36565b8115610f9457600854610f90906001600160701b0380821691600160701b90041663ffffffff611a8316565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c54600114611057576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c81905580611067610b36565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156110c357600080fd5b505afa1580156110d7573d6000803e3d6000fd5b505050506040513d60208110156110ed57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561113b57600080fd5b505afa15801561114f573d6000803e3d6000fd5b505050506040513d602081101561116557600080fd5b5051306000908152600160205260408120549192506111848888611e15565b6000549091508061119b848763ffffffff611a8316565b816111a257fe5b049a50806111b6848663ffffffff611a8316565b816111bd57fe5b04995060008b1180156111d0575060008a115b61120b5760405162461bcd60e51b81526004018080602001828103825260268152602001806121cf6026913960400191505060405180910390fd5b6112153084612088565b611220878d8d6118e9565b61122b868d8c6118e9565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561127157600080fd5b505afa158015611285573d6000803e3d6000fd5b505050506040513d602081101561129b57600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156112e757600080fd5b505afa1580156112fb573d6000803e3d6000fd5b505050506040513d602081101561131157600080fd5b5051935061132185858b8b611b36565b81156113515760085461134d906001600160701b0380821691600160701b90041663ffffffff611a8316565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6000610b6d338484611d5b565b6103e881565b600c5460011461142e576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926114dd92859287926114d8926001600160701b03169185916370a0823191602480820192602092909190829003018186803b1580156114a057600080fd5b505afa1580156114b4573d6000803e3d6000fd5b505050506040513d60208110156114ca57600080fd5b50519063ffffffff611ae616565b6118e9565b600854604080516370a0823160e01b8152306004820152905161154492849287926114d892600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156114a057600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b428410156115b4576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156116cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117055750886001600160a01b0316816001600160a01b0316145b611756576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b611761898989611cf9565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146117d2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516118e2926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561182357600080fd5b505afa158015611837573d6000803e3d6000fd5b505050506040513d602081101561184d57600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561189a57600080fd5b505afa1580156118ae573d6000803e3d6000fd5b505050506040513d60208110156118c457600080fd5b50516008546001600160701b0380821691600160701b900416611b36565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b602083106119965780518252601f199092019160209182019101611977565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119f8576040519150601f19603f3d011682016040523d82523d6000602084013e6119fd565b606091505b5091509150818015611a2b575080511580611a2b5750808060200190516020811015611a2857600080fd5b50515b611a7c576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611a9e57505080820282828281611a9b57fe5b04145b610b71576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610b71576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611b5457506001600160701b038311155b611b99576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611bc957506001600160701b03841615155b8015611bdd57506001600160701b03831615155b15611c4e578063ffffffff16611c0b85611bf686612126565b6001600160e01b03169063ffffffff61213816565b600980546001600160e01b03929092169290920201905563ffffffff8116611c3684611bf687612126565b600a80546001600160e01b0392909216929092020190555b600880546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611d84908263ffffffff611ae616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611db9908263ffffffff61215d16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6657600080fd5b505afa158015611e7a573d6000803e3d6000fd5b505050506040513d6020811015611e9057600080fd5b5051600b546001600160a01b038216158015945091925090611f74578015611f6f576000611ed3610ea76001600160701b0388811690881663ffffffff611a8316565b90506000611ee083611f88565b905080821115611f6c576000611f136008610a3f611f04868663ffffffff611ae616565b6000549063ffffffff611a8316565b90506000611f48611f2b84600863ffffffff611a8316565b611f3c86601163ffffffff611a8316565b9063ffffffff61215d16565b90506000818381611f5557fe5b0490508015611f6857611f688782611fda565b5050505b50505b611f80565b8015611f80576000600b555b505092915050565b60006003821115611fcb575080600160028204015b81811015611fc557809150600281828581611fb457fe5b040181611fbd57fe5b049050611f9d565b50611fd5565b8115611fd5575060015b919050565b600054611fed908263ffffffff61215d16565b60009081556001600160a01b038316815260016020526040902054612018908263ffffffff61215d16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081831061207f5781612081565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546120b1908263ffffffff611ae616565b6001600160a01b038316600090815260016020526040812091909155546120de908263ffffffff611ae616565b60009081556040805183815290516001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161215557fe5b049392505050565b80820182811015610b71576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e454450616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a7231582029fe1d0ebc95d3ed31d27ad6f104f359b5d27281289eae277c31338ea3d5b65564736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x2378 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP4 MSTORE PUSH11 0x50616E63616B65204C5073 PUSH1 0xA8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xE87CB5A4DC26CF9451529A20899FCEE996799AFD48D7C0DB7C25E150B364661D DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2272 DUP1 PUSH2 0x106 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x5BB JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x52C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x45D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x409 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x355 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x35D PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x154E JUMP JUMPDEST PUSH2 0x339 PUSH2 0x155D JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x156C JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x176C JUMP JUMPDEST PUSH2 0x23A PUSH2 0x1789 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x60C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x61F JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21F5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x665 PUSH2 0xB36 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x68A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 AND SWAP1 DUP10 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x719 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x760 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP11 ISZERO PUSH2 0x771 JUMPI PUSH2 0x771 DUP3 DUP11 DUP14 PUSH2 0x18E9 JUMP JUMPDEST DUP10 ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 DUP2 DUP11 DUP13 PUSH2 0x18E9 JUMP JUMPDEST DUP7 ISZERO PUSH2 0x83D JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x838 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH1 0x0 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0x946 JUMPI PUSH1 0x0 PUSH2 0x955 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0x972 JUMPI PUSH1 0x0 PUSH2 0x981 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x992 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21AD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA01 PUSH2 0x9E3 DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0x9F5 DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA19 PUSH2 0x9E3 DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA4B PUSH4 0x5F5E100 PUSH2 0xA3F PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0xA5B DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST LT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xAA9 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x50616E63616B65204C5073 PUSH1 0xA8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D CALLER DUP5 DUP5 PUSH2 0x1CF9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xC11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBEC SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xC1C DUP5 DUP5 DUP5 PUSH2 0x1D5B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0xD2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0xD3E PUSH2 0xB36 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xE58 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE75 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE83 DUP8 DUP8 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xEC0 JUMPI PUSH2 0xEAC PUSH2 0x3E8 PUSH2 0x9F5 PUSH2 0xEA7 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST SWAP9 POP PUSH2 0xEBB PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0xF0C PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xEDD DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0xEE4 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xEFF DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0xF06 JUMPI INVALID JUMPDEST DIV PUSH2 0x2070 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2218 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF58 DUP11 DUP11 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0xF64 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1B36 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF94 JUMPI PUSH1 0x8 SLOAD PUSH2 0xF90 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x1057 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1067 PUSH2 0xB36 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x114F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1184 DUP9 DUP9 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x119B DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0x11A2 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x11B6 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0x11BD JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x11D0 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x120B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21CF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1215 ADDRESS DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x1220 DUP8 DUP14 DUP14 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x122B DUP7 DUP14 DUP13 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1285 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x129B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x1321 DUP6 DUP6 DUP12 DUP12 PUSH2 0x1B36 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1351 JUMPI PUSH1 0x8 SLOAD PUSH2 0x134D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x43616B652D4C5 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D CALLER DUP5 DUP5 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x142E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x14DD SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x14D8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1544 SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x14D8 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1705 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1756 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1761 DUP10 DUP10 DUP10 PUSH2 0x1CF9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x17D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x18E2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1837 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1996 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19F8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A2B JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1A2B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1A7C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1A9E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1A9B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xB71 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1B54 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1B99 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BC9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1C4E JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1C0B DUP6 PUSH2 0x1BF6 DUP7 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2138 AND JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1C36 DUP5 PUSH2 0x1BF6 DUP8 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D84 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1DB9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x1F74 JUMPI DUP1 ISZERO PUSH2 0x1F6F JUMPI PUSH1 0x0 PUSH2 0x1ED3 PUSH2 0xEA7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EE0 DUP4 PUSH2 0x1F88 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F6C JUMPI PUSH1 0x0 PUSH2 0x1F13 PUSH1 0x8 PUSH2 0xA3F PUSH2 0x1F04 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F48 PUSH2 0x1F2B DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0x1F3C DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x1F55 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x1F68 JUMPI PUSH2 0x1F68 DUP8 DUP3 PUSH2 0x1FDA JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x1F80 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F80 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1FCB JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FC5 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1FB4 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x1FBD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x1F9D JUMP JUMPDEST POP PUSH2 0x1FD5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1FD5 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1FED SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2018 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x207F JUMPI DUP2 PUSH2 0x2081 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20B1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x20DE SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2155 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0x29 INVALID SAR 0xE 0xBC SWAP6 0xD3 0xED BALANCE 0xD2 PUSH27 0xD6F104F359B5D27281289EAE277C31338EA3D5B65564736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "318:9486:1:-;;;1162:1;1138:25;;2214:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1157:95:0;;1061:7;;1157:95;;;;;;;;;;;;;;;;1286:4;;;;;;;;-1:-1:-1;;;1286:4:0;;;;;1320:10;;;;;;;;;;-1:-1:-1;;;1320:10:0;;;;1129:272;;;;;;;;;1270:22;1129:272;;;;1310:21;1129:272;;;;;;;;;;;1382:4;1129:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1129:272:0;;;;;;1106:305;;;;;;;;1087:16;:324;-1:-1:-1;2245:7:1;:20;;-1:-1:-1;;;;;;2245:20:1;2255:10;2245:20;;;318:9486;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610534578063d505accf1461053c578063dd62ed3e1461058d578063fff6cae9146105bb576101a9565b8063ba9a7a56146104fe578063bc25cf7714610506578063c45a01551461052c576101a9565b80637ecebe00116100d35780637ecebe001461046557806389afcb441461048b57806395d89b41146104ca578063a9059cbb146104d2576101a9565b80636a6278421461041157806370a08231146104375780637464fc3d1461045d576101a9565b806323b872dd116101665780633644e515116101405780633644e515146103cb578063485cc955146103d35780635909c0d5146104015780635a3d549314610409576101a9565b806323b872dd1461036f57806330adf81f146103a5578063313ce567146103ad576101a9565b8063022c0d9f146101ae57806306fdde031461023c5780630902f1ac146102b9578063095ea7b3146102f15780630dfe16811461033157806318160ddd14610355575b600080fd5b61023a600480360360808110156101c457600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156101fb57600080fd5b82018360208201111561020d57600080fd5b8035906020019184600183028401116401000000008311171561022f57600080fd5b5090925090506105c3565b005b610244610b0f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027e578181015183820152602001610266565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c1610b36565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61031d6004803603604081101561030757600080fd5b506001600160a01b038135169060200135610b60565b604080519115158252519081900360200190f35b610339610b77565b604080516001600160a01b039092168252519081900360200190f35b61035d610b86565b60408051918252519081900360200190f35b61031d6004803603606081101561038557600080fd5b506001600160a01b03813581169160208101359091169060400135610b8c565b61035d610c26565b6103b5610c4a565b6040805160ff9092168252519081900360200190f35b61035d610c4f565b61023a600480360360408110156103e957600080fd5b506001600160a01b0381358116916020013516610c55565b61035d610cd7565b61035d610cdd565b61035d6004803603602081101561042757600080fd5b50356001600160a01b0316610ce3565b61035d6004803603602081101561044d57600080fd5b50356001600160a01b0316610fe1565b61035d610ff3565b61035d6004803603602081101561047b57600080fd5b50356001600160a01b0316610ff9565b6104b1600480360360208110156104a157600080fd5b50356001600160a01b031661100b565b6040805192835260208301919091528051918290030190f35b6102446113af565b61031d600480360360408110156104e857600080fd5b506001600160a01b0381351690602001356113d2565b61035d6113df565b61023a6004803603602081101561051c57600080fd5b50356001600160a01b03166113e5565b61033961154e565b61033961155d565b61023a600480360360e081101561055257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561156c565b61035d600480360360408110156105a357600080fd5b506001600160a01b038135811691602001351661176c565b61023a611789565b600c5460011461060c576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c558415158061061f5750600084115b61065a5760405162461bcd60e51b81526004018080602001828103825260238152602001806121f56023913960400191505060405180910390fd5b600080610665610b36565b5091509150816001600160701b03168710801561068a5750806001600160701b031686105b6106db576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60065460075460009182916001600160a01b039182169190811690891682148015906107195750806001600160a01b0316896001600160a01b031614155b610760576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8a1561077157610771828a8d6118e9565b891561078257610782818a8c6118e9565b861561083d57886001600160a01b03166384800812338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561082457600080fd5b505af1158015610838573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d60208110156108ad57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156108f957600080fd5b505afa15801561090d573d6000803e3d6000fd5b505050506040513d602081101561092357600080fd5b5051925060009150506001600160701b0385168a90038311610946576000610955565b89856001600160701b03160383035b9050600089856001600160701b0316038311610972576000610981565b89856001600160701b03160383035b905060008211806109925750600081115b6109cd5760405162461bcd60e51b81526004018080602001828103825260228152602001806121ad6022913960400191505060405180910390fd5b6000610a016109e384601963ffffffff611a8316565b6109f58761271063ffffffff611a8316565b9063ffffffff611ae616565b90506000610a196109e384601963ffffffff611a8316565b9050610a4b6305f5e100610a3f6001600160701b038b8116908b1663ffffffff611a8316565b9063ffffffff611a8316565b610a5b838363ffffffff611a8316565b1015610a9b576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610aa984848888611b36565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600b81526020016a50616e63616b65204c507360a81b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610b6d338484611cf9565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610c11576001600160a01b0384166000908152600260209081526040808320338452909152902054610bec908363ffffffff611ae616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c1c848484611d5b565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610ca9576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610d2e576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c81905580610d3e610b36565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d9257600080fd5b505afa158015610da6573d6000803e3d6000fd5b505050506040513d6020811015610dbc57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e0f57600080fd5b505afa158015610e23573d6000803e3d6000fd5b505050506040513d6020811015610e3957600080fd5b505190506000610e58836001600160701b03871663ffffffff611ae616565b90506000610e75836001600160701b03871663ffffffff611ae616565b90506000610e838787611e15565b60005490915080610ec057610eac6103e86109f5610ea7878763ffffffff611a8316565b611f88565b9850610ebb60006103e8611fda565b610f0f565b610f0c6001600160701b038916610edd868463ffffffff611a8316565b81610ee457fe5b046001600160701b038916610eff868563ffffffff611a8316565b81610f0657fe5b04612070565b98505b60008911610f4e5760405162461bcd60e51b81526004018080602001828103825260268152602001806122186026913960400191505060405180910390fd5b610f588a8a611fda565b610f6486868a8a611b36565b8115610f9457600854610f90906001600160701b0380821691600160701b90041663ffffffff611a8316565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c54600114611057576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c81905580611067610b36565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156110c357600080fd5b505afa1580156110d7573d6000803e3d6000fd5b505050506040513d60208110156110ed57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561113b57600080fd5b505afa15801561114f573d6000803e3d6000fd5b505050506040513d602081101561116557600080fd5b5051306000908152600160205260408120549192506111848888611e15565b6000549091508061119b848763ffffffff611a8316565b816111a257fe5b049a50806111b6848663ffffffff611a8316565b816111bd57fe5b04995060008b1180156111d0575060008a115b61120b5760405162461bcd60e51b81526004018080602001828103825260268152602001806121cf6026913960400191505060405180910390fd5b6112153084612088565b611220878d8d6118e9565b61122b868d8c6118e9565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561127157600080fd5b505afa158015611285573d6000803e3d6000fd5b505050506040513d602081101561129b57600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156112e757600080fd5b505afa1580156112fb573d6000803e3d6000fd5b505050506040513d602081101561131157600080fd5b5051935061132185858b8b611b36565b81156113515760085461134d906001600160701b0380821691600160701b90041663ffffffff611a8316565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6000610b6d338484611d5b565b6103e881565b600c5460011461142e576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926114dd92859287926114d8926001600160701b03169185916370a0823191602480820192602092909190829003018186803b1580156114a057600080fd5b505afa1580156114b4573d6000803e3d6000fd5b505050506040513d60208110156114ca57600080fd5b50519063ffffffff611ae616565b6118e9565b600854604080516370a0823160e01b8152306004820152905161154492849287926114d892600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156114a057600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b428410156115b4576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156116cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117055750886001600160a01b0316816001600160a01b0316145b611756576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b611761898989611cf9565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146117d2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516118e2926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561182357600080fd5b505afa158015611837573d6000803e3d6000fd5b505050506040513d602081101561184d57600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561189a57600080fd5b505afa1580156118ae573d6000803e3d6000fd5b505050506040513d60208110156118c457600080fd5b50516008546001600160701b0380821691600160701b900416611b36565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b602083106119965780518252601f199092019160209182019101611977565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119f8576040519150601f19603f3d011682016040523d82523d6000602084013e6119fd565b606091505b5091509150818015611a2b575080511580611a2b5750808060200190516020811015611a2857600080fd5b50515b611a7c576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611a9e57505080820282828281611a9b57fe5b04145b610b71576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610b71576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611b5457506001600160701b038311155b611b99576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611bc957506001600160701b03841615155b8015611bdd57506001600160701b03831615155b15611c4e578063ffffffff16611c0b85611bf686612126565b6001600160e01b03169063ffffffff61213816565b600980546001600160e01b03929092169290920201905563ffffffff8116611c3684611bf687612126565b600a80546001600160e01b0392909216929092020190555b600880546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611d84908263ffffffff611ae616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611db9908263ffffffff61215d16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6657600080fd5b505afa158015611e7a573d6000803e3d6000fd5b505050506040513d6020811015611e9057600080fd5b5051600b546001600160a01b038216158015945091925090611f74578015611f6f576000611ed3610ea76001600160701b0388811690881663ffffffff611a8316565b90506000611ee083611f88565b905080821115611f6c576000611f136008610a3f611f04868663ffffffff611ae616565b6000549063ffffffff611a8316565b90506000611f48611f2b84600863ffffffff611a8316565b611f3c86601163ffffffff611a8316565b9063ffffffff61215d16565b90506000818381611f5557fe5b0490508015611f6857611f688782611fda565b5050505b50505b611f80565b8015611f80576000600b555b505092915050565b60006003821115611fcb575080600160028204015b81811015611fc557809150600281828581611fb457fe5b040181611fbd57fe5b049050611f9d565b50611fd5565b8115611fd5575060015b919050565b600054611fed908263ffffffff61215d16565b60009081556001600160a01b038316815260016020526040902054612018908263ffffffff61215d16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081831061207f5781612081565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546120b1908263ffffffff611ae616565b6001600160a01b038316600090815260016020526040812091909155546120de908263ffffffff611ae616565b60009081556040805183815290516001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161215557fe5b049392505050565b80820182811015610b71576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e454450616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a7231582029fe1d0ebc95d3ed31d27ad6f104f359b5d27281289eae277c31338ea3d5b65564736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x5BB JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x52C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x45D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x409 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x355 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x35D PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x154E JUMP JUMPDEST PUSH2 0x339 PUSH2 0x155D JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x156C JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x176C JUMP JUMPDEST PUSH2 0x23A PUSH2 0x1789 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x60C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x61F JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21F5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x665 PUSH2 0xB36 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x68A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 AND SWAP1 DUP10 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x719 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x760 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP11 ISZERO PUSH2 0x771 JUMPI PUSH2 0x771 DUP3 DUP11 DUP14 PUSH2 0x18E9 JUMP JUMPDEST DUP10 ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 DUP2 DUP11 DUP13 PUSH2 0x18E9 JUMP JUMPDEST DUP7 ISZERO PUSH2 0x83D JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x838 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH1 0x0 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0x946 JUMPI PUSH1 0x0 PUSH2 0x955 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0x972 JUMPI PUSH1 0x0 PUSH2 0x981 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x992 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21AD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA01 PUSH2 0x9E3 DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0x9F5 DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA19 PUSH2 0x9E3 DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA4B PUSH4 0x5F5E100 PUSH2 0xA3F PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0xA5B DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST LT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xAA9 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x50616E63616B65204C5073 PUSH1 0xA8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D CALLER DUP5 DUP5 PUSH2 0x1CF9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xC11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBEC SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xC1C DUP5 DUP5 DUP5 PUSH2 0x1D5B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0xD2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0xD3E PUSH2 0xB36 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xE58 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE75 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE83 DUP8 DUP8 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xEC0 JUMPI PUSH2 0xEAC PUSH2 0x3E8 PUSH2 0x9F5 PUSH2 0xEA7 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST SWAP9 POP PUSH2 0xEBB PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0xF0C PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xEDD DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0xEE4 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xEFF DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0xF06 JUMPI INVALID JUMPDEST DIV PUSH2 0x2070 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2218 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF58 DUP11 DUP11 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0xF64 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1B36 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF94 JUMPI PUSH1 0x8 SLOAD PUSH2 0xF90 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x1057 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1067 PUSH2 0xB36 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x114F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1184 DUP9 DUP9 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x119B DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0x11A2 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x11B6 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST DUP2 PUSH2 0x11BD JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x11D0 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x120B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21CF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1215 ADDRESS DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x1220 DUP8 DUP14 DUP14 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x122B DUP7 DUP14 DUP13 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1285 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x129B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x1321 DUP6 DUP6 DUP12 DUP12 PUSH2 0x1B36 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1351 JUMPI PUSH1 0x8 SLOAD PUSH2 0x134D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x43616B652D4C5 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D CALLER DUP5 DUP5 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x142E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x14DD SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x14D8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1544 SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x14D8 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1705 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1756 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1761 DUP10 DUP10 DUP10 PUSH2 0x1CF9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x17D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x18E2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1837 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1996 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19F8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A2B JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1A2B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1A7C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1A9E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1A9B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xB71 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1B54 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1B99 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BC9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1C4E JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1C0B DUP6 PUSH2 0x1BF6 DUP7 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2138 AND JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1C36 DUP5 PUSH2 0x1BF6 DUP8 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D84 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1DB9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x1F74 JUMPI DUP1 ISZERO PUSH2 0x1F6F JUMPI PUSH1 0x0 PUSH2 0x1ED3 PUSH2 0xEA7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EE0 DUP4 PUSH2 0x1F88 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F6C JUMPI PUSH1 0x0 PUSH2 0x1F13 PUSH1 0x8 PUSH2 0xA3F PUSH2 0x1F04 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F48 PUSH2 0x1F2B DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST PUSH2 0x1F3C DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1A83 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x1F55 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x1F68 JUMPI PUSH2 0x1F68 DUP8 DUP3 PUSH2 0x1FDA JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x1F80 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F80 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1FCB JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FC5 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1FB4 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x1FBD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x1F9D JUMP JUMPDEST POP PUSH2 0x1FD5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1FD5 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1FED SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2018 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x215D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x207F JUMPI DUP2 PUSH2 0x2081 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20B1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x20DE SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1AE6 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2155 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0x29 INVALID SAR 0xE 0xBC SWAP6 0xD3 0xED BALANCE 0xD2 PUSH27 0xD6F104F359B5D27281289EAE277C31338EA3D5B65564736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "318:9486:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:9486:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7369:1856;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7369:1856:1;;;;;;;;-1:-1:-1;;;;;7369:1856:1;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7369:1856:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7369:1856:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;7369:1856:1;;-1:-1:-1;7369:1856:1;-1:-1:-1;7369:1856:1;:::i;:::-;;217:43:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;217:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:227:1;;;:::i;:::-;;;;-1:-1:-1;;;;;1304:227:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2304:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2304:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;614:21:1;;;:::i;:::-;;;;-1:-1:-1;;;;;614:21:1;;;;;;;;;;;;;;354:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;2602:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2602:331:0;;;;;;;;;;;;;;;;;:::i;648:108::-;;;:::i;313:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;507:31;;;:::i;2334:204:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2334:204:1;;;;;;;;;;:::i;958:32::-;;;:::i;996:::-;;;:::i;4492:1217::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4492:1217:1;-1:-1:-1;;;;;4492:1217:1;;:::i;386:44:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;386:44:0;-1:-1:-1;;;;;386:44:0;;:::i;1034:17:1:-;;;:::i;762:41:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;762:41:0;-1:-1:-1;;;;;762:41:0;;:::i;5818:1442:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5818:1442:1;-1:-1:-1;;;;;5818:1442:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;266:41:0;;;:::i;2457:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2457:139:0;;;;;;;;:::i;439:46:1:-;;;:::i;9271:329::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9271:329:1;-1:-1:-1;;;;;9271:329:1;;:::i;586:22::-;;;:::i;641:21::-;;;:::i;2939:726:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2939:726:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;436:64::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;436:64:0;;;;;;;;;;:::i;9646:156:1:-;;;:::i;7369:1856::-;1203:8;;1215:1;1203:13;1195:41;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;;;;1257:1;1246:8;:12;7482:14;;;;:32;;;7513:1;7500:10;:14;7482:32;7474:80;;;;-1:-1:-1;;;7474:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7565:17;7584;7606:13;:11;:13::i;:::-;7564:55;;;;;7665:9;-1:-1:-1;;;;;7652:22:1;:10;:22;:48;;;;;7691:9;-1:-1:-1;;;;;7678:22:1;:10;:22;7652:48;7644:92;;;;;-1:-1:-1;;;7644:92:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;7876:6;;7910;;7747:13;;;;-1:-1:-1;;;;;7876:6:1;;;;7910;;;;7934:13;;;;;;;:30;;;7957:7;-1:-1:-1;;;;;7951:13:1;:2;-1:-1:-1;;;;;7951:13:1;;;7934:30;7926:62;;;;;-1:-1:-1;;;7926:62:1;;;;;;;;;;;;-1:-1:-1;;;7926:62:1;;;;;;;;;;;;;;;8002:14;;7998:58;;8018:38;8032:7;8041:2;8045:10;8018:13;:38::i;:::-;8104:14;;8100:58;;8120:38;8134:7;8143:2;8147:10;8120:13;:38::i;:::-;8206:15;;8202:93;;8238:2;-1:-1:-1;;;;;8223:30:1;;8254:10;8266;8278;8290:4;;8223:72;;;;;;;;;;;;;-1:-1:-1;;;;;8223:72:1;-1:-1:-1;;;;;8223:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8223:72:1;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8223:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8223:72:1;;;;8202:93;8316:40;;;-1:-1:-1;;;8316:40:1;;8350:4;8316:40;;;;;;-1:-1:-1;;;;;8316:25:1;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8316:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8316:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8316:40:1;8377;;;-1:-1:-1;;;8377:40:1;;8411:4;8377:40;;;;;;8316;;-1:-1:-1;;;;;;8377:25:1;;;;;:40;;;;;8316;;8377;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8377:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8377:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8377:40:1;;-1:-1:-1;8437:14:1;;-1:-1:-1;;;;;;;8465:22:1;;;;;8454:33;;:75;;8528:1;8454:75;;;8514:10;8502:9;-1:-1:-1;;;;;8502:22:1;;8490:8;:35;8454:75;8437:92;;8539:14;8579:10;8567:9;-1:-1:-1;;;;;8567:22:1;;8556:8;:33;:75;;8630:1;8556:75;;;8616:10;8604:9;-1:-1:-1;;;;;8604:22:1;;8592:8;:35;8556:75;8539:92;;8661:1;8649:9;:13;:30;;;;8678:1;8666:9;:13;8649:30;8641:77;;;;-1:-1:-1;;;8641:77:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8802:21;8827:42;8851:17;:9;8865:2;8851:17;:13;:17;:::i;:::-;8827:19;:8;8840:5;8827:19;:12;:19;:::i;:::-;:23;:42;:23;:42;:::i;:::-;8802:68;-1:-1:-1;8880:21:1;8905:42;8929:17;:9;8943:2;8929:17;:13;:17;:::i;8905:42::-;8880:68;-1:-1:-1;9008:44:1;9043:8;9008:30;-1:-1:-1;;;;;9008:15:1;;;;:30;;;:19;:30;:::i;:::-;:34;:44;:34;:44;:::i;:::-;8966:38;:16;8987;8966:38;:20;:38;:::i;:::-;:86;;8958:109;;;;;-1:-1:-1;;;8958:109:1;;;;;;;;;;;;-1:-1:-1;;;8958:109:1;;;;;;;;;;;;;;;1268:1;;9088:49;9096:8;9106;9116:9;9127;9088:7;:49::i;:::-;9152:66;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9152:66:1;;;9157:10;;9152:66;;;;;;;;;-1:-1:-1;;1290:1:1;1279:8;:12;-1:-1:-1;;;;;;;;;7369:1856:1:o;217:43:0:-;;;;;;;;;;;;;;-1:-1:-1;;;217:43:0;;;;:::o;1304:227:1:-;1436:8;;-1:-1:-1;;;;;1436:8:1;;;;-1:-1:-1;;;1466:8:1;;;;;;-1:-1:-1;;;1506:18:1;;;;;1304:227::o;2304:147:0:-;2371:4;2387:36;2396:10;2408:7;2417:5;2387:8;:36::i;:::-;-1:-1:-1;2440:4:0;2304:147;;;;;:::o;614:21:1:-;;;-1:-1:-1;;;;;614:21:1;;:::o;354:26:0:-;;;;:::o;2602:331::-;-1:-1:-1;;;;;2733:15:0;;2713:4;2733:15;;;:9;:15;;;;;;;;2749:10;2733:27;;;;;;;;-1:-1:-1;;2733:42:0;2729:141;;-1:-1:-1;;;;;2821:15:0;;;;;;:9;:15;;;;;;;;2837:10;2821:27;;;;;;;;:38;;2853:5;2821:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;2791:15:0;;;;;;:9;:15;;;;;;;;2807:10;2791:27;;;;;;;:68;2729:141;2879:26;2889:4;2895:2;2899:5;2879:9;:26::i;:::-;-1:-1:-1;2922:4:0;2602:331;;;;;:::o;648:108::-;690:66;648:108;:::o;313:35::-;346:2;313:35;:::o;507:31::-;;;;:::o;2334:204:1:-;2429:7;;-1:-1:-1;;;;;2429:7:1;2415:10;:21;2407:52;;;;;-1:-1:-1;;;2407:52:1;;;;;;;;;;;;-1:-1:-1;;;2407:52:1;;;;;;;;;;;;;;;2489:6;:16;;-1:-1:-1;;;;;2489:16:1;;;-1:-1:-1;;;;;;2489:16:1;;;;;;;2515:6;:16;;;;;;;;;;;2334:204::o;958:32::-;;;;:::o;996:::-;;;;:::o;4492:1217::-;4541:14;1203:8;;1215:1;1203:13;1195:41;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;;;;1257:1;1246:8;:12;;;1257:1;4609:13;:11;:13::i;:::-;-1:-1:-1;4670:6:1;;4663:39;;;-1:-1:-1;;;4663:39:1;;4696:4;4663:39;;;;;;4567:55;;-1:-1:-1;4567:55:1;;-1:-1:-1;4647:13:1;;-1:-1:-1;;;;;4670:6:1;;;;4663:24;;:39;;;;;;;;;;;;;;4670:6;4663:39;;;5:2:-1;;;;30:1;27;20:12;5:2;4663:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4663:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4663:39:1;4735:6;;4728:39;;;-1:-1:-1;;;4728:39:1;;4761:4;4728:39;;;;;;4663;;-1:-1:-1;4712:13:1;;-1:-1:-1;;;;;4735:6:1;;;;4728:24;;:39;;;;;4663;;4728;;;;;;;;4735:6;4728:39;;;5:2:-1;;;;30:1;27;20:12;5:2;4728:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4728:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4728:39:1;;-1:-1:-1;4777:12:1;4792:23;:8;-1:-1:-1;;;;;4792:23:1;;;:12;:23;:::i;:::-;4777:38;-1:-1:-1;4825:12:1;4840:23;:8;-1:-1:-1;;;;;4840:23:1;;;:12;:23;:::i;:::-;4825:38;;4874:10;4887:30;4896:9;4907;4887:8;:30::i;:::-;4927:17;4947:11;4874:43;;-1:-1:-1;5050:17:1;5046:347;;5095:54;480:5;5095:31;5105:20;:7;5117;5105:20;:11;:20;:::i;:::-;5095:9;:31::i;:54::-;5083:66;;5162:36;5176:1;480:5;5162;:36::i;:::-;5046:347;;;5296:86;-1:-1:-1;;;;;5305:37:1;;:25;:7;5317:12;5305:25;:11;:25;:::i;:::-;:37;;;;;;-1:-1:-1;;;;;5344:37:1;;:25;:7;5356:12;5344:25;:11;:25;:::i;:::-;:37;;;;;;5296:8;:86::i;:::-;5284:98;;5046:347;5422:1;5410:9;:13;5402:64;;;;-1:-1:-1;;;5402:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5476:20;5482:2;5486:9;5476:5;:20::i;:::-;5507:49;5515:8;5525;5535:9;5546;5507:7;:49::i;:::-;5570:5;5566:47;;;5604:8;;5585:28;;-1:-1:-1;;;;;5590:8:1;;;;-1:-1:-1;;;5604:8:1;;;5585:28;:18;:28;:::i;:::-;5577:5;:36;5566:47;5668:34;;;;;;;;;;;;;;5673:10;;5668:34;;;;;;;;-1:-1:-1;;1290:1:1;1279:8;:12;-1:-1:-1;4492:1217:1;;;-1:-1:-1;;;;;;4492:1217:1:o;386:44:0:-;;;;;;;;;;;;;:::o;1034:17:1:-;;;;:::o;762:41:0:-;;;;;;;;;;;;;:::o;5818:1442:1:-;5867:12;5881;1203:8;;1215:1;1203:13;1195:41;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;;;;1257:1;1246:8;:12;;;1257:1;5947:13;:11;:13::i;:::-;-1:-1:-1;6003:6:1;;6083;;6161:40;;;-1:-1:-1;;;6161:40:1;;6195:4;6161:40;;;;;;5905:55;;-1:-1:-1;5905:55:1;;-1:-1:-1;;;;;;6003:6:1;;;;6083;;;5985:15;;6003:6;;6161:25;;:40;;;;;;;;;;;;;;6003:6;6161:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6161:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6161:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6161:40:1;6227;;;-1:-1:-1;;;6227:40:1;;6261:4;6227:40;;;;;;6161;;-1:-1:-1;6211:13:1;;-1:-1:-1;;;;;6227:25:1;;;;;:40;;;;;6161;;6227;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6227:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6227:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6227:40:1;6312:4;6277:14;6294:24;;;:9;6227:40;6294:24;;;;;6227:40;;-1:-1:-1;6342:30:1;6351:9;6362;6342:8;:30::i;:::-;6382:17;6402:11;6329:43;;-1:-1:-1;6402:11:1;6511:23;:9;6525:8;6511:23;:13;:23;:::i;:::-;:38;;;;;;;-1:-1:-1;6643:12:1;6617:23;:9;6631:8;6617:23;:13;:23;:::i;:::-;:38;;;;;;6607:48;;6731:1;6721:7;:11;:26;;;;;6746:1;6736:7;:11;6721:26;6713:77;;;;-1:-1:-1;;;6713:77:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6800:31;6814:4;6821:9;6800:5;:31::i;:::-;6841:35;6855:7;6864:2;6868:7;6841:13;:35::i;:::-;6886;6900:7;6909:2;6913:7;6886:13;:35::i;:::-;6942:40;;;-1:-1:-1;;;6942:40:1;;6976:4;6942:40;;;;;;-1:-1:-1;;;;;6942:25:1;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6942:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6942:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6942:40:1;7003;;;-1:-1:-1;;;7003:40:1;;7037:4;7003:40;;;;;;6942;;-1:-1:-1;;;;;;7003:25:1;;;;;:40;;;;;6942;;7003;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;7003:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7003:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7003:40:1;;-1:-1:-1;7054:49:1;7062:8;7003:40;7082:9;7093;7054:7;:49::i;:::-;7117:5;7113:47;;;7151:8;;7132:28;;-1:-1:-1;;;;;7137:8:1;;;;-1:-1:-1;;;7151:8:1;;;7132:28;:18;:28;:::i;:::-;7124:5;:36;7113:47;7215:38;;;;;;;;;;;;;;-1:-1:-1;;;;;7215:38:1;;;7220:10;;7215:38;;;;;;;;;;;1268:1;;;;;;;;;1290;1279:8;:12;;;;5818:1442;;;:::o;266:41:0:-;;;;;;;;;;;;;;-1:-1:-1;;;266:41:0;;;;:::o;2457:139::-;2520:4;2536:32;2546:10;2558:2;2562:5;2536:9;:32::i;439:46:1:-;480:5;439:46;:::o;9271:329::-;1203:8;;1215:1;1203:13;1195:41;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;;;;1257:1;1246:8;:12;9339:6;;9388;;9491:8;;9446:40;;;-1:-1:-1;;;9446:40:1;;9480:4;9446:40;;;;;;-1:-1:-1;;;;;9339:6:1;;;;9388;;;;9419:82;;9339:6;;9442:2;;9446:54;;-1:-1:-1;;;;;9491:8:1;;9339:6;;9446:25;;:40;;;;;;;;;;;;;;;9339:6;9446:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9446:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9446:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9446:40:1;;:54;:44;:54;:::i;:::-;9419:13;:82::i;:::-;9583:8;;9538:40;;;-1:-1:-1;;;9538:40:1;;9572:4;9538:40;;;;;;9511:82;;9525:7;;9534:2;;9538:54;;-1:-1:-1;;;9583:8:1;;-1:-1:-1;;;;;9583:8:1;;-1:-1:-1;;;;;9538:25:1;;;;;:40;;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;9511:82:1;-1:-1:-1;;1290:1:1;1279:8;:12;-1:-1:-1;9271:329:1:o;586:22::-;;;-1:-1:-1;;;;;586:22:1;;:::o;641:21::-;;;-1:-1:-1;;;;;641:21:1;;:::o;2939:726:0:-;3152:15;3140:8;:27;;3132:56;;;;;-1:-1:-1;;;3132:56:0;;;;;;;;;;;;-1:-1:-1;;;3132:56:0;;;;;;;;;;;;;;;3300:16;;-1:-1:-1;;;;;3395:13:0;;;3198:14;3395:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3344:77;;690:66;3344:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3344:77:0;;;;;3334:88;;;;;;-1:-1:-1;;;3238:198:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3238:198:0;;;;;;3215:231;;;;;;;;;3483:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3198:14;;3395:15;3483:26;;;;;-1:-1:-1;;3483:26:0;;;;;;;;;;3395:15;3483:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3483:26:0;;-1:-1:-1;;3483:26:0;;;-1:-1:-1;;;;;;;3527:30:0;;;;;;:59;;;3581:5;-1:-1:-1;;;;;3561:25:0;:16;-1:-1:-1;;;;;3561:25:0;;3527:59;3519:98;;;;;-1:-1:-1;;;3519:98:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3627:31;3636:5;3643:7;3652:5;3627:8;:31::i;:::-;2939:726;;;;;;;;;:::o;436:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;9646:156:1:-;1203:8;;1215:1;1203:13;1195:41;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;-1:-1:-1;;;1195:41:1;;;;;;;;;;;;;;;1257:1;1246:8;:12;9701:6;;9694:39;;;-1:-1:-1;;;9694:39:1;;9727:4;9694:39;;;;;;9686:109;;-1:-1:-1;;;;;9701:6:1;;9694:24;;:39;;;;;;;;;;;;;;9701:6;9694:39;;;5:2:-1;;;;30:1;27;20:12;5:2;9694:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9694:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9694:39:1;9742:6;;9735:39;;;-1:-1:-1;;;9735:39:1;;9768:4;9735:39;;;;;;-1:-1:-1;;;;;9742:6:1;;;;9735:24;;:39;;;;;9694;;9735;;;;;;;;9742:6;9735:39;;;5:2:-1;;;;30:1;27;20:12;5:2;9735:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9735:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9735:39:1;9776:8;;-1:-1:-1;;;;;9776:8:1;;;;-1:-1:-1;;;9786:8:1;;;9686:7;:109::i;:::-;1290:1;1279:8;:12;9646:156::o;1537:282::-;543:34;;;;;;;;;;;;;;;;;1664:43;;-1:-1:-1;;;;;1664:43:1;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1664:43:1;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1653:55:1;;;;1618:12;;1632:17;;1653:10;;;1664:43;1653:55;;;25:18:-1;1653:55:1;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1653:55:1;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1617:91:1;;;;1726:7;:57;;;;-1:-1:-1;1738:11:1;;:16;;:44;;;1769:4;1758:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1758:24:1;1738:44;1718:94;;;;;-1:-1:-1;;;1718:94:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:282;;;;;:::o;481:149:8:-;539:9;568:6;;;:30;;-1:-1:-1;;583:5:8;;;597:1;592;583:5;592:1;578:15;;;;;:20;568:30;560:63;;;;;-1:-1:-1;;;560:63:8;;;;;;;;;;;;-1:-1:-1;;;560:63:8;;;;;;;;;;;;;;339:136;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;;;2620:845:1;-1:-1:-1;;;;;2731:23:1;;;;;:50;;-1:-1:-1;;;;;;2758:23:1;;;2731:50;2723:80;;;;;-1:-1:-1;;;2723:80:1;;;;;;;;;;;;-1:-1:-1;;;2723:80:1;;;;;;;;;;;;;;;2916:18;;2844:23;:15;:23;;;-1:-1:-1;;;2916:18:1;;;;2899:35;;;2971:15;;;;;;:33;;-1:-1:-1;;;;;;2990:14:1;;;;2971:33;:51;;;;-1:-1:-1;;;;;;3008:14:1;;;;2971:51;2967:332;;;3175:11;3122:64;;3127:44;3161:9;3127:27;3144:9;3127:16;:27::i;:::-;-1:-1:-1;;;;;3127:33:1;;:44;:33;:44;:::i;:::-;3098:20;:88;;-1:-1:-1;;;;;3122:50:1;;;;:64;;;;3098:88;;;3224:64;;;3229:44;3263:9;3229:27;3246:9;3229:16;:27::i;:44::-;3200:20;:88;;-1:-1:-1;;;;;3224:50:1;;;;:64;;;;3200:88;;;2967:332;3308:8;:28;;-1:-1:-1;;3308:28:1;-1:-1:-1;;;;;3308:28:1;;;;;;;-1:-1:-1;;;;3346:28:1;-1:-1:-1;;;3346:28:1;;;;;;;;;-1:-1:-1;;;;;3384:35:1;-1:-1:-1;;;3384:35:1;;;;;;;;;3434:24;;;3439:8;;;3434:24;;3449:8;;;;;;;3434:24;;;;;;;;;;;;;;;;;2620:845;;;;;;:::o;1844:199:0:-;-1:-1:-1;;;;;1957:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2005:31;;;;;;;;;;;;;;;;;1844:199;;;:::o;2049:249::-;-1:-1:-1;;;;;2175:15:0;;;;;;:9;:15;;;;;;:26;;2195:5;2175:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2157:15:0;;;;;;;:9;:15;;;;;;:44;;;;2227:13;;;;;;;:24;;2245:5;2227:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2211:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2266:25;;;;;;;2211:13;;2266:25;;;;;;;;;;;;;2049:249;;;:::o;3551:832:1:-;3624:10;3646:13;3678:7;;;;;;;;;-1:-1:-1;;;;;3678:7:1;-1:-1:-1;;;;;3662:30:1;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3662:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3662:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3662:32:1;3755:5;;-1:-1:-1;;;;;3712:19:1;;;;;;-1:-1:-1;3662:32:1;;-1:-1:-1;3755:5:1;3785:592;;3814:11;;3810:500;;3845:10;3858:41;3868:30;-1:-1:-1;;;;;3868:15:1;;;;:30;;;:19;:30;:::i;3858:41::-;3845:54;;3917:14;3934:17;3944:6;3934:9;:17::i;:::-;3917:34;;3981:9;3973:5;:17;3969:327;;;4014:14;4031:44;4073:1;4031:37;4047:20;:5;4057:9;4047:20;:9;:20;:::i;:::-;4031:11;;;:37;:15;:37;:::i;:44::-;4014:61;-1:-1:-1;4097:16:1;4116:35;4134:16;:9;4148:1;4134:16;:13;:16;:::i;:::-;4116:13;:5;4126:2;4116:13;:9;:13;:::i;:::-;:17;:35;:17;:35;:::i;:::-;4097:54;;4173:14;4202:11;4190:9;:23;;;;;;;-1:-1:-1;4239:13:1;;4235:42;;4254:23;4260:5;4267:9;4254:5;:23::i;:::-;3969:327;;;;3810:500;;;3785:592;;;4330:11;;4326:51;;4365:1;4357:5;:9;4326:51;3551:832;;;;;;:::o;352:301:7:-;400:9;429:1;425;:5;421:226;;;-1:-1:-1;450:1:7;485;481;477:5;;:9;500:89;511:1;507;:5;500:89;;;536:1;532:5;;573:1;568;564;560;:5;;;;;;:9;559:15;;;;;;555:19;;500:89;;;421:226;;;;609:6;;605:42;;-1:-1:-1;635:1:7;605:42;352:301;;;:::o;1424:200:0:-;1499:11;;:22;;1515:5;1499:22;:15;:22;:::i;:::-;1485:11;:36;;;-1:-1:-1;;;;;1547:13:0;;;;:9;:13;;;;;;:24;;1565:5;1547:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1531:13:0;;;;;;:9;:13;;;;;;;;:40;;;;1586:31;;;;;;;1531:13;;;;1586:31;;;;;;;;;;1424:200;;:::o;134:103:7:-;192:9;221:1;217;:5;:13;;229:1;217:13;;;225:1;217:13;213:17;134:103;-1:-1:-1;;;134:103:7:o;1630:208:0:-;-1:-1:-1;;;;;1711:15:0;;;;;;:9;:15;;;;;;:26;;1731:5;1711:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;1693:15:0;;;;;;:9;:15;;;;;:44;;;;1761:11;:22;;1777:5;1761:22;:15;:22;:::i;:::-;1747:11;:36;;;1798:33;;;;;;;;-1:-1:-1;;;;;1798:33:0;;;;;;;;;;;;;1630:208;;:::o;319:118:9:-;-1:-1:-1;;;;;394:10:9;-1:-1:-1;;;394:17:9;;319:118::o;505:106::-;565:9;-1:-1:-1;;;;;594:10:9;;-1:-1:-1;;;;;590:14:9;;594:10;590:14;;;;;;505:106;-1:-1:-1;;;505:106:9:o;198:135:8:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1763600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1043",
								"MINIMUM_LIQUIDITY()": "243",
								"PERMIT_TYPEHASH()": "266",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22410",
								"balanceOf(address)": "1192",
								"burn(address)": "infinite",
								"decimals()": "297",
								"factory()": "1126",
								"getReserves()": "1217",
								"initialize(address,address)": "42828",
								"kLast()": "1088",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1169",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1087",
								"price1CumulativeLast()": "1109",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"token0()": "1149",
								"token1()": "1081",
								"totalSupply()": "1132",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 318,
									"end": 9804,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "MSTORE"
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1138,
									"end": 1163,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1138,
									"end": 1163,
									"name": "SSTORE"
								},
								{
									"begin": 2214,
									"end": 2272,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "MLOAD"
								},
								{
									"begin": 1061,
									"end": 1068,
									"name": "CHAINID"
								},
								{
									"begin": 1061,
									"end": 1068,
									"name": "SWAP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "CODECOPY"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "MLOAD"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "SWAP2"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "SWAP1"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "SUB"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "ADD"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1252,
									"name": "KECCAK256"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP3"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP3"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "ADD"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP3"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "MSTORE"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP4"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "50616E63616B65204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "SWAP4"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "DUP5"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "ADD"
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "MSTORE"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP2"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MLOAD"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP1"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP4"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "ADD"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP4"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MSTORE"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP2"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "SWAP1"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "DUP5"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "ADD"
								},
								{
									"begin": 1320,
									"end": 1330,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MLOAD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1270,
									"end": 1292,
									"name": "PUSH",
									"value": "E87CB5A4DC26CF9451529A20899FCEE996799AFD48D7C0DB7C25E150B364661D"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP4"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1310,
									"end": 1331,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP3"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1382,
									"end": 1386,
									"name": "ADDRESS"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP7"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP5"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "ADD"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1401,
									"name": "MSTORE"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "DUP3"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "MLOAD"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP3"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "ADD"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP2"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP1"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "SWAP2"
								},
								{
									"begin": 1106,
									"end": 1411,
									"name": "KECCAK256"
								},
								{
									"begin": 1087,
									"end": 1103,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1087,
									"end": 1411,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2245,
									"end": 2252,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2245,
									"end": 2265,
									"name": "DUP1"
								},
								{
									"begin": 2245,
									"end": 2265,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2245,
									"end": 2265,
									"name": "AND"
								},
								{
									"begin": 2255,
									"end": 2265,
									"name": "CALLER"
								},
								{
									"begin": 2245,
									"end": 2265,
									"name": "OR"
								},
								{
									"begin": 2245,
									"end": 2265,
									"name": "SWAP1"
								},
								{
									"begin": 2245,
									"end": 2265,
									"name": "SSTORE"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "DUP1"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "CODECOPY"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 318,
									"end": 9804,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582029fe1d0ebc95d3ed31d27ad6f104f359b5d27281289eae277c31338ea3d5b65564736f6c63430005100032",
									".code": [
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "MSTORE"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "LT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "SHR"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "485CC955"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9804,
											"name": "REVERT"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "JUMPDEST"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP1"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP2"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP2"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP2"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP4"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "AND"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP2"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP1"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP2"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP1"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP2"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP3"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP3"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "DUP1"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP1"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "ADD"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP1"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "JUMPDEST"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "STOP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP6"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "RETURN"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "JUMPDEST"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "JUMPDEST"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP5"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP6"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP3"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP4"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP4"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP4"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "MLOAD"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SUB"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "RETURN"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "AND"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ADD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "MLOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ISZERO"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ISZERO"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP3"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "MSTORE"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "MLOAD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "DUP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SUB"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "ADD"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "RETURN"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SWAP3"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "ADD"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "RETURN"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "MLOAD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP2"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP3"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "MSTORE"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "MLOAD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP2"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SUB"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "ADD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "RETURN"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMPDEST"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP2"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMPDEST"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "MLOAD"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP3"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "AND"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP3"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "MSTORE"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "MLOAD"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SUB"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "ADD"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "RETURN"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMPDEST"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "JUMPDEST"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "SWAP2"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "JUMPDEST"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "JUMPDEST"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "DUP1"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "AND"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "AND"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "JUMPDEST"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "DUP1"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "AND"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "JUMPDEST"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "DUP1"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "AND"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "JUMPDEST"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "DUP1"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "MLOAD"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP3"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "DUP4"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "MSTORE"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "DUP4"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "ADD"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP2"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP2"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "MSTORE"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "DUP1"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "MLOAD"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP2"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "DUP3"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SUB"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "ADD"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "RETURN"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "JUMPDEST"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "ADD"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "JUMPDEST"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "DUP1"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "AND"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMPDEST"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "AND"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "AND"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP3"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "AND"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "DUP2"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "SWAP1"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "ADD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "JUMPDEST"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1216,
											"name": "EQ"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "REVERT"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SSTORE"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "DUP5"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "ISZERO"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "ISZERO"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "DUP1"
										},
										{
											"begin": 7482,
											"end": 7514,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 7482,
											"end": 7514,
											"name": "JUMPI"
										},
										{
											"begin": 7482,
											"end": 7514,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "DUP5"
										},
										{
											"begin": 7500,
											"end": 7514,
											"name": "GT"
										},
										{
											"begin": 7482,
											"end": 7514,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 7482,
											"end": 7514,
											"name": "JUMPDEST"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "JUMPI"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP2"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "MSTORE"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "ADD"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "ADD"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP3"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP2"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "SUB"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP3"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "MSTORE"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP2"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "MSTORE"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "ADD"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH data",
											"value": "C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "CODECOPY"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "ADD"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "POP"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "POP"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "MLOAD"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "SUB"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "SWAP1"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "REVERT"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 7474,
											"end": 7554,
											"name": "JUMPDEST"
										},
										{
											"begin": 7565,
											"end": 7582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7584,
											"end": 7601,
											"name": "DUP1"
										},
										{
											"begin": 7606,
											"end": 7619,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 7606,
											"end": 7617,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 7606,
											"end": 7619,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7606,
											"end": 7619,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 7606,
											"end": 7619,
											"name": "JUMPDEST"
										},
										{
											"begin": 7564,
											"end": 7619,
											"name": "POP"
										},
										{
											"begin": 7564,
											"end": 7619,
											"name": "SWAP2"
										},
										{
											"begin": 7564,
											"end": 7619,
											"name": "POP"
										},
										{
											"begin": 7564,
											"end": 7619,
											"name": "SWAP2"
										},
										{
											"begin": 7564,
											"end": 7619,
											"name": "POP"
										},
										{
											"begin": 7665,
											"end": 7674,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "AND"
										},
										{
											"begin": 7652,
											"end": 7662,
											"name": "DUP8"
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "LT"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "DUP1"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "ISZERO"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "JUMPI"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "POP"
										},
										{
											"begin": 7691,
											"end": 7700,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7678,
											"end": 7700,
											"name": "AND"
										},
										{
											"begin": 7678,
											"end": 7688,
											"name": "DUP7"
										},
										{
											"begin": 7678,
											"end": 7700,
											"name": "LT"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 7652,
											"end": 7700,
											"name": "JUMPDEST"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "JUMPI"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "DUP1"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "DUP2"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "MSTORE"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "DUP3"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "ADD"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "MSTORE"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "DUP3"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "ADD"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "MSTORE"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "50616E63616B653A20494E53554646494349454E545F4C495155494449545900"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "DUP3"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "ADD"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "MSTORE"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "SWAP1"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "MLOAD"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "SWAP1"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "DUP2"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "SWAP1"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "SUB"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "ADD"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "SWAP1"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "REVERT"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7644,
											"end": 7736,
											"name": "JUMPDEST"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "SLOAD"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": 7747,
											"end": 7760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7760,
											"name": "SWAP2"
										},
										{
											"begin": 7747,
											"end": 7760,
											"name": "DUP3"
										},
										{
											"begin": 7747,
											"end": 7760,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "SWAP2"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "DUP3"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "AND"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "DUP10"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "AND"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "DUP3"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "EQ"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "DUP1"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "ISZERO"
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "SWAP1"
										},
										{
											"begin": 7934,
											"end": 7964,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 7934,
											"end": 7964,
											"name": "JUMPI"
										},
										{
											"begin": 7934,
											"end": 7964,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 7964,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7951,
											"end": 7964,
											"name": "AND"
										},
										{
											"begin": 7951,
											"end": 7953,
											"name": "DUP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7951,
											"end": 7964,
											"name": "AND"
										},
										{
											"begin": 7951,
											"end": 7964,
											"name": "EQ"
										},
										{
											"begin": 7951,
											"end": 7964,
											"name": "ISZERO"
										},
										{
											"begin": 7934,
											"end": 7964,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 7934,
											"end": 7964,
											"name": "JUMPDEST"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "JUMPI"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "DUP1"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "DUP2"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MSTORE"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "DUP3"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "ADD"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MSTORE"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "DUP3"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "ADD"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F544F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "DUP3"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "ADD"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MSTORE"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MLOAD"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "DUP2"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "SUB"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "ADD"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "REVERT"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "JUMPDEST"
										},
										{
											"begin": 8002,
											"end": 8016,
											"name": "DUP11"
										},
										{
											"begin": 8002,
											"end": 8016,
											"name": "ISZERO"
										},
										{
											"begin": 7998,
											"end": 8056,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 7998,
											"end": 8056,
											"name": "JUMPI"
										},
										{
											"begin": 8018,
											"end": 8056,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8032,
											"end": 8039,
											"name": "DUP3"
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "DUP11"
										},
										{
											"begin": 8045,
											"end": 8055,
											"name": "DUP14"
										},
										{
											"begin": 8018,
											"end": 8031,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8018,
											"end": 8056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8018,
											"end": 8056,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 8018,
											"end": 8056,
											"name": "JUMPDEST"
										},
										{
											"begin": 8104,
											"end": 8118,
											"name": "DUP10"
										},
										{
											"begin": 8104,
											"end": 8118,
											"name": "ISZERO"
										},
										{
											"begin": 8100,
											"end": 8158,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8100,
											"end": 8158,
											"name": "JUMPI"
										},
										{
											"begin": 8120,
											"end": 8158,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "DUP2"
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "DUP11"
										},
										{
											"begin": 8147,
											"end": 8157,
											"name": "DUP13"
										},
										{
											"begin": 8120,
											"end": 8133,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8120,
											"end": 8158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8120,
											"end": 8158,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8120,
											"end": 8158,
											"name": "JUMPDEST"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "DUP7"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "ISZERO"
										},
										{
											"begin": 8202,
											"end": 8295,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8202,
											"end": 8295,
											"name": "JUMPI"
										},
										{
											"begin": 8238,
											"end": 8240,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8223,
											"end": 8253,
											"name": "AND"
										},
										{
											"begin": 8223,
											"end": 8253,
											"name": "PUSH",
											"value": "84800812"
										},
										{
											"begin": 8254,
											"end": 8264,
											"name": "CALLER"
										},
										{
											"begin": 8266,
											"end": 8276,
											"name": "DUP14"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "DUP14"
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP13"
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP13"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MLOAD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP7"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "AND"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "SHL"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP1"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "AND"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP6"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP5"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP1"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP3"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "SUB"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP3"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP5"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP5"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP3"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "SWAP3"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "SWAP7"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "MLOAD"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP1"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP4"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "SUB"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP8"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "DUP1"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "GAS"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "CALL"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8223,
											"end": 8295,
											"name": "POP"
										},
										{
											"begin": 8202,
											"end": 8295,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8202,
											"end": 8295,
											"name": "JUMPDEST"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP2"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "MSTORE"
										},
										{
											"begin": 8350,
											"end": 8354,
											"name": "ADDRESS"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP3"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "MSTORE"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "DUP5"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "AND"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "SWAP2"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "SWAP2"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP4"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP3"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SUB"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP2"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "DUP7"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "GAS"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "STATICCALL"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "MLOAD"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "MLOAD"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP2"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "MSTORE"
										},
										{
											"begin": 8411,
											"end": 8415,
											"name": "ADDRESS"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP3"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "ADD"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "MSTORE"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "MLOAD"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "DUP4"
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "AND"
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "SWAP2"
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "SWAP2"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP3"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "ADD"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP3"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8316,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP2"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP3"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SUB"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "ADD"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP2"
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "DUP7"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "DUP1"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "POP"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "GAS"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "STATICCALL"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "POP"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "POP"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "POP"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "POP"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "MLOAD"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "MLOAD"
										},
										{
											"begin": 8377,
											"end": 8417,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "DUP6"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "AND"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "DUP11"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SUB"
										},
										{
											"begin": 8454,
											"end": 8487,
											"name": "DUP4"
										},
										{
											"begin": 8454,
											"end": 8487,
											"name": "GT"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "JUMPI"
										},
										{
											"begin": 8528,
											"end": 8529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "JUMP"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "JUMPDEST"
										},
										{
											"begin": 8514,
											"end": 8524,
											"name": "DUP10"
										},
										{
											"begin": 8502,
											"end": 8511,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8502,
											"end": 8524,
											"name": "AND"
										},
										{
											"begin": 8502,
											"end": 8524,
											"name": "SUB"
										},
										{
											"begin": 8490,
											"end": 8498,
											"name": "DUP4"
										},
										{
											"begin": 8490,
											"end": 8525,
											"name": "SUB"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8454,
											"end": 8529,
											"name": "JUMPDEST"
										},
										{
											"begin": 8437,
											"end": 8529,
											"name": "SWAP1"
										},
										{
											"begin": 8437,
											"end": 8529,
											"name": "POP"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8589,
											"name": "DUP10"
										},
										{
											"begin": 8567,
											"end": 8576,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8567,
											"end": 8589,
											"name": "AND"
										},
										{
											"begin": 8567,
											"end": 8589,
											"name": "SUB"
										},
										{
											"begin": 8556,
											"end": 8564,
											"name": "DUP4"
										},
										{
											"begin": 8556,
											"end": 8589,
											"name": "GT"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "JUMPI"
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "JUMP"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "JUMPDEST"
										},
										{
											"begin": 8616,
											"end": 8626,
											"name": "DUP10"
										},
										{
											"begin": 8604,
											"end": 8613,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "AND"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "SUB"
										},
										{
											"begin": 8592,
											"end": 8600,
											"name": "DUP4"
										},
										{
											"begin": 8592,
											"end": 8627,
											"name": "SUB"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8556,
											"end": 8631,
											"name": "JUMPDEST"
										},
										{
											"begin": 8539,
											"end": 8631,
											"name": "SWAP1"
										},
										{
											"begin": 8539,
											"end": 8631,
											"name": "POP"
										},
										{
											"begin": 8661,
											"end": 8662,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP3"
										},
										{
											"begin": 8649,
											"end": 8662,
											"name": "GT"
										},
										{
											"begin": 8649,
											"end": 8679,
											"name": "DUP1"
										},
										{
											"begin": 8649,
											"end": 8679,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8649,
											"end": 8679,
											"name": "JUMPI"
										},
										{
											"begin": 8649,
											"end": 8679,
											"name": "POP"
										},
										{
											"begin": 8678,
											"end": 8679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8675,
											"name": "DUP2"
										},
										{
											"begin": 8666,
											"end": 8679,
											"name": "GT"
										},
										{
											"begin": 8649,
											"end": 8679,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8649,
											"end": 8679,
											"name": "JUMPDEST"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "JUMPI"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "MSTORE"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP3"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "SUB"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP3"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "MSTORE"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "MSTORE"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH data",
											"value": "50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "SWAP2"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "CODECOPY"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "ADD"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "SWAP2"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "POP"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "MLOAD"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "DUP1"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "SWAP2"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "SUB"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "SWAP1"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "REVERT"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 8641,
											"end": 8718,
											"name": "JUMPDEST"
										},
										{
											"begin": 8802,
											"end": 8823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP5"
										},
										{
											"begin": 8865,
											"end": 8867,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8851,
											"end": 8864,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "JUMPDEST"
										},
										{
											"begin": 8827,
											"end": 8846,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 8827,
											"end": 8835,
											"name": "DUP8"
										},
										{
											"begin": 8840,
											"end": 8845,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 8827,
											"end": 8846,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8827,
											"end": 8839,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8827,
											"end": 8846,
											"name": "AND"
										},
										{
											"begin": 8827,
											"end": 8846,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8827,
											"end": 8846,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 8827,
											"end": 8846,
											"name": "JUMPDEST"
										},
										{
											"begin": 8827,
											"end": 8850,
											"name": "SWAP1"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8827,
											"end": 8850,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "AND"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8827,
											"end": 8869,
											"name": "JUMPDEST"
										},
										{
											"begin": 8802,
											"end": 8870,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8880,
											"end": 8901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8947,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 8929,
											"end": 8946,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP5"
										},
										{
											"begin": 8943,
											"end": 8945,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 8929,
											"end": 8946,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8929,
											"end": 8942,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8929,
											"end": 8946,
											"name": "AND"
										},
										{
											"begin": 8929,
											"end": 8946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8905,
											"end": 8947,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 8905,
											"end": 8947,
											"name": "JUMPDEST"
										},
										{
											"begin": 8880,
											"end": 8948,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9008,
											"end": 9052,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 9043,
											"end": 9051,
											"name": "PUSH",
											"value": "5F5E100"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9008,
											"end": 9023,
											"name": "DUP12"
										},
										{
											"begin": 9008,
											"end": 9023,
											"name": "DUP2"
										},
										{
											"begin": 9008,
											"end": 9023,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9023,
											"name": "SWAP1"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "DUP12"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9027,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "JUMPDEST"
										},
										{
											"begin": 9008,
											"end": 9042,
											"name": "SWAP1"
										},
										{
											"begin": 9008,
											"end": 9052,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9042,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9008,
											"end": 9052,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9052,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9008,
											"end": 9052,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 9008,
											"end": 9052,
											"name": "JUMPDEST"
										},
										{
											"begin": 8966,
											"end": 9004,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 8966,
											"end": 8982,
											"name": "DUP4"
										},
										{
											"begin": 8987,
											"end": 9003,
											"name": "DUP4"
										},
										{
											"begin": 8966,
											"end": 9004,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8966,
											"end": 8986,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8966,
											"end": 9004,
											"name": "AND"
										},
										{
											"begin": 8966,
											"end": 9004,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8966,
											"end": 9004,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 8966,
											"end": 9004,
											"name": "JUMPDEST"
										},
										{
											"begin": 8966,
											"end": 9052,
											"name": "LT"
										},
										{
											"begin": 8966,
											"end": 9052,
											"name": "ISZERO"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "JUMPI"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "DUP1"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "DUP2"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "MSTORE"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "DUP3"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "ADD"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "MSTORE"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "DUP3"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "ADD"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "DUP3"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "ADD"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "MSTORE"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "SWAP1"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "MLOAD"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "SWAP1"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "DUP2"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "SWAP1"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "SUB"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "ADD"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "SWAP1"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "REVERT"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 8958,
											"end": 9067,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9137,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 9096,
											"end": 9104,
											"name": "DUP5"
										},
										{
											"begin": 9106,
											"end": 9114,
											"name": "DUP5"
										},
										{
											"begin": 9116,
											"end": 9125,
											"name": "DUP9"
										},
										{
											"begin": 9127,
											"end": 9136,
											"name": "DUP9"
										},
										{
											"begin": 9088,
											"end": 9095,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9088,
											"end": 9137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9088,
											"end": 9137,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 9088,
											"end": 9137,
											"name": "JUMPDEST"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP14"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP13"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP12"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "AND"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 9157,
											"end": 9167,
											"name": "CALLER"
										},
										{
											"begin": 9157,
											"end": 9167,
											"name": "SWAP2"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SUB"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9218,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7369,
											"end": 9225,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B65204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "JUMPDEST"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "DUP3"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "DUP4"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "DIV"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "SWAP1"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "SWAP2"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "AND"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "SWAP1"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "DIV"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "AND"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1531,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2371,
											"end": 2375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2396,
											"end": 2406,
											"name": "CALLER"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP5"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP5"
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2387,
											"end": 2423,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP3"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "SWAP2"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "POP"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "POP"
										},
										{
											"begin": 2304,
											"end": 2451,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SLOAD"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "DUP2"
										},
										{
											"begin": 354,
											"end": 380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "AND"
										},
										{
											"begin": 2713,
											"end": 2717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "KECCAK256"
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "CALLER"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SWAP2"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "KECCAK256"
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2733,
											"end": 2775,
											"name": "EQ"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP5"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "AND"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP2"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP2"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP1"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP4"
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "KECCAK256"
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "CALLER"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "DUP5"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SWAP2"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "MSTORE"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SWAP1"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "KECCAK256"
										},
										{
											"begin": 2821,
											"end": 2848,
											"name": "SLOAD"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "SWAP1"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "DUP4"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2852,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "AND"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 2821,
											"end": 2859,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP6"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "AND"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP2"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP2"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP1"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "DUP4"
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "KECCAK256"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "CALLER"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "DUP5"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP2"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "MSTORE"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP1"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "KECCAK256"
										},
										{
											"begin": 2791,
											"end": 2859,
											"name": "SSTORE"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 2729,
											"end": 2870,
											"name": "JUMPDEST"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2889,
											"end": 2893,
											"name": "DUP5"
										},
										{
											"begin": 2895,
											"end": 2897,
											"name": "DUP5"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP5"
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP4"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "SWAP3"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2602,
											"end": 2933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMPDEST"
										},
										{
											"begin": 690,
											"end": 756,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "DUP2"
										},
										{
											"begin": 648,
											"end": 756,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMPDEST"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "SLOAD"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "JUMPDEST"
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "CALLER"
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "EQ"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "JUMPI"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2830B731B0B5B29D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "REVERT"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2407,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "SWAP4"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "DUP5"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "SWAP2"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "DUP3"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "AND"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "OR"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "SWAP1"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "SWAP2"
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "SSTORE"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SLOAD"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SWAP3"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SWAP1"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SWAP4"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "AND"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SWAP2"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "AND"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "OR"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SWAP1"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SSTORE"
										},
										{
											"begin": 2334,
											"end": 2538,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "JUMPDEST"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "SLOAD"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "DUP2"
										},
										{
											"begin": 958,
											"end": 990,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "SLOAD"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "DUP2"
										},
										{
											"begin": 996,
											"end": 1028,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "JUMPDEST"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1216,
											"name": "EQ"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "REVERT"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SSTORE"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "DUP1"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4609,
											"end": 4620,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "SLOAD"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP1"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP2"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "MSTORE"
										},
										{
											"begin": 4696,
											"end": 4700,
											"name": "ADDRESS"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP3"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "ADD"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "MSTORE"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP1"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "MLOAD"
										},
										{
											"begin": 4567,
											"end": 4622,
											"name": "SWAP4"
										},
										{
											"begin": 4567,
											"end": 4622,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4567,
											"end": 4622,
											"name": "SWAP2"
										},
										{
											"begin": 4567,
											"end": 4622,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4647,
											"end": 4660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4660,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "SWAP1"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "SWAP2"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "AND"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "SWAP2"
										},
										{
											"begin": 4663,
											"end": 4687,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4663,
											"end": 4687,
											"name": "SWAP2"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP1"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP4"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "ADD"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP3"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP3"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP2"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP1"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP3"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP1"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SUB"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "ADD"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP2"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "DUP7"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "DUP1"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "GAS"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "STATICCALL"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "MLOAD"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "MLOAD"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "SLOAD"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP2"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "MSTORE"
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "ADDRESS"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP3"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "MSTORE"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "MLOAD"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP3"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4712,
											"end": 4725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4725,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "SWAP1"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "SWAP3"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "AND"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "SWAP2"
										},
										{
											"begin": 4728,
											"end": 4752,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4728,
											"end": 4752,
											"name": "SWAP2"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP3"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP3"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP3"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP2"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP3"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SUB"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP2"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP7"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "GAS"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "STATICCALL"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "MLOAD"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "MLOAD"
										},
										{
											"begin": 4728,
											"end": 4767,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 4792,
											"end": 4800,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "DUP8"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 4792,
											"end": 4815,
											"name": "JUMPDEST"
										},
										{
											"begin": 4777,
											"end": 4815,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4825,
											"end": 4837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 4840,
											"end": 4848,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "DUP8"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "AND"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4840,
											"end": 4852,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "AND"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "JUMPDEST"
										},
										{
											"begin": 4825,
											"end": 4863,
											"name": "SWAP1"
										},
										{
											"begin": 4825,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4874,
											"end": 4884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4917,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 4896,
											"end": 4905,
											"name": "DUP8"
										},
										{
											"begin": 4907,
											"end": 4916,
											"name": "DUP8"
										},
										{
											"begin": 4887,
											"end": 4895,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 4887,
											"end": 4917,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4887,
											"end": 4917,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 4887,
											"end": 4917,
											"name": "JUMPDEST"
										},
										{
											"begin": 4927,
											"end": 4944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4958,
											"name": "SLOAD"
										},
										{
											"begin": 4874,
											"end": 4917,
											"name": "SWAP1"
										},
										{
											"begin": 4874,
											"end": 4917,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "DUP1"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "JUMPI"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 480,
											"end": 485,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5095,
											"end": 5126,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 5105,
											"end": 5125,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "DUP8"
										},
										{
											"begin": 5117,
											"end": 5124,
											"name": "DUP8"
										},
										{
											"begin": 5105,
											"end": 5125,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5105,
											"end": 5116,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5105,
											"end": 5125,
											"name": "AND"
										},
										{
											"begin": 5105,
											"end": 5125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5105,
											"end": 5125,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5105,
											"end": 5125,
											"name": "JUMPDEST"
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5095,
											"end": 5126,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "JUMPDEST"
										},
										{
											"begin": 5083,
											"end": 5149,
											"name": "SWAP9"
										},
										{
											"begin": 5083,
											"end": 5149,
											"name": "POP"
										},
										{
											"begin": 5162,
											"end": 5198,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 480,
											"end": 485,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5162,
											"end": 5198,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5162,
											"end": 5198,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 5162,
											"end": 5198,
											"name": "JUMPDEST"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "JUMP"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "JUMPDEST"
										},
										{
											"begin": 5296,
											"end": 5382,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "DUP10"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "AND"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 5305,
											"end": 5312,
											"name": "DUP7"
										},
										{
											"begin": 5317,
											"end": 5329,
											"name": "DUP5"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5305,
											"end": 5316,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "AND"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "JUMPDEST"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "DUP2"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "JUMPI"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "INVALID"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "JUMPDEST"
										},
										{
											"begin": 5305,
											"end": 5342,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "DUP10"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "AND"
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5344,
											"end": 5351,
											"name": "DUP7"
										},
										{
											"begin": 5356,
											"end": 5368,
											"name": "DUP6"
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5355,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "AND"
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "JUMPDEST"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "DUP2"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "JUMPI"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "INVALID"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "JUMPDEST"
										},
										{
											"begin": 5344,
											"end": 5381,
											"name": "DIV"
										},
										{
											"begin": 5296,
											"end": 5304,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 5296,
											"end": 5382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5296,
											"end": 5382,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5296,
											"end": 5382,
											"name": "JUMPDEST"
										},
										{
											"begin": 5284,
											"end": 5382,
											"name": "SWAP9"
										},
										{
											"begin": 5284,
											"end": 5382,
											"name": "POP"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 5046,
											"end": 5393,
											"name": "JUMPDEST"
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP10"
										},
										{
											"begin": 5410,
											"end": 5423,
											"name": "GT"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "JUMPI"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP2"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "MSTORE"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "ADD"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP1"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP1"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "ADD"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP3"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP2"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "SUB"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP3"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "MSTORE"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP2"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "MSTORE"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "ADD"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP1"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH data",
											"value": "EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "SWAP2"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "CODECOPY"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "ADD"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "SWAP2"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "POP"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "POP"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "MLOAD"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "DUP1"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "SWAP2"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "SUB"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "SWAP1"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "REVERT"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 5402,
											"end": 5466,
											"name": "JUMPDEST"
										},
										{
											"begin": 5476,
											"end": 5496,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 5482,
											"end": 5484,
											"name": "DUP11"
										},
										{
											"begin": 5486,
											"end": 5495,
											"name": "DUP11"
										},
										{
											"begin": 5476,
											"end": 5481,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5476,
											"end": 5496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5496,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 5476,
											"end": 5496,
											"name": "JUMPDEST"
										},
										{
											"begin": 5507,
											"end": 5556,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "DUP7"
										},
										{
											"begin": 5525,
											"end": 5533,
											"name": "DUP7"
										},
										{
											"begin": 5535,
											"end": 5544,
											"name": "DUP11"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP11"
										},
										{
											"begin": 5507,
											"end": 5514,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5507,
											"end": 5556,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5507,
											"end": 5556,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5507,
											"end": 5556,
											"name": "JUMPDEST"
										},
										{
											"begin": 5570,
											"end": 5575,
											"name": "DUP2"
										},
										{
											"begin": 5566,
											"end": 5613,
											"name": "ISZERO"
										},
										{
											"begin": 5566,
											"end": 5613,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5566,
											"end": 5613,
											"name": "JUMPI"
										},
										{
											"begin": 5604,
											"end": 5612,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5604,
											"end": 5612,
											"name": "SLOAD"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5590,
											"end": 5598,
											"name": "DUP1"
										},
										{
											"begin": 5590,
											"end": 5598,
											"name": "DUP3"
										},
										{
											"begin": 5590,
											"end": 5598,
											"name": "AND"
										},
										{
											"begin": 5590,
											"end": 5598,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5604,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 5604,
											"end": 5612,
											"name": "DIV"
										},
										{
											"begin": 5604,
											"end": 5612,
											"name": "AND"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5585,
											"end": 5603,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "AND"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 5585,
											"end": 5613,
											"name": "JUMPDEST"
										},
										{
											"begin": 5577,
											"end": 5582,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5577,
											"end": 5613,
											"name": "SSTORE"
										},
										{
											"begin": 5566,
											"end": 5613,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5566,
											"end": 5613,
											"name": "JUMPDEST"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP1"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "MLOAD"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP6"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP2"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "MSTORE"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP2"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "ADD"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP6"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "SWAP1"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "MSTORE"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP2"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "MLOAD"
										},
										{
											"begin": 5673,
											"end": 5683,
											"name": "CALLER"
										},
										{
											"begin": 5673,
											"end": 5683,
											"name": "SWAP3"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "SWAP3"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "DUP3"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "SWAP1"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "SUB"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "ADD"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "SWAP1"
										},
										{
											"begin": 5668,
											"end": 5702,
											"name": "LOG2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "SWAP5"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "SWAP7"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4492,
											"end": 5709,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "KECCAK256"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "SLOAD"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 430,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "JUMPDEST"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SLOAD"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "DUP2"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "MSTORE"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "DUP2"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "MSTORE"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "KECCAK256"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "SLOAD"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "DUP2"
										},
										{
											"begin": 762,
											"end": 803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "JUMPDEST"
										},
										{
											"begin": 5867,
											"end": 5879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5893,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1216,
											"name": "EQ"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "REVERT"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SSTORE"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "DUP1"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5947,
											"end": 5958,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "SLOAD"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "SLOAD"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP1"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP2"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "MSTORE"
										},
										{
											"begin": 6195,
											"end": 6199,
											"name": "ADDRESS"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP3"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "ADD"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "MSTORE"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP1"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "MLOAD"
										},
										{
											"begin": 5905,
											"end": 5960,
											"name": "SWAP5"
										},
										{
											"begin": 5905,
											"end": 5960,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5905,
											"end": 5960,
											"name": "SWAP3"
										},
										{
											"begin": 5905,
											"end": 5960,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "SWAP2"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP3"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "SWAP4"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "SWAP2"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "AND"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "SWAP2"
										},
										{
											"begin": 5985,
											"end": 6000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 6000,
											"name": "SWAP2"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP5"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "SWAP2"
										},
										{
											"begin": 6161,
											"end": 6186,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6161,
											"end": 6186,
											"name": "SWAP2"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP1"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP4"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "ADD"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP3"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP3"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP2"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP1"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP3"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP1"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SUB"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "ADD"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP2"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP7"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "DUP1"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "POP"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "GAS"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "STATICCALL"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "POP"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "POP"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "POP"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "POP"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "MLOAD"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "MLOAD"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP2"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "MSTORE"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "ADDRESS"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP3"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "ADD"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "MSTORE"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "MLOAD"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP2"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6211,
											"end": 6224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6224,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "DUP6"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "AND"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "SWAP2"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "SWAP2"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP4"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "ADD"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP3"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6201,
											"name": "SWAP3"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP2"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP3"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SUB"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "ADD"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP2"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "DUP7"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "DUP1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "POP"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "GAS"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "STATICCALL"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "POP"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "POP"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "POP"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "POP"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "MLOAD"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "MLOAD"
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "ADDRESS"
										},
										{
											"begin": 6277,
											"end": 6291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "SWAP1"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "DUP2"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "MSTORE"
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "MSTORE"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "DUP2"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "KECCAK256"
										},
										{
											"begin": 6294,
											"end": 6318,
											"name": "SLOAD"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP2"
										},
										{
											"begin": 6227,
											"end": 6267,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 6351,
											"end": 6360,
											"name": "DUP9"
										},
										{
											"begin": 6362,
											"end": 6371,
											"name": "DUP9"
										},
										{
											"begin": 6342,
											"end": 6350,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "JUMPDEST"
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6413,
											"name": "SLOAD"
										},
										{
											"begin": 6329,
											"end": 6372,
											"name": "SWAP1"
										},
										{
											"begin": 6329,
											"end": 6372,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6402,
											"end": 6413,
											"name": "DUP1"
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 6511,
											"end": 6520,
											"name": "DUP5"
										},
										{
											"begin": 6525,
											"end": 6533,
											"name": "DUP8"
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6511,
											"end": 6524,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "AND"
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "JUMPDEST"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "DUP2"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "JUMPI"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "INVALID"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "JUMPDEST"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "DIV"
										},
										{
											"begin": 6511,
											"end": 6549,
											"name": "SWAP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6643,
											"end": 6655,
											"name": "DUP1"
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP5"
										},
										{
											"begin": 6631,
											"end": 6639,
											"name": "DUP7"
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6617,
											"end": 6630,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "AND"
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "JUMPDEST"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "DUP2"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "JUMPI"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "INVALID"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "JUMPDEST"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "DIV"
										},
										{
											"begin": 6607,
											"end": 6655,
											"name": "SWAP10"
										},
										{
											"begin": 6607,
											"end": 6655,
											"name": "POP"
										},
										{
											"begin": 6731,
											"end": 6732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP12"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "GT"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "DUP1"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "ISZERO"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "JUMPI"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "POP"
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6743,
											"name": "DUP11"
										},
										{
											"begin": 6736,
											"end": 6747,
											"name": "GT"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "JUMPDEST"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "JUMPI"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP2"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "MSTORE"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "ADD"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP1"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP1"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "ADD"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP3"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP2"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "SUB"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP3"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "MSTORE"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP2"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "MSTORE"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "ADD"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP1"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH data",
											"value": "6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "SWAP2"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "CODECOPY"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "ADD"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "SWAP2"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "POP"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "POP"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "MLOAD"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "DUP1"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "SWAP2"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "SUB"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "SWAP1"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "REVERT"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 6713,
											"end": 6790,
											"name": "JUMPDEST"
										},
										{
											"begin": 6800,
											"end": 6831,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "ADDRESS"
										},
										{
											"begin": 6821,
											"end": 6830,
											"name": "DUP5"
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 6800,
											"end": 6831,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 6831,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 6800,
											"end": 6831,
											"name": "JUMPDEST"
										},
										{
											"begin": 6841,
											"end": 6876,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "DUP8"
										},
										{
											"begin": 6864,
											"end": 6866,
											"name": "DUP14"
										},
										{
											"begin": 6868,
											"end": 6875,
											"name": "DUP14"
										},
										{
											"begin": 6841,
											"end": 6854,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6841,
											"end": 6876,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6841,
											"end": 6876,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 6841,
											"end": 6876,
											"name": "JUMPDEST"
										},
										{
											"begin": 6886,
											"end": 6921,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP7"
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "DUP14"
										},
										{
											"begin": 6913,
											"end": 6920,
											"name": "DUP13"
										},
										{
											"begin": 6886,
											"end": 6899,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6886,
											"end": 6921,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6886,
											"end": 6921,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 6886,
											"end": 6921,
											"name": "JUMPDEST"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP1"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP2"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "MSTORE"
										},
										{
											"begin": 6976,
											"end": 6980,
											"name": "ADDRESS"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP3"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "ADD"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "MSTORE"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP1"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6942,
											"end": 6967,
											"name": "DUP10"
										},
										{
											"begin": 6942,
											"end": 6967,
											"name": "AND"
										},
										{
											"begin": 6942,
											"end": 6967,
											"name": "SWAP2"
										},
										{
											"begin": 6942,
											"end": 6967,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6942,
											"end": 6967,
											"name": "SWAP2"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP1"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP4"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "ADD"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP3"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP3"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP2"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP1"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP3"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP1"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SUB"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "ADD"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP2"
										},
										{
											"begin": 6942,
											"end": 6967,
											"name": "DUP7"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "DUP1"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "POP"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "GAS"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "STATICCALL"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "POP"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "POP"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "POP"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "POP"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "MLOAD"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "MLOAD"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP2"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "MSTORE"
										},
										{
											"begin": 7037,
											"end": 7041,
											"name": "ADDRESS"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP3"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "ADD"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "MSTORE"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "MLOAD"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP2"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "DUP9"
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "AND"
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "SWAP2"
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "SWAP2"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP3"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "ADD"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP3"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6942,
											"end": 6982,
											"name": "SWAP3"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP2"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP3"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SUB"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "ADD"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP2"
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "DUP7"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP1"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "POP"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "GAS"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "STATICCALL"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "POP"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "POP"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "POP"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "POP"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "MLOAD"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "MLOAD"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7054,
											"end": 7103,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 7062,
											"end": 7070,
											"name": "DUP6"
										},
										{
											"begin": 7003,
											"end": 7043,
											"name": "DUP6"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP12"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "DUP12"
										},
										{
											"begin": 7054,
											"end": 7061,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 7054,
											"end": 7103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7054,
											"end": 7103,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 7054,
											"end": 7103,
											"name": "JUMPDEST"
										},
										{
											"begin": 7117,
											"end": 7122,
											"name": "DUP2"
										},
										{
											"begin": 7113,
											"end": 7160,
											"name": "ISZERO"
										},
										{
											"begin": 7113,
											"end": 7160,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 7113,
											"end": 7160,
											"name": "JUMPI"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "SLOAD"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7137,
											"end": 7145,
											"name": "DUP1"
										},
										{
											"begin": 7137,
											"end": 7145,
											"name": "DUP3"
										},
										{
											"begin": 7137,
											"end": 7145,
											"name": "AND"
										},
										{
											"begin": 7137,
											"end": 7145,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "SWAP1"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "DIV"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "AND"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "AND"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 7132,
											"end": 7160,
											"name": "JUMPDEST"
										},
										{
											"begin": 7124,
											"end": 7129,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 7124,
											"end": 7160,
											"name": "SSTORE"
										},
										{
											"begin": 7113,
											"end": 7160,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 7113,
											"end": 7160,
											"name": "JUMPDEST"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP1"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "MLOAD"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP13"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP2"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "MSTORE"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP2"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "ADD"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP13"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP1"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "MSTORE"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP2"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP16"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "AND"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP3"
										},
										{
											"begin": 7220,
											"end": 7230,
											"name": "CALLER"
										},
										{
											"begin": 7220,
											"end": 7230,
											"name": "SWAP3"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP3"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP1"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "DUP2"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP1"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SUB"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP1"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP2"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "ADD"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "SWAP1"
										},
										{
											"begin": 7215,
											"end": 7253,
											"name": "LOG3"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "DUP2"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "SSTORE"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "POP"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP2"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "POP"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "SWAP2"
										},
										{
											"begin": 5818,
											"end": 7260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "43616B652D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "JUMPDEST"
										},
										{
											"begin": 2520,
											"end": 2524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2568,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2546,
											"end": 2556,
											"name": "CALLER"
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "DUP5"
										},
										{
											"begin": 2562,
											"end": 2567,
											"name": "DUP5"
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2536,
											"end": 2568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 485,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 485,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1216,
											"name": "EQ"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "REVERT"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SSTORE"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "SLOAD"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "SLOAD"
										},
										{
											"begin": 9491,
											"end": 9499,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9491,
											"end": 9499,
											"name": "SLOAD"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP2"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "MSTORE"
										},
										{
											"begin": 9480,
											"end": 9484,
											"name": "ADDRESS"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP3"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "ADD"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "MSTORE"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "SWAP5"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP6"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "AND"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "SWAP5"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "SWAP4"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "AND"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "SWAP3"
										},
										{
											"begin": 9419,
											"end": 9501,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 9419,
											"end": 9501,
											"name": "SWAP3"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP6"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "SWAP3"
										},
										{
											"begin": 9442,
											"end": 9444,
											"name": "DUP8"
										},
										{
											"begin": 9442,
											"end": 9444,
											"name": "SWAP3"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9491,
											"end": 9499,
											"name": "AND"
										},
										{
											"begin": 9491,
											"end": 9499,
											"name": "SWAP2"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP6"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "SWAP2"
										},
										{
											"begin": 9446,
											"end": 9471,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9446,
											"end": 9471,
											"name": "SWAP2"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP3"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "ADD"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP3"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP3"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP2"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP3"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SUB"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "ADD"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP2"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP7"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "DUP1"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "GAS"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "STATICCALL"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "MLOAD"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "MLOAD"
										},
										{
											"begin": 9446,
											"end": 9486,
											"name": "SWAP1"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9490,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "AND"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 9446,
											"end": 9500,
											"name": "JUMPDEST"
										},
										{
											"begin": 9419,
											"end": 9432,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9419,
											"end": 9501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9419,
											"end": 9501,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 9419,
											"end": 9501,
											"name": "JUMPDEST"
										},
										{
											"begin": 9583,
											"end": 9591,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9583,
											"end": 9591,
											"name": "SLOAD"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP2"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "MSTORE"
										},
										{
											"begin": 9572,
											"end": 9576,
											"name": "ADDRESS"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP3"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "ADD"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "MSTORE"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "MLOAD"
										},
										{
											"begin": 9511,
											"end": 9593,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 9511,
											"end": 9593,
											"name": "SWAP3"
										},
										{
											"begin": 9525,
											"end": 9532,
											"name": "DUP5"
										},
										{
											"begin": 9525,
											"end": 9532,
											"name": "SWAP3"
										},
										{
											"begin": 9534,
											"end": 9536,
											"name": "DUP8"
										},
										{
											"begin": 9534,
											"end": 9536,
											"name": "SWAP3"
										},
										{
											"begin": 9538,
											"end": 9592,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 9538,
											"end": 9592,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9583,
											"end": 9591,
											"name": "SWAP1"
										},
										{
											"begin": 9583,
											"end": 9591,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9583,
											"end": 9591,
											"name": "AND"
										},
										{
											"begin": 9583,
											"end": 9591,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "DUP7"
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "AND"
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "SWAP2"
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "SWAP2"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP3"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "ADD"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP3"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP3"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP2"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP3"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SWAP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "SUB"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "ADD"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP2"
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "DUP7"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "DUP1"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9538,
											"end": 9578,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 9511,
											"end": 9593,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 9511,
											"end": 9593,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9271,
											"end": 9600,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 586,
											"end": 608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "AND"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMPDEST"
										},
										{
											"begin": 3152,
											"end": 3167,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3140,
											"end": 3148,
											"name": "DUP5"
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "LT"
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "ISZERO"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "JUMPI"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP2"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MSTORE"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "MLOAD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "DUP2"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SUB"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "REVERT"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 3132,
											"end": 3188,
											"name": "JUMPDEST"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3300,
											"end": 3316,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP10"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP2"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP2"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "MSTORE"
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "SWAP1"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP2"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "MSTORE"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "DUP4"
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "KECCAK256"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SLOAD"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP3"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "ADD"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP3"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP3"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MLOAD"
										},
										{
											"begin": 690,
											"end": 756,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP2"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP5"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP14"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "AND"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP7"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP13"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP12"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP2"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP6"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "DUP3"
										},
										{
											"begin": 3344,
											"end": 3421,
											"name": "MSTORE"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "DUP4"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3334,
											"end": 3422,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP6"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP6"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "SWAP7"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP5"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "DUP3"
										},
										{
											"begin": 3238,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "DUP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "MLOAD"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "DUP4"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "ADD"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP1"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "SWAP7"
										},
										{
											"begin": 3215,
											"end": 3446,
											"name": "KECCAK256"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP6"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP4"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP7"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP10"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "AND"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP6"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP9"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP8"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MSTORE"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MLOAD"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "SWAP2"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "SWAP4"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP3"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "DUP2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SUB"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP2"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP6"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "GAS"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "STATICCALL"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "ADD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "MLOAD"
										},
										{
											"begin": 3483,
											"end": 3509,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "DUP2"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "AND"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "ISZERO"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "DUP1"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "ISZERO"
										},
										{
											"begin": 3527,
											"end": 3557,
											"name": "SWAP1"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "JUMPI"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "POP"
										},
										{
											"begin": 3581,
											"end": 3586,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3561,
											"end": 3586,
											"name": "AND"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3561,
											"end": 3586,
											"name": "AND"
										},
										{
											"begin": 3561,
											"end": 3586,
											"name": "EQ"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 3527,
											"end": 3586,
											"name": "JUMPDEST"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP2"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP3"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "MLOAD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "DUP2"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SUB"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "ADD"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "REVERT"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 3519,
											"end": 3617,
											"name": "JUMPDEST"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "DUP10"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP10"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP10"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "JUMPDEST"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 3665,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP4"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP5"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "KECCAK256"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP3"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "KECCAK256"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SLOAD"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1203,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1216,
											"name": "EQ"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "REVERT"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 1195,
											"end": 1236,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SSTORE"
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "SLOAD"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP1"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP2"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "MSTORE"
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "ADDRESS"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP3"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "ADD"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "MSTORE"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP1"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "MLOAD"
										},
										{
											"begin": 9686,
											"end": 9795,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 9686,
											"end": 9795,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "AND"
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "SWAP2"
										},
										{
											"begin": 9694,
											"end": 9718,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9694,
											"end": 9718,
											"name": "SWAP2"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP1"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP4"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "ADD"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP3"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP3"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP2"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP1"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP3"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP1"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SUB"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "ADD"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP2"
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP7"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "DUP1"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "POP"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "GAS"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "STATICCALL"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "POP"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "POP"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "POP"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "POP"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "MLOAD"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "MLOAD"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "SLOAD"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP2"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "MSTORE"
										},
										{
											"begin": 9768,
											"end": 9772,
											"name": "ADDRESS"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP3"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "ADD"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "MSTORE"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SWAP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "SWAP1"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "SWAP3"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "AND"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "SWAP2"
										},
										{
											"begin": 9735,
											"end": 9759,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9735,
											"end": 9759,
											"name": "SWAP2"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP3"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "ADD"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SWAP3"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9694,
											"end": 9733,
											"name": "SWAP3"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SWAP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SWAP2"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SWAP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP3"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SWAP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "SUB"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "ADD"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP2"
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "DUP7"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "DUP1"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "GAS"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "STATICCALL"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "MLOAD"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9774,
											"name": "MLOAD"
										},
										{
											"begin": 9776,
											"end": 9784,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9776,
											"end": 9784,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9776,
											"end": 9784,
											"name": "DUP1"
										},
										{
											"begin": 9776,
											"end": 9784,
											"name": "DUP3"
										},
										{
											"begin": 9776,
											"end": 9784,
											"name": "AND"
										},
										{
											"begin": 9776,
											"end": 9784,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9786,
											"end": 9794,
											"name": "SWAP1"
										},
										{
											"begin": 9786,
											"end": 9794,
											"name": "DIV"
										},
										{
											"begin": 9786,
											"end": 9794,
											"name": "AND"
										},
										{
											"begin": 9686,
											"end": 9693,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9686,
											"end": 9795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9686,
											"end": 9795,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 9686,
											"end": 9795,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "SSTORE"
										},
										{
											"begin": 9646,
											"end": 9802,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "MLOAD"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "DUP3"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "DUP3"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "MSTORE"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "DUP2"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "MSTORE"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "SWAP2"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "DUP3"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "MSTORE"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP6"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "AND"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP4"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "ADD"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "MSTORE"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP1"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP4"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "ADD"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP7"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "MSTORE"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP5"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "SWAP3"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "ADD"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "DUP5"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "DUP2"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SWAP3"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "MLOAD"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP2"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "MLOAD"
										},
										{
											"begin": 1618,
											"end": 1630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1630,
											"name": "SWAP5"
										},
										{
											"begin": 1632,
											"end": 1649,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1632,
											"end": 1649,
											"name": "SWAP5"
										},
										{
											"begin": 1653,
											"end": 1663,
											"name": "DUP10"
										},
										{
											"begin": 1653,
											"end": 1663,
											"name": "AND"
										},
										{
											"begin": 1653,
											"end": 1663,
											"name": "SWAP4"
										},
										{
											"begin": 1664,
											"end": 1707,
											"name": "SWAP3"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP3"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP1"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP1"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "ADD"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "MLOAD"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP1"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP4"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SUB"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP2"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "DUP7"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "GAS"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "CALL"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1708,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1617,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1617,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1617,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1617,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "DUP2"
										},
										{
											"begin": 1726,
											"end": 1783,
											"name": "DUP1"
										},
										{
											"begin": 1726,
											"end": 1783,
											"name": "ISZERO"
										},
										{
											"begin": 1726,
											"end": 1783,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1726,
											"end": 1783,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1749,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1749,
											"name": "MLOAD"
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "ISZERO"
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1782,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1738,
											"end": 1782,
											"name": "JUMPI"
										},
										{
											"begin": 1738,
											"end": 1782,
											"name": "POP"
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "DUP1"
										},
										{
											"begin": 1758,
											"end": 1782,
											"name": "DUP1"
										},
										{
											"begin": 1758,
											"end": 1782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1782,
											"name": "ADD"
										},
										{
											"begin": 1758,
											"end": 1782,
											"name": "SWAP1"
										},
										{
											"begin": 1758,
											"end": 1782,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1758,
											"end": 1782,
											"name": "MLOAD"
										},
										{
											"begin": 1738,
											"end": 1782,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 1738,
											"end": 1782,
											"name": "JUMPDEST"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "JUMPI"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "DUP1"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "DUP2"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "MSTORE"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "DUP3"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "ADD"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "MSTORE"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "DUP3"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "ADD"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "MSTORE"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "50616E63616B653A205452414E534645525F4641494C45440000000000000000"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "DUP3"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "ADD"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "MSTORE"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "SWAP1"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "MLOAD"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "SWAP1"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "DUP2"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "SWAP1"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "SUB"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "ADD"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "SWAP1"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "REVERT"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 1718,
											"end": 1812,
											"name": "JUMPDEST"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1819,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "MUL"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "DUP5"
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "GT"
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "DUP1"
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "ISZERO"
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "DUP4"
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "GT"
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "ISZERO"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "JUMPDEST"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "JUMPI"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "DUP1"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204F564552464C4F57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "MLOAD"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "SUB"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "ADD"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "REVERT"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 2723,
											"end": 2803,
											"name": "JUMPDEST"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "SLOAD"
										},
										{
											"begin": 2844,
											"end": 2867,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2844,
											"end": 2867,
											"name": "DUP2"
										},
										{
											"begin": 2844,
											"end": 2867,
											"name": "AND"
										},
										{
											"begin": 2844,
											"end": 2867,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "DIV"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "DUP2"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "AND"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "DUP3"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SUB"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "DUP2"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "AND"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "ISZERO"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "DUP1"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "ISZERO"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "SWAP1"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2990,
											"end": 3004,
											"name": "DUP5"
										},
										{
											"begin": 2990,
											"end": 3004,
											"name": "AND"
										},
										{
											"begin": 2990,
											"end": 3004,
											"name": "ISZERO"
										},
										{
											"begin": 2990,
											"end": 3004,
											"name": "ISZERO"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2971,
											"end": 3022,
											"name": "DUP1"
										},
										{
											"begin": 2971,
											"end": 3022,
											"name": "ISZERO"
										},
										{
											"begin": 2971,
											"end": 3022,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 2971,
											"end": 3022,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3008,
											"end": 3022,
											"name": "DUP4"
										},
										{
											"begin": 3008,
											"end": 3022,
											"name": "AND"
										},
										{
											"begin": 3008,
											"end": 3022,
											"name": "ISZERO"
										},
										{
											"begin": 3008,
											"end": 3022,
											"name": "ISZERO"
										},
										{
											"begin": 2971,
											"end": 3022,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 2971,
											"end": 3022,
											"name": "JUMPDEST"
										},
										{
											"begin": 2967,
											"end": 3299,
											"name": "ISZERO"
										},
										{
											"begin": 2967,
											"end": 3299,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 2967,
											"end": 3299,
											"name": "JUMPI"
										},
										{
											"begin": 3175,
											"end": 3186,
											"name": "DUP1"
										},
										{
											"begin": 3122,
											"end": 3186,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3122,
											"end": 3186,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3171,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "DUP6"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP7"
										},
										{
											"begin": 3127,
											"end": 3143,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3171,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 3127,
											"end": 3171,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3171,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3127,
											"end": 3171,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 3127,
											"end": 3171,
											"name": "JUMPDEST"
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3098,
											"end": 3186,
											"name": "DUP1"
										},
										{
											"begin": 3098,
											"end": 3186,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "SWAP3"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "SWAP3"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "AND"
										},
										{
											"begin": 3122,
											"end": 3186,
											"name": "SWAP3"
										},
										{
											"begin": 3122,
											"end": 3186,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3186,
											"name": "SWAP3"
										},
										{
											"begin": 3122,
											"end": 3186,
											"name": "MUL"
										},
										{
											"begin": 3098,
											"end": 3186,
											"name": "ADD"
										},
										{
											"begin": 3098,
											"end": 3186,
											"name": "SWAP1"
										},
										{
											"begin": 3098,
											"end": 3186,
											"name": "SSTORE"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "DUP2"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "AND"
										},
										{
											"begin": 3229,
											"end": 3273,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "DUP5"
										},
										{
											"begin": 3229,
											"end": 3256,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP8"
										},
										{
											"begin": 3229,
											"end": 3245,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3229,
											"end": 3256,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3273,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 3229,
											"end": 3273,
											"name": "JUMPDEST"
										},
										{
											"begin": 3200,
											"end": 3220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3200,
											"end": 3288,
											"name": "DUP1"
										},
										{
											"begin": 3200,
											"end": 3288,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3224,
											"end": 3274,
											"name": "SWAP3"
										},
										{
											"begin": 3224,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3274,
											"name": "SWAP3"
										},
										{
											"begin": 3224,
											"end": 3274,
											"name": "AND"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "SWAP3"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "SWAP1"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "SWAP3"
										},
										{
											"begin": 3224,
											"end": 3288,
											"name": "MUL"
										},
										{
											"begin": 3200,
											"end": 3288,
											"name": "ADD"
										},
										{
											"begin": 3200,
											"end": 3288,
											"name": "SWAP1"
										},
										{
											"begin": 3200,
											"end": 3288,
											"name": "SSTORE"
										},
										{
											"begin": 2967,
											"end": 3299,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 2967,
											"end": 3299,
											"name": "JUMPDEST"
										},
										{
											"begin": 3308,
											"end": 3316,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "DUP1"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "DUP9"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "DUP2"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "AND"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "SWAP2"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "SWAP1"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "SWAP2"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "DUP9"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "DUP4"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "MUL"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "SWAP2"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "SWAP2"
										},
										{
											"begin": 3346,
											"end": 3374,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "DUP8"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "AND"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "MUL"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "OR"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "SWAP3"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "DUP4"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "SWAP1"
										},
										{
											"begin": 3384,
											"end": 3419,
											"name": "SSTORE"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "DUP1"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "MLOAD"
										},
										{
											"begin": 3439,
											"end": 3447,
											"name": "DUP5"
										},
										{
											"begin": 3439,
											"end": 3447,
											"name": "DUP5"
										},
										{
											"begin": 3439,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "MSTORE"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "SWAP2"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "SWAP1"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "SWAP4"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "DIV"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "SWAP1"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "SWAP2"
										},
										{
											"begin": 3449,
											"end": 3457,
											"name": "AND"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "DUP3"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "MSTORE"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "MLOAD"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP3"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SUB"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "LOG1"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 2620,
											"end": 3465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP1"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP5"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "AND"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP1"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP4"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "KECCAK256"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP5"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP8"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "AND"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP1"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP5"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP5"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP3"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP2"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP3"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "KECCAK256"
										},
										{
											"begin": 1957,
											"end": 1990,
											"name": "DUP6"
										},
										{
											"begin": 1957,
											"end": 1990,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1990,
											"name": "SSTORE"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MLOAD"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP6"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MSTORE"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MLOAD"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP3"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SUB"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP2"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "ADD"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "LOG3"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2043,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "DUP4"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "AND"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "SWAP1"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "DUP2"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "MSTORE"
										},
										{
											"begin": 2175,
											"end": 2184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "MSTORE"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "SWAP1"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "KECCAK256"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "SLOAD"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "SWAP1"
										},
										{
											"begin": 2195,
											"end": 2200,
											"name": "DUP3"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "AND"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP6"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP3"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "KECCAK256"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SWAP4"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SWAP4"
										},
										{
											"begin": 2157,
											"end": 2201,
											"name": "SSTORE"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SWAP1"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP5"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "AND"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "DUP2"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "MSTORE"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "KECCAK256"
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "SLOAD"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "AND"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 2227,
											"end": 2251,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP5"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "AND"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "MSTORE"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "MSTORE"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP3"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "KECCAK256"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SWAP5"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SWAP1"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SWAP5"
										},
										{
											"begin": 2211,
											"end": 2251,
											"name": "SSTORE"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "MLOAD"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP6"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP2"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "MSTORE"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "MLOAD"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP2"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "SWAP4"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP8"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "AND"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP2"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "DUP3"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SUB"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "ADD"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "LOG3"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 2049,
											"end": 2298,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "JUMPDEST"
										},
										{
											"begin": 3624,
											"end": 3634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP1"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "SLOAD"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "EXP"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3662,
											"end": 3692,
											"name": "AND"
										},
										{
											"begin": 3662,
											"end": 3692,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "MLOAD"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP2"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "AND"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "SHL"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP2"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "MSTORE"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "ADD"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "MLOAD"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP1"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP4"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "SUB"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP2"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP7"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "DUP1"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "GAS"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "STATICCALL"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "MLOAD"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "MLOAD"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "DUP3"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "AND"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "ISZERO"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "ISZERO"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "SWAP2"
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 4377,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 3785,
											"end": 4377,
											"name": "JUMPI"
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "DUP1"
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "ISZERO"
										},
										{
											"begin": 3810,
											"end": 4310,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 3810,
											"end": 4310,
											"name": "JUMPI"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3899,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "DUP9"
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "DUP2"
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "AND"
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "SWAP1"
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "DUP9"
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "AND"
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3868,
											"end": 3887,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "AND"
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3858,
											"end": 3899,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 3858,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3845,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3845,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3917,
											"end": 3931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3951,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "DUP4"
										},
										{
											"begin": 3934,
											"end": 3943,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 3934,
											"end": 3951,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3951,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 3934,
											"end": 3951,
											"name": "JUMPDEST"
										},
										{
											"begin": 3917,
											"end": 3951,
											"name": "SWAP1"
										},
										{
											"begin": 3917,
											"end": 3951,
											"name": "POP"
										},
										{
											"begin": 3981,
											"end": 3990,
											"name": "DUP1"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "DUP3"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "GT"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "ISZERO"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "JUMPI"
										},
										{
											"begin": 4014,
											"end": 4028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4075,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 4047,
											"end": 4052,
											"name": "DUP7"
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DUP7"
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "AND"
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "JUMPDEST"
										},
										{
											"begin": 4031,
											"end": 4042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4042,
											"name": "SLOAD"
										},
										{
											"begin": 4031,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "AND"
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4075,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 4031,
											"end": 4075,
											"name": "JUMPDEST"
										},
										{
											"begin": 4014,
											"end": 4075,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4097,
											"end": 4113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4151,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 4134,
											"end": 4150,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP5"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4134,
											"end": 4150,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4134,
											"end": 4147,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4134,
											"end": 4150,
											"name": "AND"
										},
										{
											"begin": 4134,
											"end": 4150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4150,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 4134,
											"end": 4150,
											"name": "JUMPDEST"
										},
										{
											"begin": 4116,
											"end": 4129,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP7"
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 4116,
											"end": 4129,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4116,
											"end": 4129,
											"name": "AND"
										},
										{
											"begin": 4116,
											"end": 4129,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4129,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 4116,
											"end": 4129,
											"name": "JUMPDEST"
										},
										{
											"begin": 4116,
											"end": 4133,
											"name": "SWAP1"
										},
										{
											"begin": 4116,
											"end": 4151,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4133,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 4116,
											"end": 4151,
											"name": "AND"
										},
										{
											"begin": 4116,
											"end": 4151,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4151,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 4116,
											"end": 4151,
											"name": "JUMPDEST"
										},
										{
											"begin": 4097,
											"end": 4151,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4151,
											"name": "POP"
										},
										{
											"begin": 4173,
											"end": 4187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "DUP4"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "JUMPI"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "INVALID"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "JUMPDEST"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "DIV"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4252,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4252,
											"name": "ISZERO"
										},
										{
											"begin": 4235,
											"end": 4277,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 4235,
											"end": 4277,
											"name": "JUMPI"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 4260,
											"end": 4265,
											"name": "DUP8"
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP3"
										},
										{
											"begin": 4254,
											"end": 4259,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "JUMPDEST"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "POP"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "POP"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "POP"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 3969,
											"end": 4296,
											"name": "JUMPDEST"
										},
										{
											"begin": 3810,
											"end": 4310,
											"name": "POP"
										},
										{
											"begin": 3810,
											"end": 4310,
											"name": "POP"
										},
										{
											"begin": 3810,
											"end": 4310,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 3810,
											"end": 4310,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 4377,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 3785,
											"end": 4377,
											"name": "JUMP"
										},
										{
											"begin": 3785,
											"end": 4377,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 3785,
											"end": 4377,
											"name": "JUMPDEST"
										},
										{
											"begin": 4330,
											"end": 4341,
											"name": "DUP1"
										},
										{
											"begin": 4330,
											"end": 4341,
											"name": "ISZERO"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "JUMPI"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4357,
											"end": 4366,
											"name": "SSTORE"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "JUMPDEST"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "POP"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "POP"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "SWAP3"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "SWAP2"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "POP"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "POP"
										},
										{
											"begin": 3551,
											"end": 4383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "GT"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DIV"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "LT"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP2"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP6"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "INVALID"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1624,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1424,
											"end": 1624,
											"name": "JUMPDEST"
										},
										{
											"begin": 1499,
											"end": 1510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1510,
											"name": "SLOAD"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "SWAP1"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP3"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1514,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "AND"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 1499,
											"end": 1521,
											"name": "JUMPDEST"
										},
										{
											"begin": 1485,
											"end": 1496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1521,
											"name": "SWAP1"
										},
										{
											"begin": 1485,
											"end": 1521,
											"name": "DUP2"
										},
										{
											"begin": 1485,
											"end": 1521,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "DUP4"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "KECCAK256"
										},
										{
											"begin": 1547,
											"end": 1560,
											"name": "SLOAD"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "DUP3"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1564,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 1547,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP4"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "AND"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP2"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP2"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "MSTORE"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SWAP1"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP2"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "MSTORE"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP1"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP4"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "KECCAK256"
										},
										{
											"begin": 1531,
											"end": 1571,
											"name": "SWAP5"
										},
										{
											"begin": 1531,
											"end": 1571,
											"name": "SWAP1"
										},
										{
											"begin": 1531,
											"end": 1571,
											"name": "SWAP5"
										},
										{
											"begin": 1531,
											"end": 1571,
											"name": "SSTORE"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "DUP4"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "DUP6"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SWAP4"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "MLOAD"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SWAP3"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SWAP4"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SWAP2"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SWAP3"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SWAP3"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SUB"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SWAP2"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "LOG3"
										},
										{
											"begin": 1424,
											"end": 1624,
											"name": "POP"
										},
										{
											"begin": 1424,
											"end": 1624,
											"name": "POP"
										},
										{
											"begin": 1424,
											"end": 1624,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 218,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SWAP4"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1838,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 1630,
											"end": 1838,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP3"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "AND"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "SWAP1"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP2"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "MSTORE"
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "MSTORE"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "SWAP1"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "KECCAK256"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "SLOAD"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "DUP3"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1711,
											"end": 1730,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "AND"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 1711,
											"end": 1737,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "DUP4"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "AND"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "DUP2"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "MSTORE"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "MSTORE"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "DUP2"
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "KECCAK256"
										},
										{
											"begin": 1693,
											"end": 1737,
											"name": "SWAP2"
										},
										{
											"begin": 1693,
											"end": 1737,
											"name": "SWAP1"
										},
										{
											"begin": 1693,
											"end": 1737,
											"name": "SWAP2"
										},
										{
											"begin": 1693,
											"end": 1737,
											"name": "SSTORE"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "SWAP1"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP3"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "AND"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 1761,
											"end": 1783,
											"name": "JUMPDEST"
										},
										{
											"begin": 1747,
											"end": 1758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1783,
											"name": "SWAP1"
										},
										{
											"begin": 1747,
											"end": 1783,
											"name": "DUP2"
										},
										{
											"begin": 1747,
											"end": 1783,
											"name": "SSTORE"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "DUP1"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "MLOAD"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "DUP4"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "DUP2"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "MSTORE"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "DUP6"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "AND"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SWAP2"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SWAP2"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "DUP2"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SUB"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "ADD"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "LOG3"
										},
										{
											"begin": 1630,
											"end": 1838,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 1838,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 1838,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 394,
											"end": 411,
											"name": "MUL"
										},
										{
											"begin": 394,
											"end": 411,
											"name": "SWAP1"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "DUP3"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DUP5"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPI"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "INVALID"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "SWAP4"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									],
									".data": {
										"50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PancakePair.sol\":\"PancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"PancakeERC20.sol\":{\"keccak256\":\"0x69ddd116a94c41092cb2616e57d5d59e674305c966ac9953ffb04d4ce5249ce7\",\"urls\":[\"bzz-raw://642da8a2b220b7867963d125275724429e4919c51c36fd3b2b287adf34bf3647\",\"dweb:/ipfs/QmbFe82gVJGQHpAxydNQAKEWjqzqwsYtLTMiEsBBYnKKaB\"]},\"PancakePair.sol\":{\"keccak256\":\"0xc4fd5feb1f5508965eb35a823783ebc42137ce8fb2abf12a0218075f23eb9bbf\",\"urls\":[\"bzz-raw://d2e9d0ed2b14efbc7c5760b825486c110b0a61ea7a9231ffc6147a46c3334a00\",\"dweb:/ipfs/QmerW1MEbnnDE2f18q2bPRoryLx4h6f4UGQVaQk25SMZuC\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2a1626814dfa8c9d73f14358eb349acf411633fdc5dca35fb607dacc7c20dd\",\"urls\":[\"bzz-raw://08b11bb3192bb52d3f341682413419cd516b772c5d9284485e4f846088e640bd\",\"dweb:/ipfs/QmYMcMrR53adeWN75xspymBCFSkWYfAJwtCDfnKaWRuJVy\"]},\"interfaces/IPancakeCallee.sol\":{\"keccak256\":\"0xf87708f8fc59352a86cbdc8317a93b46b5d89437418b170cc2778879f8a25fe7\",\"urls\":[\"bzz-raw://71b8ba3e36df11202737c838309b6171e6bf6783796db62c363720f03df0d067\",\"dweb:/ipfs/QmbLpNoZfZrCWqvWCuq6oaeLCnDgqSw6sAH5SGRN2PSwpL\"]},\"interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]},\"interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0xea125e6c4e3c52bce633dc5667b1e108c63ef48866943eb6c4074f19b23ed7c5\",\"urls\":[\"bzz-raw://c875e62eaaeab86a84108aa360d1dab9e9b4c9dd06299595bfb512c4259b1050\",\"dweb:/ipfs/QmW88oRqeybnNXsLM4P6cfTfYPdpEUR3742rYkPY2zmFv2\"]},\"interfaces/IPancakePair.sol\":{\"keccak256\":\"0xb3d3ac8e3e41ff3b87b26672225c38b36be5a52008288bd6a3b83b7d68f572d6\",\"urls\":[\"bzz-raw://3ab097e4c47e0069f2e45cce7ccbb6d731c107fd4fff2db13663425a17e52ee5\",\"dweb:/ipfs/QmNmrZbJj5YG3QrLVUNMS4VnXNBfSRwqwZ8nAEdALMFQSR\"]},\"libraries/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]},\"libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]},\"libraries/UQ112x112.sol\":{\"keccak256\":\"0x0cd289c012b341feda98ad4cc732ee5ce64cd5d0b106796e4c8edcdad1c2e43b\",\"urls\":[\"bzz-raw://098881b3c407c56d0e9a707f6d6bc5ced2ae78dfe58aa82055c754ee2dd4c97a\",\"dweb:/ipfs/QmQEU9ynXqGR14fYyLgQbdxYebxQsCHsgwE2hr7xAeLzCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "PancakePair.sol:PancakePair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "PancakePair.sol:PancakePair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "PancakePair.sol:PancakePair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "PancakePair.sol:PancakePair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "PancakePair.sol:PancakePair",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 419,
								"contract": "PancakePair.sol:PancakePair",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 421,
								"contract": "PancakePair.sol:PancakePair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 423,
								"contract": "PancakePair.sol:PancakePair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "PancakePair.sol:PancakePair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 427,
								"contract": "PancakePair.sol:PancakePair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 429,
								"contract": "PancakePair.sol:PancakePair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "8",
								"type": "t_uint32"
							},
							{
								"astId": 431,
								"contract": "PancakePair.sol:PancakePair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 433,
								"contract": "PancakePair.sol:PancakePair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 435,
								"contract": "PancakePair.sol:PancakePair",
								"label": "kLast",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 438,
								"contract": "PancakePair.sol:PancakePair",
								"label": "unlocked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2a1626814dfa8c9d73f14358eb349acf411633fdc5dca35fb607dacc7c20dd\",\"urls\":[\"bzz-raw://08b11bb3192bb52d3f341682413419cd516b772c5d9284485e4f846088e640bd\",\"dweb:/ipfs/QmYMcMrR53adeWN75xspymBCFSkWYfAJwtCDfnKaWRuJVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IPancakeCallee.sol": {
				"IPancakeCallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "pancakeCall",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pancakeCall(address,uint256,uint256,bytes)": "84800812"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pancakeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IPancakeCallee.sol\":\"IPancakeCallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPancakeCallee.sol\":{\"keccak256\":\"0xf87708f8fc59352a86cbdc8317a93b46b5d89437418b170cc2778879f8a25fe7\",\"urls\":[\"bzz-raw://71b8ba3e36df11202737c838309b6171e6bf6783796db62c363720f03df0d067\",\"dweb:/ipfs/QmbLpNoZfZrCWqvWCuq6oaeLCnDgqSw6sAH5SGRN2PSwpL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IPancakeERC20.sol": {
				"IPancakeERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IPancakeERC20.sol\":\"IPancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IPancakeFactory.sol": {
				"IPancakeFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_CODE_PAIR_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"INIT_CODE_PAIR_HASH()": "5855a25a",
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IPancakeFactory.sol\":\"IPancakeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0xea125e6c4e3c52bce633dc5667b1e108c63ef48866943eb6c4074f19b23ed7c5\",\"urls\":[\"bzz-raw://c875e62eaaeab86a84108aa360d1dab9e9b4c9dd06299595bfb512c4259b1050\",\"dweb:/ipfs/QmW88oRqeybnNXsLM4P6cfTfYPdpEUR3742rYkPY2zmFv2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IPancakePair.sol": {
				"IPancakePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IPancakePair.sol\":\"IPancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPancakePair.sol\":{\"keccak256\":\"0xb3d3ac8e3e41ff3b87b26672225c38b36be5a52008288bd6a3b83b7d68f572d6\",\"urls\":[\"bzz-raw://3ab097e4c47e0069f2e45cce7ccbb6d731c107fd4fff2db13663425a17e52ee5\",\"dweb:/ipfs/QmNmrZbJj5YG3QrLVUNMS4VnXNBfSRwqwZ8nAEdALMFQSR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"libraries/Math.sol\":115:655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Math.sol\":115:655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820bbe7d5ee0a951f67356eb95c62bc67183105628482666b36fc41f6c448d21ea764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820bbe7d5ee0a951f67356eb95c62bc67183105628482666b36fc41f6c448d21ea764736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBB 0xE7 0xD5 0xEE EXP SWAP6 0x1F PUSH8 0x356EB95C62BC6718 BALANCE SDIV PUSH3 0x848266 PUSH12 0x36FC41F6C448D21EA764736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "115:540:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820bbe7d5ee0a951f67356eb95c62bc67183105628482666b36fc41f6c448d21ea764736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBB 0xE7 0xD5 0xEE EXP SWAP6 0x1F PUSH8 0x356EB95C62BC6718 BALANCE SDIV PUSH3 0x848266 PUSH12 0x36FC41F6C448D21EA764736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "115:540:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bbe7d5ee0a951f67356eb95c62bc67183105628482666b36fc41f6c448d21ea764736f6c63430005100032",
									".code": [
										{
											"begin": 115,
											"end": 655,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820a9f58974b9aef1bc864e55eecaa7d89b70cbab2f27e2d10ef4e73374eb4b22e764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820a9f58974b9aef1bc864e55eecaa7d89b70cbab2f27e2d10ef4e73374eb4b22e764736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xA9 CREATE2 DUP10 PUSH21 0xB9AEF1BC864E55EECAA7D89B70CBAB2F27E2D10EF4 0xE7 CALLER PUSH21 0xEB4B22E764736F6C63430005100032000000000000 ",
							"sourceMap": "175:457:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820a9f58974b9aef1bc864e55eecaa7d89b70cbab2f27e2d10ef4e73374eb4b22e764736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xA9 CREATE2 DUP10 PUSH21 0xB9AEF1BC864E55EECAA7D89B70CBAB2F27E2D10EF4 0xE7 CALLER PUSH21 0xEB4B22E764736F6C63430005100032000000000000 ",
							"sourceMap": "175:457:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a9f58974b9aef1bc864e55eecaa7d89b70cbab2f27e2d10ef4e73374eb4b22e764736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"libraries/UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"libraries/UQ112x112.sol\":219:613  library UQ112x112 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/UQ112x112.sol\":219:613  library UQ112x112 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820499bf3ceceb9538d9b895b04a4e23b76bef6dc66a3e87e1e5cd938ad6928d18864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820499bf3ceceb9538d9b895b04a4e23b76bef6dc66a3e87e1e5cd938ad6928d18864736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x49 SWAP12 RETURN 0xCE 0xCE 0xB9 MSTORE8 DUP14 SWAP12 DUP10 JUMPDEST DIV LOG4 0xE2 EXTCODESIZE PUSH23 0xBEF6DC66A3E87E1E5CD938AD6928D18864736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "219:394:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820499bf3ceceb9538d9b895b04a4e23b76bef6dc66a3e87e1e5cd938ad6928d18864736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x49 SWAP12 RETURN 0xCE 0xCE 0xB9 MSTORE8 DUP14 SWAP12 DUP10 JUMPDEST DIV LOG4 0xE2 EXTCODESIZE PUSH23 0xBEF6DC66A3E87E1E5CD938AD6928D18864736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "219:394:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820499bf3ceceb9538d9b895b04a4e23b76bef6dc66a3e87e1e5cd938ad6928d18864736f6c63430005100032",
									".code": [
										{
											"begin": 219,
											"end": 613,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "ADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "EQ"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"libraries/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/UQ112x112.sol\":{\"keccak256\":\"0x0cd289c012b341feda98ad4cc732ee5ce64cd5d0b106796e4c8edcdad1c2e43b\",\"urls\":[\"bzz-raw://098881b3c407c56d0e9a707f6d6bc5ced2ae78dfe58aa82055c754ee2dd4c97a\",\"dweb:/ipfs/QmQEU9ynXqGR14fYyLgQbdxYebxQsCHsgwE2hr7xAeLzCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"PancakeERC20.sol": {
				"ast": {
					"absolutePath": "PancakeERC20.sol",
					"exportedSymbols": {
						"PancakeERC20": [
							384
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "interfaces/IPancakeERC20.sol",
							"file": "./interfaces/IPancakeERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 1650,
							"src": "62:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 2111,
							"src": "103:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IPancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1649,
										"src": "164:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeERC20_$1649",
											"typeString": "contract IPancakeERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "164:13:0"
								}
							],
							"contractDependencies": [
								1649
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								1649
							],
							"name": "PancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2110,
										"src": "190:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2110",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "217:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "217:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "50616e63616b65204c5073",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "247:13:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e87cb5a4dc26cf9451529a20899fcee996799afd48d7c0db7c25e150b364661d",
											"typeString": "literal_string \"Pancake LPs\""
										},
										"value": "Pancake LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "266:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "266:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "43616b652d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "298:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d2d8c9be4057229e2281b901f5387b4a9e188ddd279c0b8a56346e366c965c6e",
											"typeString": "literal_string \"Cake-LP\""
										},
										"value": "Cake-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "313:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "313:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "354:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "354:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "386:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "394:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "386:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "405:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "436:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "444:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "436:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "463:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "455:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "507:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "648:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "690:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "762:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "770:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "762:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "781:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "825:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "848:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "824:63:0"
									},
									"src": "810:78:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "908:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "930:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "950:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "907:57:0"
									},
									"src": "893:72:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "992:426:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "1002:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1002:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1050:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1027:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1087:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1167:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1157:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1157:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1286:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1280:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1270:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1270:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1326:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1320:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1320:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1310:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1310:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1349:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "1382:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakeERC20_$384",
																					"typeString": "contract PancakeERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakeERC20_$384",
																					"typeString": "contract PancakeERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1374:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "1129:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1129:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1129:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "1106:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1106:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1087:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1087:324:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:0"
									},
									"scope": 384,
									"src": "971:447:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1475:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1485:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1515:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1499:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "1499:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1499:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1485:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1485:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1531:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1541:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1531:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1565:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1547:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1557:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1547:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "1547:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1547:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1531:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1531:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1603:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1595:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1607:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1586:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1581:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1439:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1438:27:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:0"
									},
									"scope": 384,
									"src": "1424:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1683:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1693:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1703:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1693:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1731:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1711:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1721:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1711:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "1711:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1711:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1693:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1693:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1777:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1761:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "1761:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1761:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1747:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1747:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1821:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1813:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1813:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1798:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1793:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1645:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1659:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1644:29:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1683:0:0"
									},
									"scope": 384,
									"src": "1630:208:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1947:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1957:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1967:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1957:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1957:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1985:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1957:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1957:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "2014:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2030:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "2005:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "2000:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1871:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1861:77:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:0"
									},
									"scope": 384,
									"src": "1844:199:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2147:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2157:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2167:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2157:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2195:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2175:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2185:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2175:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "2175:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2175:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2157:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2157:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2211:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2221:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2211:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2245:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2227:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2237:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2227:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "2227:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2227:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2211:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2281:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2285:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2266:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2266:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2261:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2099:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2067:71:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:0"
									},
									"scope": 384,
									"src": "2049:249:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2377:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2396:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2396:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2387:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2387:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2440:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2433:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2320:32:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2371:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2371:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2370:6:0"
									},
									"scope": 384,
									"src": "2304:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 1594,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2526:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2546:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2546:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2558:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2562:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2536:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2536:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2585:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2578:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2475:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2474:27:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2520:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2520:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2519:6:0"
									},
									"scope": 384,
									"src": "2457:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 1603,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2719:214:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2733:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2743:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2733:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2749:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2733:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2772:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2773:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2764:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2733:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "2729:141:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "2777:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2791:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 281,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 278,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2801:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2791:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 279,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "2807:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2807:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2791:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "2853:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 283,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2821:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 285,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 284,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2831:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2821:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 286,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "2837:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2837:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2821:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "2821:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2821:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2791:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "2791:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 297,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2889:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2895:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2899:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2879:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2879:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2922:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 303,
												"nodeType": "Return",
												"src": "2915:11:0"
											}
										]
									},
									"documentation": null,
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2633:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2655:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2623:71:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2713:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2713:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2712:6:0"
									},
									"scope": 384,
									"src": "2602:331:0",
									"stateMutability": "nonpayable",
									"superFunction": 1614,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "3122:543:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 323,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "3140:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "3152:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3152:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3140:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3169:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "3132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3132:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "3132:56:0"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3198:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 330,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3198:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3272:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 336,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3300:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 340,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3355:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 341,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 307,
																					"src": "3372:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 342,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3379:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 343,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "3388:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3395:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 344,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3395:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 346,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 345,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "3402:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3395:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 348,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "3412:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 338,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "3344:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3344:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3344:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 337,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "3334:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3334:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "3238:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3238:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "3215:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3215:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3198:248:0"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3456:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 354,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3456:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3493:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3501:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3504:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3507:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3483:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3483:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3456:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3527:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3555:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3547:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3527:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3561:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3581:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3561:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3527:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3588:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "3519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3519:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3519:98:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3627:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3627:31:0"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2987:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3012:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3035:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3078:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3097:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2954:158:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3122:0:0"
									},
									"scope": 384,
									"src": "2939:726:0",
									"stateMutability": "nonpayable",
									"superFunction": 1648,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "139:3528:0"
						}
					],
					"src": "36:3632:0"
				},
				"id": 0
			},
			"PancakePair.sol": {
				"ast": {
					"absolutePath": "PancakePair.sol",
					"exportedSymbols": {
						"PancakePair": [
							1433
						]
					},
					"id": 1434,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"absolutePath": "interfaces/IPancakePair.sol",
							"file": "./interfaces/IPancakePair.sol",
							"id": 387,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1960,
							"src": "62:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "PancakeERC20.sol",
							"file": "./PancakeERC20.sol",
							"id": 388,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 385,
							"src": "102:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 389,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 2036,
							"src": "131:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/UQ112x112.sol",
							"file": "./libraries/UQ112x112.sol",
							"id": 390,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 2153,
							"src": "162:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 391,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1518,
							"src": "198:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPancakeFactory.sol",
							"file": "./interfaces/IPancakeFactory.sol",
							"id": 392,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1718,
							"src": "232:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPancakeCallee.sol",
							"file": "./interfaces/IPancakeCallee.sol",
							"id": 393,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1532,
							"src": "275:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 394,
										"name": "IPancakePair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1959,
										"src": "342:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakePair_$1959",
											"typeString": "contract IPancakePair"
										}
									},
									"id": 395,
									"nodeType": "InheritanceSpecifier",
									"src": "342:12:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 396,
										"name": "PancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 384,
										"src": "356:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PancakeERC20_$384",
											"typeString": "contract PancakeERC20"
										}
									},
									"id": 397,
									"nodeType": "InheritanceSpecifier",
									"src": "356:12:1"
								}
							],
							"contractDependencies": [
								384,
								1649,
								1959
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1433,
							"linearizedBaseContracts": [
								1433,
								384,
								1649,
								1959
							],
							"name": "PancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 400,
									"libraryName": {
										"contractScope": null,
										"id": 398,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2110,
										"src": "381:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2110",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "375:25:1",
									"typeName": {
										"id": 399,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "395:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 403,
									"libraryName": {
										"contractScope": null,
										"id": 401,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2152,
										"src": "411:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2152",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "405:28:1",
									"typeName": {
										"id": 402,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "425:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": true,
									"id": 408,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "439:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 404,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "439:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 405,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "480:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "484:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "480:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 417,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "491:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 409,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "491:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "549:27:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "543:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "543:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 411,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2161,
													"src": "533:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 415,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "533:45:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 410,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "526:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "526:53:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 419,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "586:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 418,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "586:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "614:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 423,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "641:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 422,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "641:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 425,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "669:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 424,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "765:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 426,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "765:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "861:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 428,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "861:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "958:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "958:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 433,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "996:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 432,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "996:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 435,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "1034:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 434,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1034:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 438,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "1138:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 436,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1138:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1162:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1185:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1203:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1215:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1203:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204c4f434b4544",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1218:17:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															},
															"value": "Pancake: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "1195:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "1195:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1246:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1257:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1246:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1246:12:1"
											},
											{
												"id": 451,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1279:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1290:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1279:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1279:12:1"
											}
										]
									},
									"documentation": null,
									"id": 457,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:2:1"
									},
									"src": "1169:129:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "1414:117:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 466,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1424:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 467,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1436:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1424:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "1424:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 470,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1454:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 471,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1466:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1454:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "1454:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1484:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 475,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1506:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1484:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1484:40:1"
											}
										]
									},
									"documentation": null,
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1348:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 459,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1367:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 461,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1386:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 463,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1386:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1347:66:1"
									},
									"scope": 1433,
									"src": "1304:227:1",
									"stateMutability": "view",
									"superFunction": 1901,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1607:212:1",
										"statements": [
											{
												"assignments": [
													489,
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "1618:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 488,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1618:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 491,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "1632:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 490,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1632:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 501,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 496,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1687:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 497,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "1697:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "1701:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "1664:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1664:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1664:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 492,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1653:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1653:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1617:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 503,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1726:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 504,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "1738:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1738:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1753:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1738:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 510,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "1769:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1776:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 512,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1775:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 508,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "1758:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1758:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1758:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1738:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 515,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1737:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1726:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a205452414e534645525f4641494c4544",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1785:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															},
															"value": "Pancake: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "1718:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:94:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1718:94:1"
											}
										]
									},
									"documentation": null,
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1575:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1587:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1587:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1559:39:1"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:0:1"
									},
									"scope": 1433,
									"src": "1537:282:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 529,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1836:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1860:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1860:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1874:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1874:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1835:52:1"
									},
									"src": "1825:63:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 539,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1904:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1928:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1928:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1942:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1956:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1903:72:1"
									},
									"src": "1893:83:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 553,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2001:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2033:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2033:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2057:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2057:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2081:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2081:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2106:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2106:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2131:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1991:164:1"
									},
									"src": "1981:175:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 559,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2172:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 554,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2190:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 556,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:36:1"
									},
									"src": "2161:47:1"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2235:37:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 562,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 563,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2255:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2255:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2245:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2245:20:1"
											}
										]
									},
									"documentation": null,
									"id": 568,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 1433,
									"src": "2214:58:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "2397:141:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 576,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "2415:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2415:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 578,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2429:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2415:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20464f5242494444454e",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2438:20:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															},
															"value": "Pancake: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "2407:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "2407:52:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 583,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2489:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 584,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "2498:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2489:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "2489:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 587,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2515:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 588,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "2524:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2515:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2515:16:1"
											}
										]
									},
									"documentation": null,
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2354:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2371:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2353:34:1"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:0:1"
									},
									"scope": 1433,
									"src": "2334:204:1",
									"stateMutability": "nonpayable",
									"superFunction": 1958,
									"visibility": "external"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "2713:752:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 604,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "2731:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2751:2:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2752:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2743:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2743:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2731:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 610,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "2758:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2778:2:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2779:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2770:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2770:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2758:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2731:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204f564552464c4f57",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2783:19:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															},
															"value": "Pancake: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "2723:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "2723:80:1"
											},
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "2813:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 620,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2813:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 623,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "2844:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2844:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2862:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2865:2:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2862:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "2844:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2837:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2813:55:1"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "2878:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 631,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2878:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 633,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2899:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 634,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "2916:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2899:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2878:56:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 637,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "2971:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2985:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2971:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 640,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "2990:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3003:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2990:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2971:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 644,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3008:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3021:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3008:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2971:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 677,
												"nodeType": "IfStatement",
												"src": "2967:332:1",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "3024:275:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 648,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3098:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 655,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 598,
																						"src": "3161:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 652,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "3144:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 650,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2152,
																								"src": "3127:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2152_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2133,
																							"src": "3127:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 653,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3127:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "3127:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3127:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3122:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3122:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "3175:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3122:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3098:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 661,
															"nodeType": "ExpressionStatement",
															"src": "3098:88:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 662,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3200:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 669,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "3263:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 666,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 598,
																								"src": "3246:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 664,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2152,
																								"src": "3229:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2152_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 665,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2133,
																							"src": "3229:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 667,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3229:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "3229:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3229:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3224:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3224:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 672,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "3277:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3224:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3200:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 675,
															"nodeType": "ExpressionStatement",
															"src": "3200:88:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 678,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "3308:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 680,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "3327:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3319:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3319:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3308:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3308:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 686,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "3365:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3357:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3357:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3346:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "3346:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 690,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3384:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 691,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3405:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3384:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "3384:35:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 695,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3439:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 696,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3449:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 694,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															559
														],
														"referencedDeclaration": 559,
														"src": "3434:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3434:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "3429:29:1"
											}
										]
									},
									"documentation": null,
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2637:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2637:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 597,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2686:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 599,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2636:68:1"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2713:0:1"
									},
									"scope": 1433,
									"src": "2620:845:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "3636:747:1",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "3646:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 709,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3646:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 712,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3678:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 711,
																"name": "IPancakeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "3662:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$1717_$",
																	"typeString": "type(contract IPancakeFactory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3662:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeFactory_$1717",
																"typeString": "contract IPancakeFactory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1666,
														"src": "3662:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3646:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 717,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3704:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 718,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3712:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3729:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3721:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3721:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "3712:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3704:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "3704:27:1"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "3741:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3741:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 728,
												"initialValue": {
													"argumentTypes": null,
													"id": 727,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3755:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3741:19:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 729,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 707,
													"src": "3789:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4330:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4340:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4330:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 809,
													"nodeType": "IfStatement",
													"src": "4326:51:1",
													"trueBody": {
														"id": 808,
														"nodeType": "Block",
														"src": "4343:34:1",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 804,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "4357:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4365:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4357:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 807,
																"nodeType": "ExpressionStatement",
																"src": "4357:9:1"
															}
														]
													}
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "3785:592:1",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "3796:524:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 730,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "3814:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3824:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3814:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 799,
															"nodeType": "IfStatement",
															"src": "3810:500:1",
															"trueBody": {
																"id": 798,
																"nodeType": "Block",
																"src": "3827:483:1",
																"statements": [
																	{
																		"assignments": [
																			734
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 734,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 798,
																				"src": "3845:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 733,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3845:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 744,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 741,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 704,
																							"src": "3888:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 738,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 702,
																									"src": "3873:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 737,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3868:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 739,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3868:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 740,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2109,
																						"src": "3868:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3868:30:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 735,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2035,
																					"src": "3858:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2034,
																				"src": "3858:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3858:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3845:54:1"
																	},
																	{
																		"assignments": [
																			746
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 746,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 798,
																				"src": "3917:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 745,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3917:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 751,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 749,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "3944:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 747,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2035,
																					"src": "3934:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2034,
																				"src": "3934:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3934:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3917:34:1"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 752,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "3973:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 753,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "3981:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3973:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 797,
																		"nodeType": "IfStatement",
																		"src": "3969:327:1",
																		"trueBody": {
																			"id": 796,
																			"nodeType": "Block",
																			"src": "3992:304:1",
																			"statements": [
																				{
																					"assignments": [
																						756
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 756,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 796,
																							"src": "4014:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 755,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4014:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 767,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "38",
																								"id": 765,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4073:1:1",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 761,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 746,
																												"src": "4057:9:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 759,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 734,
																												"src": "4047:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 760,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2081,
																											"src": "4047:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 762,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4047:20:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 757,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 19,
																										"src": "4031:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 758,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4031:15:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 763,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4031:37:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 764,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2109,
																							"src": "4031:41:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 766,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4031:44:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4014:61:1"
																				},
																				{
																					"assignments": [
																						769
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 769,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 796,
																							"src": "4097:16:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 768,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4097:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 780,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "38",
																										"id": 777,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4148:1:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										},
																										"value": "8"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 775,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 746,
																										"src": "4134:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 776,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4134:13:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 778,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4134:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "3137",
																										"id": 772,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4126:2:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										},
																										"value": "17"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 770,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 734,
																										"src": "4116:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 771,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4116:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 773,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4116:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 774,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2059,
																							"src": "4116:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 779,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4116:35:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4097:54:1"
																				},
																				{
																					"assignments": [
																						782
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 782,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 796,
																							"src": "4173:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 781,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4173:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 786,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 783,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 756,
																							"src": "4190:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 784,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 769,
																							"src": "4202:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4190:23:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4173:40:1"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 789,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 787,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 782,
																							"src": "4239:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 788,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4251:1:1",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4239:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 795,
																					"nodeType": "IfStatement",
																					"src": "4235:42:1",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 791,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 710,
																									"src": "4260:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 792,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 782,
																									"src": "4267:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 790,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 121,
																								"src": "4254:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 793,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4254:23:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 794,
																						"nodeType": "ExpressionStatement",
																						"src": "4254:23:1"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "3569:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 701,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "3588:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 703,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3568:38:1"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "3624:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3624:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3623:12:1"
									},
									"scope": 1433,
									"src": "3551:832:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "4557:1152:1",
										"statements": [
											{
												"assignments": [
													822,
													824,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4568:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 821,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4568:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 824,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4587:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 823,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4587:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 827,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 825,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "4609:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4609:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4567:55:1"
											},
											{
												"assignments": [
													829
												],
												"declarations": [
													{
														"constant": false,
														"id": 829,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4647:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 828,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4647:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 835,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4696:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4688:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4688:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 831,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "4670:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 830,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4663:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4663:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "4663:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4663:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4647:55:1"
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4712:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 839,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4712:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 846,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4761:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4753:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 842,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "4735:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 841,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4728:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "4728:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4728:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4712:55:1"
											},
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4777:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4777:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 854,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4805:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 852,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "4792:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "4792:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4792:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4777:38:1"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4825:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4825:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 861,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4853:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 859,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "4840:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "4840:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4840:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4825:38:1"
											},
											{
												"assignments": [
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4874:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 864,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4874:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 867,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4896:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 868,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4907:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 866,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4887:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4887:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4874:43:1"
											},
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "4927:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 871,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"argumentTypes": null,
													"id": 873,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "4947:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4927:31:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 875,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "5050:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5066:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5050:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 917,
													"nodeType": "Block",
													"src": "5270:123:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 899,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "5284:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 904,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 872,
																						"src": "5317:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 902,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 851,
																						"src": "5305:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 903,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "5305:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5305:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 906,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "5333:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5305:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 910,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 872,
																						"src": "5356:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 908,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 858,
																						"src": "5344:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "5344:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5344:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 912,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "5372:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5344:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 900,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2035,
																			"src": "5296:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1980,
																		"src": "5296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5296:86:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5284:98:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 916,
															"nodeType": "ExpressionStatement",
															"src": "5284:98:1"
														}
													]
												},
												"id": 918,
												"nodeType": "IfStatement",
												"src": "5046:347:1",
												"trueBody": {
													"id": 898,
													"nodeType": "Block",
													"src": "5069:195:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 878,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "5083:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 887,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "5131:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 883,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 858,
																							"src": "5117:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 881,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 851,
																							"src": "5105:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 882,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2109,
																						"src": "5105:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 884,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5105:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 879,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2035,
																					"src": "5095:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2034,
																				"src": "5095:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5095:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "5095:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5095:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "5083:66:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5176:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5168:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5168:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 895,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "5180:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 891,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "5162:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5162:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "5162:36:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 920,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "5410:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5422:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5410:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5425:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "5402:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5402:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "5402:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 927,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5482:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 928,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "5476:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5476:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "5476:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 932,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "5515:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 933,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "5525:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 934,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "5535:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 935,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5546:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 931,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5507:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5507:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "5507:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 938,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 865,
													"src": "5570:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 948,
												"nodeType": "IfStatement",
												"src": "5566:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 939,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5577:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 944,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "5604:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 941,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "5590:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5585:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5585:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "5585:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5585:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5577:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 947,
													"nodeType": "ExpressionStatement",
													"src": "5577:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 950,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "5673:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5673:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 952,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "5685:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 953,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "5694:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 949,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															529
														],
														"referencedDeclaration": 529,
														"src": "5668:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5668:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "EmitStatement",
												"src": "5663:39:1"
											}
										]
									},
									"documentation": null,
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 817,
											"modifierName": {
												"argumentTypes": null,
												"id": 816,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "4527:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4527:4:1"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4506:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4505:12:1"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4541:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4540:16:1"
									},
									"scope": 1433,
									"src": "4492:1217:1",
									"stateMutability": "nonpayable",
									"superFunction": 1923,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "5895:1365:1",
										"statements": [
											{
												"assignments": [
													969,
													971,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "5906:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 968,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5906:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 971,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "5925:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 970,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5925:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 974,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 972,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "5947:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5947:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5905:55:1"
											},
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "5985:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 975,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"argumentTypes": null,
													"id": 977,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "6003:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5985:24:1"
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "6065:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6065:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"argumentTypes": null,
													"id": 981,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "6083:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6065:24:1"
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "6145:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6145:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 990,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6195:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6187:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6187:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 986,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "6168:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 985,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "6161:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6161:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "6161:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6161:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6145:56:1"
											},
											{
												"assignments": [
													995
												],
												"declarations": [
													{
														"constant": false,
														"id": 995,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "6211:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 994,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6211:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1001,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6261:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6253:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6253:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 997,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "6234:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 996,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "6227:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6227:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "6227:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6227:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6211:56:1"
											},
											{
												"assignments": [
													1006
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "6277:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1005,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6277:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1007,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "6294:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1011,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1009,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "6312:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PancakePair_$1433",
																	"typeString": "contract PancakePair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_PancakePair_$1433",
																	"typeString": "contract PancakePair"
																}
															],
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6304:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6304:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6294:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6277:41:1"
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "6329:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1013,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6329:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1016,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "6351:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "6362:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1015,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "6342:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6342:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6329:43:1"
											},
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "6382:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1020,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6382:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"argumentTypes": null,
													"id": 1022,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "6402:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6382:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1024,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "6501:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "6525:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "6511:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "6511:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6511:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1029,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "6537:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6511:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6501:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "6501:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1033,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6607:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1036,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6631:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1034,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "6617:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "6617:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6617:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1038,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "6643:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6617:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6607:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "6607:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1043,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "6721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6731:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6721:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1046,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "6736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6746:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6736:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6721:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "6713:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6713:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "6713:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1055,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6814:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1433",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6806:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6806:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1057,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6821:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "6800:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6800:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "6800:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1061,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "6855:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6864:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1063,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "6868:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "6841:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "6841:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1067,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "6900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1068,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1069,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "6913:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "6886:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6886:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "6886:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1072,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "6931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1078,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "6976:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakePair_$1433",
																			"typeString": "contract PancakePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakePair_$1433",
																			"typeString": "contract PancakePair"
																		}
																	],
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6968:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6968:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1074,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "6949:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1073,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "6942:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6942:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1478,
															"src": "6942:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6942:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6931:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "6931:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1083,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "6992:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1089,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "7037:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakePair_$1433",
																			"typeString": "contract PancakePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakePair_$1433",
																			"typeString": "contract PancakePair"
																		}
																	],
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7029:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7029:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1085,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "7010:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1084,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "7003:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7003:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1478,
															"src": "7003:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7003:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6992:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "6992:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1095,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7062:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1096,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7072:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1097,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "7082:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1098,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "7093:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1094,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7054:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "7054:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1101,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1014,
													"src": "7117:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "7113:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1102,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "7124:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1107,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "7151:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1104,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "7137:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7132:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "7132:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7132:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7124:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1110,
													"nodeType": "ExpressionStatement",
													"src": "7124:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "7220:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7220:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1115,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "7232:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1116,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "7241:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "7250:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1112,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															539
														],
														"referencedDeclaration": 539,
														"src": "7215:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7215:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "7210:43:1"
											}
										]
									},
									"documentation": null,
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 962,
											"modifierName": {
												"argumentTypes": null,
												"id": 961,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "5853:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5853:4:1"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "5832:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5831:12:1"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "5867:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5867:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "5881:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5881:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5866:28:1"
									},
									"scope": 1433,
									"src": "5818:1442:1",
									"stateMutability": "nonpayable",
									"superFunction": 1932,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "7464:1761:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1135,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "7482:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7495:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7482:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1138,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "7500:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7513:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7500:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7482:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7516:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "7474:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "7474:80:1"
											},
											{
												"assignments": [
													1146,
													1148,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "7565:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1145,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7565:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1148,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "7584:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1147,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7584:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1151,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1149,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "7606:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7606:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7564:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1153,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "7652:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1154,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "7665:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "7652:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1156,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "7678:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1157,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "7691:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "7678:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7652:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c4951554944495459",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7702:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "7644:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7644:92:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "7644:92:1"
											},
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "7747:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1163,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7747:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7747:13:1"
											},
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "7770:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1166,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7770:13:1"
											},
											{
												"id": 1246,
												"nodeType": "Block",
												"src": "7793:635:1",
												"statements": [
													{
														"assignments": [
															1170
														],
														"declarations": [
															{
																"constant": false,
																"id": 1170,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 1246,
																"src": "7858:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1169,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7858:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1172,
														"initialValue": {
															"argumentTypes": null,
															"id": 1171,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7876:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7858:24:1"
													},
													{
														"assignments": [
															1174
														],
														"declarations": [
															{
																"constant": false,
																"id": 1174,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 1246,
																"src": "7892:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7892:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1176,
														"initialValue": {
															"argumentTypes": null,
															"id": 1175,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7910:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7892:24:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1178,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "7934:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1179,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "7940:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7934:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1181,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "7951:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1182,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "7957:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7951:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7934:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a20494e56414c49445f544f",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7966:21:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	},
																	"value": "Pancake: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	}
																],
																"id": 1177,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2171
																],
																"referencedDeclaration": 2171,
																"src": "7926:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7926:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "7926:62:1"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1188,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "8002:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8015:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8002:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1197,
														"nodeType": "IfStatement",
														"src": "7998:58:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1192,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1170,
																		"src": "8032:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1193,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "8041:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1194,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "8045:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1191,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "8018:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8018:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1196,
															"nodeType": "ExpressionStatement",
															"src": "8018:38:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1198,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "8104:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8117:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8104:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1207,
														"nodeType": "IfStatement",
														"src": "8100:58:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1202,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "8134:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1203,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "8143:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1204,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "8147:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1201,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "8120:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8120:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1206,
															"nodeType": "ExpressionStatement",
															"src": "8120:38:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1208,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "8206:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8206:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8220:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8206:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1223,
														"nodeType": "IfStatement",
														"src": "8202:93:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1216,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "8254:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8254:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1218,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "8266:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1219,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "8278:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1220,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "8290:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1213,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "8238:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1212,
																			"name": "IPancakeCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "8223:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPancakeCallee_$1531_$",
																				"typeString": "type(contract IPancakeCallee)"
																			}
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8223:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeCallee_$1531",
																			"typeString": "contract IPancakeCallee"
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pancakeCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1530,
																	"src": "8223:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8223:72:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "ExpressionStatement",
															"src": "8223:72:1"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1224,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "8305:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1230,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "8350:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakePair_$1433",
																					"typeString": "contract PancakePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakePair_$1433",
																					"typeString": "contract PancakePair"
																				}
																			],
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8342:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1226,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "8323:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1225,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "8316:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8316:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1478,
																	"src": "8316:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8316:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8305:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1234,
														"nodeType": "ExpressionStatement",
														"src": "8305:51:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1235,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "8366:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1241,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "8411:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakePair_$1433",
																					"typeString": "contract PancakePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakePair_$1433",
																					"typeString": "contract PancakePair"
																				}
																			],
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8403:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8403:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1237,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1174,
																				"src": "8384:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1236,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "8377:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8377:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1478,
																	"src": "8377:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8377:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8366:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1245,
														"nodeType": "ExpressionStatement",
														"src": "8366:51:1"
													}
												]
											},
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "8437:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1247,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8437:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1262,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1249,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "8454:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1250,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "8465:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1251,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "8477:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8465:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8454:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8528:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8454:75:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1254,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "8490:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1255,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "8502:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1256,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "8514:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8502:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8501:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8490:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8437:92:1"
											},
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "8539:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8539:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1278,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1265,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "8556:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1266,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "8567:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1267,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "8579:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8567:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8556:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8630:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8556:75:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1270,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "8592:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1271,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "8604:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1272,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "8616:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8604:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1274,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8603:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8592:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8539:92:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1280,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "8649:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8661:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8649:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1283,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "8666:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8678:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8666:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8649:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8681:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "8641:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "8641:77:1"
											},
											{
												"id": 1338,
												"nodeType": "Block",
												"src": "8728:350:1",
												"statements": [
													{
														"assignments": [
															1291
														],
														"declarations": [
															{
																"constant": false,
																"id": 1291,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1338,
																"src": "8802:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1290,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8802:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1303,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 1299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8865:2:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1297,
																					"name": "amount0In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "8851:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8851:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8851:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8840:5:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1292,
																					"name": "balance0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1164,
																					"src": "8827:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8827:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8827:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "8827:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8827:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1302,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8826:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8802:68:1"
													},
													{
														"assignments": [
															1305
														],
														"declarations": [
															{
																"constant": false,
																"id": 1305,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1338,
																"src": "8880:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1304,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8880:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1317,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 1313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8943:2:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1311,
																					"name": "amount1In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "8929:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8929:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8929:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8918:5:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1306,
																					"name": "balance1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "8905:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8905:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8905:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "8905:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8905:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1316,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8904:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8880:68:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1321,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1305,
																				"src": "8987:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1319,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "8966:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2109,
																			"src": "8966:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8966:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9043:5:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9050:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "9043:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1327,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1148,
																						"src": "9028:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1324,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1146,
																								"src": "9013:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 1323,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9008:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 1325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9008:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "9008:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9008:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2109,
																			"src": "9008:34:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9008:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8966:86:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a204b",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9054:12:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	},
																	"value": "Pancake: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	}
																],
																"id": 1318,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2171
																],
																"referencedDeclaration": 2171,
																"src": "8958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8958:109:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1337,
														"nodeType": "ExpressionStatement",
														"src": "8958:109:1"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1340,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "9096:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1341,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "9106:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1342,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "9116:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1343,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "9127:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1339,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "9088:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9088:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "9088:49:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1347,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "9157:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9157:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1349,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "9169:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1350,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "9180:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1351,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "9191:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1352,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "9203:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "9215:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1346,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															553
														],
														"referencedDeclaration": 553,
														"src": "9152:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9152:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "EmitStatement",
												"src": "9147:71:1"
											}
										]
									},
									"documentation": null,
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1132,
											"modifierName": {
												"argumentTypes": null,
												"id": 1131,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "7459:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7459:4:1"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "7383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7383:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "7400:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "7417:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7417:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "7429:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7429:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7382:67:1"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7464:0:1"
									},
									"scope": 1433,
									"src": "7369:1856:1",
									"stateMutability": "nonpayable",
									"superFunction": 1943,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "9311:289:1",
										"statements": [
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "9321:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1364,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9321:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"argumentTypes": null,
													"id": 1366,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "9339:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9321:24:1"
											},
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "9370:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1368,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9370:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"argumentTypes": null,
													"id": 1370,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "9388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9370:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1373,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "9442:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1384,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "9491:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1380,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "9480:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PancakePair_$1433",
																						"typeString": "contract PancakePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PancakePair_$1433",
																						"typeString": "contract PancakePair"
																					}
																				],
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9472:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9472:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1376,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "9453:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1375,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1517,
																				"src": "9446:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9446:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1478,
																		"src": "9446:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9446:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2081,
																"src": "9446:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9446:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1372,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "9419:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9419:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "9419:82:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1389,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "9525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1390,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "9534:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1400,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "9583:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1396,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "9572:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PancakePair_$1433",
																						"typeString": "contract PancakePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PancakePair_$1433",
																						"typeString": "contract PancakePair"
																					}
																				],
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9564:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9564:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1392,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "9545:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1391,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1517,
																				"src": "9538:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9538:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1478,
																		"src": "9538:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9538:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2081,
																"src": "9538:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9538:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1388,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "9511:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9511:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "9511:82:1"
											}
										]
									},
									"documentation": null,
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1362,
											"modifierName": {
												"argumentTypes": null,
												"id": 1361,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "9306:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9306:4:1"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "9285:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9284:12:1"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9311:0:1"
									},
									"scope": 1433,
									"src": "9271:329:1",
									"stateMutability": "nonpayable",
									"superFunction": 1948,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "9676:126:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1416,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "9727:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PancakePair_$1433",
																				"typeString": "contract PancakePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PancakePair_$1433",
																				"typeString": "contract PancakePair"
																			}
																		],
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9719:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9719:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1412,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "9701:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1411,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "9694:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9694:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1478,
																"src": "9694:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1424,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "9768:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PancakePair_$1433",
																				"typeString": "contract PancakePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PancakePair_$1433",
																				"typeString": "contract PancakePair"
																			}
																		],
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9760:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9760:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1420,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "9742:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1419,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "9735:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9735:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1478,
																"src": "9735:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9735:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "9776:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1428,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "9786:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1410,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "9686:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9686:109:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "9686:109:1"
											}
										]
									},
									"documentation": null,
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1408,
											"modifierName": {
												"argumentTypes": null,
												"id": 1407,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "9671:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9671:4:1"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9659:2:1"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9676:0:1"
									},
									"scope": 1433,
									"src": "9646:156:1",
									"stateMutability": "nonpayable",
									"superFunction": 1951,
									"visibility": "external"
								}
							],
							"scope": 1434,
							"src": "318:9486:1"
						}
					],
					"src": "36:9769:1"
				},
				"id": 1
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1517
						]
					},
					"id": 1518,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1435,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1517,
							"linearizedBaseContracts": [
								1517
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1443,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "100:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "123:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "148:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:63:2"
									},
									"src": "85:78:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1451,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "183:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "205:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "225:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "182:57:2"
									},
									"src": "168:72:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:2"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "285:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "285:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:15:2"
									},
									"scope": 1517,
									"src": "246:54:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:2"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "347:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "346:15:2"
									},
									"scope": 1517,
									"src": "306:56:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:2"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "411:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1463,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "411:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:7:2"
									},
									"scope": 1517,
									"src": "368:50:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:2"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "470:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:9:2"
									},
									"scope": 1517,
									"src": "424:55:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "504:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:15:2"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "542:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:9:2"
									},
									"scope": 1517,
									"src": "485:66:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "576:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "591:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "575:32:2"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "630:9:2"
									},
									"scope": 1517,
									"src": "557:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:32:2"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "713:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:6:2"
									},
									"scope": 1517,
									"src": "646:73:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "743:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "755:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "742:27:2"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "788:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:6:2"
									},
									"scope": 1517,
									"src": "725:69:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "831:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "853:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "873:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:71:2"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "911:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:6:2"
									},
									"scope": 1517,
									"src": "800:117:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1518,
							"src": "62:857:2"
						}
					],
					"src": "36:884:2"
				},
				"id": 2
			},
			"interfaces/IPancakeCallee.sol": {
				"ast": {
					"absolutePath": "interfaces/IPancakeCallee.sol",
					"exportedSymbols": {
						"IPancakeCallee": [
							1531
						]
					},
					"id": 1532,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1519,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1531,
							"linearizedBaseContracts": [
								1531
							],
							"name": "IPancakeCallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pancakeCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "123:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "147:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "197:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "197:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "113:109:3"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:3"
									},
									"scope": 1531,
									"src": "93:139:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1532,
							"src": "62:172:3"
						}
					],
					"src": "36:199:3"
				},
				"id": 3
			},
			"interfaces/IPancakeERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IPancakeERC20.sol",
					"exportedSymbols": {
						"IPancakeERC20": [
							1649
						]
					},
					"id": 1650,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1533,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1649,
							"linearizedBaseContracts": [
								1649
							],
							"name": "IPancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1541,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "107:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "130:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "155:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:63:4"
									},
									"src": "92:78:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1549,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "190:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "212:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "232:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:57:4"
									},
									"src": "175:72:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:2:4"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "292:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "292:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "291:15:4"
									},
									"scope": 1649,
									"src": "253:54:4",
									"stateMutability": "pure",
									"superFunction": 1740,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "354:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:15:4"
									},
									"scope": 1649,
									"src": "313:56:4",
									"stateMutability": "pure",
									"superFunction": 1745,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "418:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1561,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "418:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:7:4"
									},
									"scope": 1649,
									"src": "375:50:4",
									"stateMutability": "pure",
									"superFunction": 1750,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:4"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "477:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:9:4"
									},
									"scope": 1649,
									"src": "431:55:4",
									"stateMutability": "view",
									"superFunction": 1755,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "510:15:4"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "549:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "548:9:4"
									},
									"scope": 1649,
									"src": "492:66:4",
									"stateMutability": "view",
									"superFunction": 1762,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "583:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "598:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:32:4"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "638:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "637:9:4"
									},
									"scope": 1649,
									"src": "564:83:4",
									"stateMutability": "view",
									"superFunction": 1771,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "687:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:32:4"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "720:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:4"
									},
									"scope": 1649,
									"src": "653:73:4",
									"stateMutability": "nonpayable",
									"superFunction": 1780,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "750:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "762:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:27:4"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "795:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:6:4"
									},
									"scope": 1649,
									"src": "732:69:4",
									"stateMutability": "nonpayable",
									"superFunction": 1789,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "838:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "860:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "880:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:71:4"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "918:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "917:6:4"
									},
									"scope": 1649,
									"src": "807:117:4",
									"stateMutability": "nonpayable",
									"superFunction": 1800,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:4"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "981:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "980:9:4"
									},
									"scope": 1649,
									"src": "930:60:4",
									"stateMutability": "view",
									"superFunction": 1805,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:4"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "1046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:9:4"
									},
									"scope": 1649,
									"src": "996:59:4",
									"stateMutability": "pure",
									"superFunction": 1810,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1077:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1076:15:4"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1115:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:9:4"
									},
									"scope": 1649,
									"src": "1061:63:4",
									"stateMutability": "view",
									"superFunction": 1817,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1155:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1178:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1203:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1226:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1252:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1640,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1269:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1288:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:158:4"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:4"
									},
									"scope": 1649,
									"src": "1130:183:4",
									"stateMutability": "nonpayable",
									"superFunction": 1834,
									"visibility": "external"
								}
							],
							"scope": 1650,
							"src": "62:1253:4"
						}
					],
					"src": "36:1280:4"
				},
				"id": 4
			},
			"interfaces/IPancakeFactory.sol": {
				"ast": {
					"absolutePath": "interfaces/IPancakeFactory.sol",
					"exportedSymbols": {
						"IPancakeFactory": [
							1717
						]
					},
					"id": 1718,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1651,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1717,
							"linearizedBaseContracts": [
								1717
							],
							"name": "IPancakeFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1661,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "112:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "136:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "160:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "174:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:71:5"
									},
									"src": "94:89:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:5"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "229:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:9:5"
									},
									"scope": 1717,
									"src": "189:49:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:2:5"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "290:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "289:9:5"
									},
									"scope": 1717,
									"src": "244:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "322:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "338:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "321:32:5"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "377:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "376:14:5"
									},
									"scope": 1717,
									"src": "305:86:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "415:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:9:5"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "447:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:14:5"
									},
									"scope": 1717,
									"src": "397:64:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:5"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "516:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:5"
									},
									"scope": 1717,
									"src": "467:58:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "551:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "567:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "550:32:5"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "601:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "600:14:5"
									},
									"scope": 1717,
									"src": "531:84:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "639:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:5"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:5"
									},
									"scope": 1717,
									"src": "621:36:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "687:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:9:5"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:5"
									},
									"scope": 1717,
									"src": "663:42:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "INIT_CODE_PAIR_HASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:5"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "765:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:9:5"
									},
									"scope": 1717,
									"src": "711:63:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1718,
							"src": "62:714:5"
						}
					],
					"src": "36:741:5"
				},
				"id": 5
			},
			"interfaces/IPancakePair.sol": {
				"ast": {
					"absolutePath": "interfaces/IPancakePair.sol",
					"exportedSymbols": {
						"IPancakePair": [
							1959
						]
					},
					"id": 1960,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1719,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1959,
							"linearizedBaseContracts": [
								1959
							],
							"name": "IPancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1727,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "106:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "129:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "105:63:6"
									},
									"src": "91:78:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1735,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "189:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "211:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "231:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "188:57:6"
									},
									"src": "174:72:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:6"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "291:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "291:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:15:6"
									},
									"scope": 1959,
									"src": "252:54:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:6"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "353:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:15:6"
									},
									"scope": 1959,
									"src": "312:56:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "417:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1747,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "417:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "416:7:6"
									},
									"scope": 1959,
									"src": "374:50:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:6"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "476:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "475:9:6"
									},
									"scope": 1959,
									"src": "430:55:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "510:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "509:15:6"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "548:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:9:6"
									},
									"scope": 1959,
									"src": "491:66:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "582:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "597:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "581:32:6"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "637:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:9:6"
									},
									"scope": 1959,
									"src": "563:83:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "669:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "668:32:6"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "719:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "718:6:6"
									},
									"scope": 1959,
									"src": "652:73:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "749:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "761:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:27:6"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "794:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "794:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "793:6:6"
									},
									"scope": 1959,
									"src": "731:69:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "837:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "859:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "879:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:71:6"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:6:6"
									},
									"scope": 1959,
									"src": "806:117:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:6"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "980:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:9:6"
									},
									"scope": 1959,
									"src": "929:60:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:2:6"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1044:9:6"
									},
									"scope": 1959,
									"src": "995:59:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "1076:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1075:15:6"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "1114:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1113:9:6"
									},
									"scope": 1959,
									"src": "1060:63:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1177:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1202:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1225:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1251:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1826,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1251:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1268:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1287:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1830,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1144:158:6"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:0:6"
									},
									"scope": 1959,
									"src": "1129:183:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1842,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1329:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1353:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1370:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1328:58:6"
									},
									"src": "1318:69:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1852,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1403:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1427:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1444:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1461:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:78:6"
									},
									"src": "1392:89:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1866,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1506:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1538:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1565:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1592:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1620:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1648:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1496:176:6"
									},
									"src": "1486:187:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1872,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1689:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1867,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1707:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1869,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1688:36:6"
									},
									"src": "1678:47:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:6"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1783:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1782:9:6"
									},
									"scope": 1959,
									"src": "1731:61:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:2:6"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1840:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1839:9:6"
									},
									"scope": 1959,
									"src": "1798:51:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:2:6"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1896:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1895:9:6"
									},
									"scope": 1959,
									"src": "1855:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:2:6"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1952:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1951:9:6"
									},
									"scope": 1959,
									"src": "1911:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:6"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2050:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1894,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2080:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1896,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2110:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1898,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2110:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2036:109:6"
									},
									"scope": 1959,
									"src": "1967:179:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:6"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2207:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2206:9:6"
									},
									"scope": 1959,
									"src": "2152:64:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:2:6"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2277:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2276:9:6"
									},
									"scope": 1959,
									"src": "2222:64:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:6"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "2332:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2331:9:6"
									},
									"scope": 1959,
									"src": "2292:49:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2361:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2360:12:6"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2391:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2390:19:6"
									},
									"scope": 1959,
									"src": "2347:63:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2430:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2429:12:6"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2460:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2459:34:6"
									},
									"scope": 1959,
									"src": "2416:78:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2523:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2551:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2579:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2599:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2599:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2513:111:6"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:6"
									},
									"scope": 1959,
									"src": "2500:134:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2654:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2654:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2653:12:6"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2674:0:6"
									},
									"scope": 1959,
									"src": "2640:35:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:2:6"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:0:6"
									},
									"scope": 1959,
									"src": "2681:25:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2732:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2741:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2731:18:6"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:6"
									},
									"scope": 1959,
									"src": "2712:47:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1960,
							"src": "62:2699:6"
						}
					],
					"src": "36:2726:6"
				},
				"id": 6
			},
			"libraries/Math.sol": {
				"ast": {
					"absolutePath": "libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							2035
						]
					},
					"id": 2036,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1961,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "203:34:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1970,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "213:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1971,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "217:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1972,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "221:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "217:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 1975,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "229:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "217:13:7",
														"trueExpression": {
															"argumentTypes": null,
															"id": 1974,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "225:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "213:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "213:17:7"
											}
										]
									},
									"documentation": null,
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "147:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "158:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:22:7"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "192:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:11:7"
									},
									"scope": 2035,
									"src": "134:103:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "411:242:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1987,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "425:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "425:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2023,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "609:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "609:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2031,
													"nodeType": "IfStatement",
													"src": "605:42:7",
													"trueBody": {
														"id": 2030,
														"nodeType": "Block",
														"src": "617:30:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 2026,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "635:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "631:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2029,
																"nodeType": "ExpressionStatement",
																"src": "631:5:7"
															}
														]
													}
												},
												"id": 2032,
												"nodeType": "IfStatement",
												"src": "421:226:7",
												"trueBody": {
													"id": 2022,
													"nodeType": "Block",
													"src": "432:167:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1990,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "446:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1991,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "450:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "446:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "446:5:7"
														},
														{
															"assignments": [
																1995
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1995,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 2022,
																	"src": "465:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1994,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "465:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2001,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1996,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "477:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "477:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "477:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "465:21:7"
														},
														{
															"body": {
																"id": 2020,
																"nodeType": "Block",
																"src": "514:75:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2005,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "532:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2006,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "536:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "532:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2008,
																		"nodeType": "ExpressionStatement",
																		"src": "532:5:7"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2009,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "555:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2014,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2012,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2010,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1982,
																									"src": "560:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 2011,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1995,
																									"src": "564:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "560:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2013,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1995,
																								"src": "568:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "560:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2015,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "559:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "573:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "559:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "555:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2019,
																		"nodeType": "ExpressionStatement",
																		"src": "555:19:7"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2002,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "507:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2003,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "511:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "507:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2021,
															"nodeType": "WhileStatement",
															"src": "500:89:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:11:7"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "400:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:11:7"
									},
									"scope": 2035,
									"src": "352:301:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2036,
							"src": "115:540:7"
						}
					],
					"src": "36:620:7"
				},
				"id": 7
			},
			"libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2110
						]
					},
					"id": 2111,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2110,
							"linearizedBaseContracts": [
								2110
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "267:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2047,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "286:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2048,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2039,
																				"src": "290:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2049,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2041,
																				"src": "294:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "300:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "277:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "277:49:8"
											}
										]
									},
									"documentation": null,
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "211:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "222:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:8"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "256:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:8"
									},
									"scope": 2110,
									"src": "198:135:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "408:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2069,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2066,
																			"src": "427:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2070,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "431:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2071,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2063,
																				"src": "435:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2075,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "441:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "418:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "418:50:8"
											}
										]
									},
									"documentation": null,
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "352:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "363:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:8"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "397:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:8"
									},
									"scope": 2110,
									"src": "339:136:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "550:80:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2091,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "568:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2094,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2088,
																					"src": "579:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2095,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2083,
																						"src": "583:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2096,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2085,
																						"src": "587:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2099,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2100,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "592:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2102,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "597:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "560:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "560:63:8"
											}
										]
									},
									"documentation": null,
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "494:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "505:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:8"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "539:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:8"
									},
									"scope": 2110,
									"src": "481:149:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2111,
							"src": "175:457:8"
						}
					],
					"src": "36:597:8"
				},
				"id": 8
			},
			"libraries/UQ112x112.sol": {
				"ast": {
					"absolutePath": "libraries/UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2152
						]
					},
					"id": 2153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2112,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2152,
							"linearizedBaseContracts": [
								2152
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2117,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2152,
									"src": "243:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2113,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2114,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:1:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2115,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "270:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "267:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "380:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2124,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "390:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2126,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "402:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "394:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2128,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "407:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "394:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "390:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "390:21:9"
											}
										]
									},
									"documentation": null,
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "335:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2118,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "334:11:9"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "369:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2121,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:11:9"
									},
									"scope": 2152,
									"src": "319:118:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "576:35:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2142,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "586:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2143,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "590:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2145,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "594:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "594:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "590:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "586:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "586:18:9"
											}
										]
									},
									"documentation": null,
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "520:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2134,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "531:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2136,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "519:22:9"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "565:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2139,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "564:11:9"
									},
									"scope": 2152,
									"src": "505:106:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2153,
							"src": "219:394:9"
						}
					],
					"src": "36:578:9"
				},
				"id": 9
			}
		}
	}
}